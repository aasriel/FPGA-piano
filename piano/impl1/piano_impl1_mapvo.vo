
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.12.0.240.2

// ldbanno -n Verilog -o piano_impl1_mapvo.vo -w -neg -gui -msgset D:/FPGA_Project/lattice_diamond/piano/promote.xml piano_impl1_map.ncd 
// Netlist created on Wed Aug 17 21:55:13 2022
// Netlist written on Wed Aug 17 21:55:23 2022
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module piano ( sys_clk, rst_n, key, key_pa, key_state, pwm_out1, pwm_out2 );
  input  sys_clk, rst_n;
  input  [14:0] key;
  input  key_pa, key_state;
  output pwm_out1, pwm_out2;
  wire   cnt_22, cnt_21, n111_adj_1498, n112_adj_1499, n10969, clk, n15793, 
         n15794, cnt_20, cnt_19, n113_adj_1500, n114_adj_1501, n15792, cnt_18, 
         cnt_17, n115_adj_1502, n116, n15791, cnt_16, cnt_15, n117, n118, 
         n15790, cnt_14, cnt_13, n119, n120, n15789, cnt_12, cnt_11, n121, 
         n122, n15788, cnt_10, cnt_9, n123, n124, n15787, cnt_8, cnt_7, n125, 
         n126, n15786, \u_speaker/data_out2_3 , \u_speaker/data_out1_3 , 
         \u_speaker/data_out2_2 , \u_speaker/data_out1_2 , \u_speaker/n15477 , 
         PWM_in_12_N_452_2, PWM_in_12_N_452_3, \u_speaker/n15478 , 
         \u_speaker/data_out2_1 , \u_speaker/data_out1_1 , data_out2_0, 
         data_out1_0, PWM_in_12_N_452_1, \u_speaker/PWM_in_12 , 
         \u_speaker/PWM_DDS_accumulator_12 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_13 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_12 , 
         \u_speaker/pwm_out2_N_125 , \u_speaker/n15462 , pwm_out2_c, 
         \u_speaker/PWM_in_11 , \u_speaker/PWM_DDS_accumulator_11 , 
         \u_speaker/PWM_in_10 , \u_speaker/PWM_DDS_accumulator_10 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_11 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_10 , \u_speaker/n15461 , 
         \u_speaker/PWM_in_9 , \u_speaker/PWM_DDS_accumulator_9 , 
         \u_speaker/PWM_in_8 , \u_speaker/PWM_DDS_accumulator_8 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_9 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_8 , \u_speaker/n15460 , 
         \u_speaker/PWM_in_7 , \u_speaker/PWM_DDS_accumulator_7 , 
         \u_speaker/PWM_in_6 , \u_speaker/PWM_DDS_accumulator_6 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_7 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_6 , \u_speaker/n15459 , 
         \u_speaker/PWM_in_5 , \u_speaker/PWM_DDS_accumulator_5 , 
         \u_speaker/PWM_in_4 , \u_speaker/PWM_DDS_accumulator_4 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_5 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_4 , \u_speaker/n15458 , 
         \u_speaker/PWM_in_3 , \u_speaker/PWM_DDS_accumulator_3 , 
         \u_speaker/PWM_in_2 , \u_speaker/PWM_DDS_accumulator_2 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_3 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_2 , \u_speaker/n15457 , 
         \u_speaker/PWM_in_1 , \u_speaker/PWM_DDS_accumulator_1 , 
         \u_speaker/PWM_in_0 , \u_speaker/PWM_DDS_accumulator_0 , 
         \u_speaker/PWM_DDS_accumulator_12_N_321_1 , \u_speaker/n15482 , 
         PWM_in_12_N_452_12, \u_speaker/data_out2_11 , 
         \u_speaker/data_out1_11 , \u_speaker/data_out2_10 , 
         \u_speaker/data_out1_10 , \u_speaker/n15481 , PWM_in_12_N_452_10, 
         PWM_in_12_N_452_11, \u_speaker/data_out2_9 , \u_speaker/data_out1_9 , 
         \u_speaker/data_out2_8 , \u_speaker/data_out1_8 , \u_speaker/n15480 , 
         PWM_in_12_N_452_8, PWM_in_12_N_452_9, \u_speaker/data_out2_7 , 
         \u_speaker/data_out1_7 , \u_speaker/data_out2_6 , 
         \u_speaker/data_out1_6 , \u_speaker/n15479 , PWM_in_12_N_452_6, 
         PWM_in_12_N_452_7, \u_speaker/data_out2_5 , \u_speaker/data_out1_5 , 
         \u_speaker/data_out2_4 , \u_speaker/data_out1_4 , PWM_in_12_N_452_4, 
         PWM_in_12_N_452_5, \u_speaker/count9_24 , \u_speaker/count9_23 , 
         \u_speaker/u_DDS_9/n15429 , \u_speaker/count_24_N_543_23_adj_1322 , 
         \u_speaker/count_24_N_543_24_adj_1324 , \u_speaker/count9_22 , 
         \u_speaker/count9_21 , \u_speaker/u_DDS_9/n15428 , 
         \u_speaker/count_24_N_543_21_adj_1318 , 
         \u_speaker/count_24_N_543_22_adj_1320 , \u_speaker/count9_20 , 
         \u_speaker/count9_19 , \u_speaker/u_DDS_9/n15427 , 
         \u_speaker/count_24_N_543_19_adj_1314 , 
         \u_speaker/count_24_N_543_20_adj_1316 , \u_speaker/count9_18 , 
         \u_speaker/count9_17 , \u_speaker/u_DDS_9/n15426 , 
         \u_speaker/count_24_N_543_17_adj_1310 , 
         \u_speaker/count_24_N_543_18_adj_1312 , \u_speaker/count9_16 , 
         \u_speaker/count9_15 , \u_speaker/u_DDS_9/n15425 , 
         \u_speaker/count_24_N_543_15_adj_1306 , 
         \u_speaker/count_24_N_543_16_adj_1308 , \u_speaker/count9_14 , 
         \u_speaker/u_DDS_9/count9_13 , \u_speaker/u_DDS_9/n15424 , 
         \u_speaker/count_24_N_543_13_adj_1302 , 
         \u_speaker/count_24_N_543_14_adj_1304 , \u_speaker/u_DDS_9/count9_12 , 
         \u_speaker/u_DDS_9/count9_11 , \u_speaker/u_DDS_9/n15423 , 
         \u_speaker/count_24_N_543_11_adj_1298 , 
         \u_speaker/count_24_N_543_12_adj_1300 , \u_speaker/u_DDS_9/fcw_r_10 , 
         \u_speaker/u_DDS_9/count9_10 , \u_speaker/u_DDS_9/fcw_r_9 , 
         \u_speaker/u_DDS_9/count9_9 , n18785, \u_speaker/u_DDS_9/n15422 , 
         \u_speaker/count_24_N_543_9_adj_1294 , \u_speaker/fcw_r_8_adj_1352 , 
         \u_speaker/count_24_N_543_10_adj_1296 , \u_speaker/fcw_r_8_adj_1278 , 
         \u_speaker/u_DDS_9/count9_8 , \u_speaker/u_DDS_9/count9_7 , 
         \u_speaker/u_DDS_9/n15421 , \u_speaker/count_24_N_543_7_adj_1290 , 
         \u_speaker/count_24_N_543_8_adj_1292 , \u_speaker/u_DDS_9/count9_6 , 
         \u_speaker/u_DDS_9/count9_5 , \u_speaker/u_DDS_9/n15420 , 
         \u_speaker/count_24_N_543_5_adj_1286 , 
         \u_speaker/count_24_N_543_6_adj_1288 , \u_speaker/u_DDS_9/count9_4 , 
         \u_speaker/u_DDS_9/count9_3 , \u_speaker/u_DDS_9/n15419 , 
         \u_speaker/count_24_N_543_3_adj_1282 , 
         \u_speaker/count_24_N_543_4_adj_1284 , \u_speaker/u_DDS_9/count9_2 , 
         \u_speaker/count9_1 , \u_speaker/count_24_N_543_2_adj_1280 , 
         \u_speaker/count8_24 , \u_speaker/count8_23 , 
         \u_speaker/u_DDS_8/n15416 , \u_speaker/count_24_N_543_23_adj_1374 , 
         \u_speaker/count_24_N_543_24_adj_1376 , \u_speaker/count8_22 , 
         \u_speaker/count8_21 , \u_speaker/u_DDS_8/n15415 , 
         \u_speaker/count_24_N_543_21_adj_1370 , 
         \u_speaker/count_24_N_543_22_adj_1372 , \u_speaker/count8_20 , 
         \u_speaker/count8_19 , \u_speaker/u_DDS_8/n15414 , 
         \u_speaker/count_24_N_543_19_adj_1366 , 
         \u_speaker/count_24_N_543_20_adj_1368 , \u_speaker/count8_18 , 
         \u_speaker/count8_17 , \u_speaker/u_DDS_8/n15413 , 
         \u_speaker/count_24_N_543_17_adj_1362 , 
         \u_speaker/count_24_N_543_18_adj_1364 , \u_speaker/count8_16 , 
         \u_speaker/count8_15 , \u_speaker/u_DDS_8/n15412 , 
         \u_speaker/count_24_N_543_15_adj_1358 , 
         \u_speaker/count_24_N_543_16_adj_1360 , \u_speaker/count8_14 , 
         \u_speaker/u_DDS_8/count8_13 , \u_speaker/u_DDS_8/n15411 , 
         \u_speaker/count_24_N_543_13_adj_1354 , 
         \u_speaker/count_24_N_543_14_adj_1356 , \u_speaker/u_DDS_8/count8_12 , 
         \u_speaker/u_DDS_8/count8_11 , \u_speaker/u_DDS_8/n15410 , 
         \u_speaker/count_24_N_543_11_adj_1328 , 
         \u_speaker/count_24_N_543_12_adj_1326 , \u_speaker/u_DDS_8/fcw_r_10 , 
         \u_speaker/u_DDS_8/count8_10 , \u_speaker/u_DDS_8/fcw_r_9 , 
         \u_speaker/u_DDS_8/count8_9 , \u_speaker/u_DDS_8/n15409 , 
         \u_speaker/count_24_N_543_9_adj_1336 , 
         \u_speaker/count_24_N_543_10_adj_1332 , \u_speaker/u_DDS_8/count8_8 , 
         \u_speaker/u_DDS_8/count8_7 , \u_speaker/u_DDS_8/n15408 , 
         \u_speaker/count_24_N_543_7_adj_1340 , 
         \u_speaker/count_24_N_543_8_adj_1338 , \u_speaker/u_DDS_8/count8_6 , 
         \u_speaker/u_DDS_8/count8_5 , \u_speaker/u_DDS_8/n15407 , 
         \u_speaker/count_24_N_543_5_adj_1344 , 
         \u_speaker/count_24_N_543_6_adj_1342 , \u_speaker/u_DDS_8/count8_4 , 
         \u_speaker/u_DDS_8/count8_3 , \u_speaker/u_DDS_8/n15406 , 
         \u_speaker/count_24_N_543_3_adj_1348 , 
         \u_speaker/count_24_N_543_4_adj_1346 , \u_speaker/u_DDS_8/count8_2 , 
         \u_speaker/count8_1 , \u_speaker/count_24_N_543_2_adj_1350 , 
         \u_speaker/count7_24 , \u_speaker/u_DDS_7/n15734 , 
         \u_speaker/n106_adj_1020 , \u_speaker/count7_23 , 
         \u_speaker/count7_22 , \u_speaker/u_DDS_7/n15733 , 
         \u_speaker/n108_adj_1016 , \u_speaker/n107_adj_1018 , 
         \u_speaker/count7_21 , \u_speaker/count7_20 , 
         \u_speaker/u_DDS_7/n15732 , \u_speaker/n110_adj_1012 , 
         \u_speaker/n109_adj_1014 , \u_speaker/count7_19 , 
         \u_speaker/count7_18 , \u_speaker/u_DDS_7/n15731 , 
         \u_speaker/n112_adj_1008 , \u_speaker/n111_adj_1010 , 
         \u_speaker/count7_17 , \u_speaker/count7_16 , 
         \u_speaker/u_DDS_7/n15730 , \u_speaker/n114_adj_1004 , 
         \u_speaker/n113_adj_1006 , \u_speaker/count7_15 , 
         \u_speaker/count7_14 , \u_speaker/u_DDS_7/n15729 , 
         \u_speaker/n116_adj_1000 , \u_speaker/n115_adj_1002 , 
         \u_speaker/u_DDS_7/n12 , \u_speaker/u_DDS_7/n13 , 
         \u_speaker/u_DDS_7/n15728 , \u_speaker/n118_adj_996 , 
         \u_speaker/n117_adj_998 , \u_speaker/u_DDS_7/n14 , 
         \u_speaker/u_DDS_7/n15 , \u_speaker/u_DDS_7/fcw_r_10 , 
         \u_speaker/u_DDS_7/n15727 , \u_speaker/n120_adj_992 , 
         \u_speaker/n119_adj_994 , \u_speaker/u_DDS_7/n16 , 
         \u_speaker/u_DDS_7/fcw_r_9 , \u_speaker/u_DDS_7/n17 , 
         \u_speaker/fcw_r_8 , \u_speaker/u_DDS_7/n15726 , 
         \u_speaker/n122_adj_988 , \u_speaker/n121_adj_990 , 
         \u_speaker/u_DDS_7/n18 , \u_speaker/u_DDS_7/n19 , 
         \u_speaker/u_DDS_7/n15725 , \u_speaker/n124_adj_984 , 
         \u_speaker/n123_adj_986 , \u_speaker/u_DDS_7/n20 , 
         \u_speaker/u_DDS_7/n21 , \u_speaker/u_DDS_7/fcw_r_4 , 
         \u_speaker/u_DDS_7/n15724 , \u_speaker/n126_adj_980 , 
         \u_speaker/n125_adj_982 , \u_speaker/u_DDS_7/n22 , 
         \u_speaker/u_DDS_7/fcw_r_3 , \u_speaker/u_DDS_7/n23 , 
         \u_speaker/u_DDS_7/fcw_r_2 , \u_speaker/u_DDS_7/n15723 , 
         \u_speaker/n128_adj_976 , \u_speaker/n127_adj_978 , 
         \u_speaker/u_DDS_7/n24 , \u_speaker/u_DDS_7/fcw_r_1 , 
         \u_speaker/n25_adj_972 , \u_speaker/n129_adj_974 , 
         \u_speaker/count6_24 , \u_speaker/u_DDS_6/n15404 , 
         \u_speaker/count_24_N_543_24_adj_861 , \u_speaker/count6_23 , 
         \u_speaker/count6_22 , \u_speaker/u_DDS_6/n15403 , 
         \u_speaker/count_24_N_543_22_adj_1334 , \u_speaker/count_24_N_543_23 , 
         \u_speaker/count6_21 , \u_speaker/count6_20 , 
         \u_speaker/u_DDS_6/n15402 , \u_speaker/count_24_N_543_20_adj_1126 , 
         \u_speaker/count_24_N_543_21_adj_1187 , \u_speaker/count6_19 , 
         \u_speaker/count6_18 , \u_speaker/u_DDS_6/n15401 , 
         \u_speaker/count_24_N_543_18 , \u_speaker/count_24_N_543_19_adj_1111 , 
         \u_speaker/count6_17 , \u_speaker/count6_16 , 
         \u_speaker/u_DDS_6/n15400 , \u_speaker/count_24_N_543_16_adj_1239 , 
         \u_speaker/count_24_N_543_17_adj_1330 , \u_speaker/count6_15 , 
         \u_speaker/count6_14 , \u_speaker/u_DDS_6/n15399 , 
         \u_speaker/count_24_N_543_14_adj_1115 , 
         \u_speaker/count_24_N_543_15_adj_1189 , \u_speaker/u_DDS_6/count6_13 , 
         \u_speaker/u_DDS_6/count6_12 , \u_speaker/u_DDS_6/n15398 , 
         \u_speaker/count_24_N_543_12 , \u_speaker/count_24_N_543_13_adj_1082 , 
         \u_speaker/u_DDS_6/count6_11 , \u_speaker/u_DDS_6/n6874 , 
         \u_speaker/fcw_r_2_adj_1393 , \u_speaker/u_DDS_6/n18694 , 
         \u_speaker/u_DDS_6/count6_10 , \u_speaker/u_DDS_6/n15397 , 
         \u_speaker/count_24_N_543_10 , \u_speaker/count_24_N_543_11 , 
         \u_speaker/u_DDS_6/count6_9 , \u_speaker/u_DDS_6/n4_adj_839 , 
         \u_speaker/u_DDS_6/count6_8 , \u_speaker/u_DDS_6/n4 , 
         \u_speaker/fcw_r_1 , \u_speaker/u_DDS_6/n15396 , 
         \u_speaker/count_24_N_543_8_adj_1389 , 
         \u_speaker/count_24_N_543_9_adj_1391 , \u_speaker/u_DDS_6/count6_7 , 
         \u_speaker/fcw_r_0_adj_886 , \u_speaker/u_DDS_6/n6876 , 
         \u_speaker/u_DDS_6/fcw_r_6 , \u_speaker/u_DDS_6/count6_6 , 
         \u_speaker/u_DDS_6/n15395 , \u_speaker/count_24_N_543_6_adj_1385 , 
         \u_speaker/count_24_N_543_7_adj_1387 , \u_speaker/u_DDS_6/fcw_r_5 , 
         \u_speaker/u_DDS_6/count6_5 , \u_speaker/fcw_r_4 , 
         \u_speaker/u_DDS_6/count6_4 , \u_speaker/u_DDS_6/n15394 , 
         \u_speaker/count_24_N_543_4_adj_1381 , 
         \u_speaker/count_24_N_543_5_adj_1383 , \u_speaker/u_DDS_6/count6_3 , 
         \u_speaker/count6_2 , \u_speaker/count_24_N_543_3_adj_1379 , 
         \u_speaker/count5_24 , \u_speaker/count5_23 , 
         \u_speaker/u_DDS_5/n15391 , \u_speaker/count_24_N_543_23_adj_1172 , 
         \u_speaker/count_24_N_543_24_adj_843 , \u_speaker/count5_22 , 
         \u_speaker/count5_21 , \u_speaker/u_DDS_5/n15390 , 
         \u_speaker/count_24_N_543_21 , \u_speaker/count_24_N_543_22 , 
         \u_speaker/count5_20 , \u_speaker/count5_19 , 
         \u_speaker/u_DDS_5/n15389 , \u_speaker/count_24_N_543_19_adj_1148 , 
         \u_speaker/count_24_N_543_20_adj_1146 , \u_speaker/count5_18 , 
         \u_speaker/count5_17 , \u_speaker/u_DDS_5/n15388 , 
         \u_speaker/count_24_N_543_17_adj_1156 , 
         \u_speaker/count_24_N_543_18_adj_1152 , \u_speaker/count5_16 , 
         \u_speaker/count5_15 , \u_speaker/u_DDS_5/n15387 , 
         \u_speaker/count_24_N_543_15 , \u_speaker/count_24_N_543_16_adj_1158 , 
         \u_speaker/count5_14 , \u_speaker/u_DDS_5/count5_13 , 
         \u_speaker/u_DDS_5/n15386 , \u_speaker/count_24_N_543_13_adj_1093 , 
         \u_speaker/count_24_N_543_14 , \u_speaker/u_DDS_5/count5_12 , 
         \u_speaker/u_DDS_5/count5_11 , \u_speaker/u_DDS_5/n15385 , 
         \u_speaker/count_24_N_543_11_adj_1090 , 
         \u_speaker/count_24_N_543_12_adj_1084 , \u_speaker/u_DDS_5/n6898 , 
         \u_speaker/u_DDS_5/n18674 , \u_speaker/u_DDS_5/count5_10 , 
         \u_speaker/u_DDS_5/count5_9 , \u_speaker/u_DDS_5/n4 , 
         \u_speaker/u_DDS_5/n15384 , \u_speaker/count_24_N_543_9_adj_1183 , 
         \u_speaker/count_24_N_543_10_adj_845 , \u_speaker/u_DDS_5/count5_8 , 
         \u_speaker/u_DDS_5/n4_adj_837 , \u_speaker/u_DDS_5/count5_7 , 
         \u_speaker/u_DDS_5/fcw_r_3 , \u_speaker/u_DDS_5/n15383 , 
         \u_speaker/count_24_N_543_7_adj_1185 , 
         \u_speaker/count_24_N_543_8_adj_1178 , \u_speaker/u_DDS_5/fcw_r_6 , 
         \u_speaker/u_DDS_5/count5_6 , \u_speaker/u_DDS_5/fcw_r_5 , 
         \u_speaker/u_DDS_5/count5_5 , \u_speaker/u_DDS_5/n15382 , 
         \u_speaker/count_24_N_543_5_adj_1195 , 
         \u_speaker/count_24_N_543_6_adj_1227 , \u_speaker/u_DDS_5/fcw_r_4 , 
         \u_speaker/u_DDS_5/count5_4 , \u_speaker/u_DDS_5/count5_3 , 
         \u_speaker/u_DDS_5/n15381 , \u_speaker/count_24_N_543_3_adj_1191 , 
         \u_speaker/count_24_N_543_4_adj_1231 , 
         \u_speaker/u_DDS_5/fcw_r_2_adj_838 , \u_speaker/u_DDS_5/count5_2 , 
         \u_speaker/count5_1 , \u_speaker/count_24_N_543_2_adj_1229 , 
         \u_speaker/count4_24 , \u_speaker/u_DDS_4/n15747 , 
         \u_speaker/n106_adj_970 , \u_speaker/count4_23 , 
         \u_speaker/count4_22 , \u_speaker/u_DDS_4/n15746 , 
         \u_speaker/n108_adj_966 , \u_speaker/n107_adj_968 , 
         \u_speaker/count4_21 , \u_speaker/count4_20 , 
         \u_speaker/u_DDS_4/n15745 , \u_speaker/n110_adj_962 , 
         \u_speaker/n109_adj_964 , \u_speaker/count4_19 , 
         \u_speaker/count4_18 , \u_speaker/u_DDS_4/n15744 , 
         \u_speaker/n112_adj_958 , \u_speaker/n111_adj_960 , 
         \u_speaker/count4_17 , \u_speaker/count4_16 , 
         \u_speaker/u_DDS_4/n15743 , \u_speaker/n114_adj_954 , 
         \u_speaker/n113_adj_956 , \u_speaker/count4_15 , 
         \u_speaker/count4_14 , \u_speaker/u_DDS_4/n15742 , 
         \u_speaker/n116_adj_950 , \u_speaker/n115_adj_952 , 
         \u_speaker/u_DDS_4/n12 , \u_speaker/u_DDS_4/n13 , 
         \u_speaker/u_DDS_4/n15741 , \u_speaker/n118_adj_946 , 
         \u_speaker/n117_adj_948 , \u_speaker/u_DDS_4/n14 , 
         \u_speaker/u_DDS_4/n15 , \u_speaker/u_DDS_4/n20 , 
         \u_speaker/u_DDS_4/n6923 , \u_speaker/u_DDS_4/n15740 , 
         \u_speaker/n120_adj_918 , \u_speaker/n119_adj_916 , 
         \u_speaker/u_DDS_4/n16 , \u_speaker/u_DDS_4/n4_adj_835 , 
         \u_speaker/u_DDS_4/n17 , \u_speaker/u_DDS_4/n4 , 
         \u_speaker/u_DDS_4/n15739 , \u_speaker/n122_adj_922 , 
         \u_speaker/n121_adj_920 , \u_speaker/u_DDS_4/n18 , 
         \u_speaker/u_DDS_4/n6926 , \u_speaker/u_DDS_4/n19 , 
         \u_speaker/u_DDS_4/fcw_r_6 , \u_speaker/u_DDS_4/n15738 , 
         \u_speaker/n124_adj_926 , \u_speaker/n123_adj_924 , 
         \u_speaker/u_DDS_4/n20_adj_836 , \u_speaker/u_DDS_4/fcw_r_5 , 
         \u_speaker/u_DDS_4/n21 , \u_speaker/u_DDS_4/fcw_r_4 , 
         \u_speaker/u_DDS_4/n15737 , \u_speaker/n126_adj_932 , 
         \u_speaker/n125_adj_930 , \u_speaker/u_DDS_4/n22 , 
         \u_speaker/u_DDS_4/n23 , \u_speaker/u_DDS_4/n15736 , 
         \u_speaker/n128_adj_940 , \u_speaker/n127_adj_938 , 
         \u_speaker/u_DDS_4/n24 , \u_speaker/n25_adj_944 , 
         \u_speaker/n129_adj_942 , fcw_r_15_N_495_11, n18757, 
         \u_speaker/u_DDS_4/n8304 , \u_speaker/u_DDS_4/n8294 , 
         \u_speaker/u_DDS_4/n15808 , \u_speaker/u_DDS_4/n6924 , n19846, n18784, 
         yinjie_2, \u_speaker/u_DDS_4/n8295 , \u_speaker/u_DDS_4/n8296 , 
         \u_speaker/u_DDS_4/n15807 , \u_speaker/u_DDS_4/n6925 , 
         \u_speaker/fcw_r_15_N_527_0 , yinjie_0, yinjie_1, 
         \u_speaker/yinjie_box_1 , \u_speaker/u_DDS_4/n8297 , 
         \u_speaker/u_DDS_4/n8298 , \u_speaker/u_DDS_4/n15806 , 
         \u_speaker/u_DDS_4/n8299 , \u_speaker/count3_24 , 
         \u_speaker/u_DDS_3/n15760 , \u_speaker/n106_adj_913 , 
         \u_speaker/count3_23 , \u_speaker/count3_22 , 
         \u_speaker/u_DDS_3/n15759 , \u_speaker/n108_adj_908 , 
         \u_speaker/n107_adj_910 , \u_speaker/count3_21 , 
         \u_speaker/count3_20 , \u_speaker/u_DDS_3/n15758 , 
         \u_speaker/n110_adj_904 , \u_speaker/n109_adj_906 , 
         \u_speaker/count3_19 , \u_speaker/count3_18 , 
         \u_speaker/u_DDS_3/n15757 , \u_speaker/n112_adj_900 , 
         \u_speaker/n111_adj_902 , \u_speaker/count3_17 , 
         \u_speaker/count3_16 , \u_speaker/u_DDS_3/n15756 , 
         \u_speaker/n114_adj_896 , \u_speaker/n113_adj_898 , 
         \u_speaker/count3_15 , \u_speaker/count3_14 , 
         \u_speaker/u_DDS_3/n15755 , \u_speaker/n116_adj_892 , 
         \u_speaker/n115_adj_894 , \u_speaker/u_DDS_3/n12 , 
         \u_speaker/u_DDS_3/n13 , \u_speaker/n19840 , n19839, 
         \u_speaker/u_DDS_3/n15754 , \u_speaker/n118_adj_888 , 
         \u_speaker/u_DDS_2/fcw_r_9 , \u_speaker/n117_adj_890 , 
         \u_speaker/u_DDS_2/fcw_r_10 , \u_speaker/u_DDS_3/n14 , 
         \u_speaker/u_DDS_3/n6846 , \u_speaker/u_DDS_3/n18703 , 
         \u_speaker/u_DDS_3/n15 , n18717, \u_speaker/n18705 , 
         \u_speaker/u_DDS_3/n15753 , \u_speaker/n120_adj_865 , 
         \u_speaker/u_DDS_2/fcw_r_7 , \u_speaker/n119_adj_863 , 
         \u_speaker/u_DDS_2/fcw_r_8 , \u_speaker/u_DDS_3/n16 , 
         \u_speaker/u_DDS_3/n4_adj_833 , \u_speaker/u_DDS_3/n17 , 
         \u_speaker/u_DDS_3/n4 , \u_speaker/u_DDS_3/n15752 , 
         \u_speaker/n122_adj_869 , \u_speaker/u_DDS_2/fcw_r_2 , 
         \u_speaker/n121_adj_867 , \u_speaker/u_DDS_2/fcw_r_3 , 
         \u_speaker/u_DDS_3/n18 , \u_speaker/u_DDS_3/n6848 , 
         \u_speaker/u_DDS_3/n19 , \u_speaker/u_DDS_3/fcw_r_6 , 
         \u_speaker/u_DDS_3/n15751 , \u_speaker/n124_adj_873 , 
         \u_speaker/n123_adj_871 , \u_speaker/u_DDS_3/n20 , 
         \u_speaker/u_DDS_3/fcw_r_5 , \u_speaker/u_DDS_3/n21 , 
         \u_speaker/u_DDS_3/fcw_r_4 , \u_speaker/u_DDS_3/n15750 , 
         \u_speaker/n126_adj_877 , \u_speaker/n125_adj_875 , 
         \u_speaker/u_DDS_3/n22 , \u_speaker/u_DDS_3/fcw_r_3 , 
         \u_speaker/u_DDS_3/n23 , \u_speaker/u_DDS_3/n15749 , 
         \u_speaker/n128_adj_881 , \u_speaker/n127_adj_879 , 
         \u_speaker/u_DDS_3/n24 , \u_speaker/n25_adj_885 , 
         \u_speaker/n129_adj_883 , \u_speaker/u_DDS_3/n8392 , 
         \u_speaker/u_DDS_3/n8383 , \u_speaker/u_DDS_3/n15498 , 
         \u_speaker/u_DDS_3/n6847 , \u_speaker/u_DDS_3/n8384 , 
         \u_speaker/u_DDS_3/n8385 , \u_speaker/u_DDS_3/n15497 , 
         \u_speaker/u_DDS_3/n8386 , \u_speaker/u_DDS_3/n8387 , 
         \u_speaker/u_DDS_3/n15496 , fcw_r_15_N_495_9, 
         \u_speaker/u_DDS_3/n8388 , \u_speaker/count2_24 , 
         \u_speaker/count2_23 , \u_speaker/u_DDS_2/n15494 , 
         \u_speaker/count_24_N_543_23_adj_936 , \u_speaker/count_24_N_543_24 , 
         \u_speaker/count2_22 , \u_speaker/count2_21 , 
         \u_speaker/u_DDS_2/n15493 , \u_speaker/count_24_N_543_21_adj_928 , 
         \u_speaker/count_24_N_543_22_adj_934 , \u_speaker/count2_20 , 
         \u_speaker/count2_19 , \u_speaker/u_DDS_2/n15492 , 
         \u_speaker/count_24_N_543_19 , \u_speaker/count_24_N_543_20 , 
         \u_speaker/count2_18 , \u_speaker/count2_17 , 
         \u_speaker/u_DDS_2/n15491 , \u_speaker/count_24_N_543_17_adj_1170 , 
         \u_speaker/count_24_N_543_18_adj_1174 , \u_speaker/count2_16 , 
         \u_speaker/count2_15 , \u_speaker/u_DDS_2/n15490 , 
         \u_speaker/count_24_N_543_15_adj_1168 , 
         \u_speaker/count_24_N_543_16_adj_1176 , \u_speaker/count2_14 , 
         \u_speaker/u_DDS_2/count2_13 , \u_speaker/u_DDS_2/n15489 , 
         \u_speaker/count_24_N_543_13_adj_1150 , 
         \u_speaker/count_24_N_543_14_adj_1144 , \u_speaker/u_DDS_2/count2_12 , 
         \u_speaker/u_DDS_2/count2_11 , \u_speaker/u_DDS_2/n15488 , 
         \u_speaker/count_24_N_543_11_adj_847 , 
         \u_speaker/count_24_N_543_12_adj_1166 , \u_speaker/u_DDS_2/count2_10 , 
         \u_speaker/u_DDS_2/count2_9 , \u_speaker/u_DDS_2/n15487 , 
         \u_speaker/count_24_N_543_9 , \u_speaker/count_24_N_543_10_adj_1164 , 
         \u_speaker/u_DDS_2/count2_8 , \u_speaker/u_DDS_2/count2_7 , 
         \u_speaker/u_DDS_2/n15486 , \u_speaker/count_24_N_543_7_adj_1088 , 
         \u_speaker/count_24_N_543_8_adj_1181 , \u_speaker/fcw_r_6 , 
         \u_speaker/u_DDS_2/count2_6 , \u_speaker/u_DDS_2/count2_5 , 
         \u_speaker/u_DDS_2/n15485 , \u_speaker/count_24_N_543_5 , 
         \u_speaker/count_24_N_543_6 , \u_speaker/u_DDS_2/count2_4 , 
         \u_speaker/u_DDS_2/count2_3 , \u_speaker/u_DDS_2/n15484 , 
         \u_speaker/count_24_N_543_3_adj_1193 , \u_speaker/count_24_N_543_4 , 
         \u_speaker/u_DDS_2/count2_2 , \u_speaker/count2_1 , 
         \u_speaker/count_24_N_543_2_adj_1154 , \u_speaker/count1_24 , 
         \u_speaker/u_DDS_1/n15773 , \u_speaker/n106 , \u_speaker/count1_23 , 
         \u_speaker/count1_22 , \u_speaker/u_DDS_1/n15772 , \u_speaker/n108 , 
         \u_speaker/n107 , \u_speaker/count1_21 , \u_speaker/count1_20 , 
         \u_speaker/u_DDS_1/n15771 , \u_speaker/n110 , \u_speaker/n109 , 
         \u_speaker/count1_19 , \u_speaker/count1_18 , 
         \u_speaker/u_DDS_1/n15770 , \u_speaker/n112 , \u_speaker/n111 , 
         \u_speaker/count1_17 , \u_speaker/count1_16 , 
         \u_speaker/u_DDS_1/n15769 , \u_speaker/n114 , \u_speaker/n113 , 
         \u_speaker/count1_15 , \u_speaker/count1_14 , 
         \u_speaker/u_DDS_1/n15768 , \u_speaker/n116 , \u_speaker/n115 , 
         \u_speaker/u_DDS_1/n12 , \u_speaker/u_DDS_1/n13 , 
         \u_speaker/u_DDS_1/n15767 , \u_speaker/n118 , \u_speaker/n117 , 
         \u_speaker/u_DDS_1/n14 , \u_speaker/u_DDS_1/n15 , 
         \u_speaker/fcw_r_10 , \u_speaker/u_DDS_1/n15766 , \u_speaker/n120 , 
         \u_speaker/n119 , \u_speaker/u_DDS_1/n16 , \u_speaker/fcw_r_9 , 
         \u_speaker/u_DDS_1/n17 , \u_speaker/fcw_r_8_adj_1394 , 
         \u_speaker/u_DDS_1/n15765 , \u_speaker/n122 , \u_speaker/n121 , 
         \u_speaker/u_DDS_1/n18 , \u_speaker/fcw_r_7 , \u_speaker/u_DDS_1/n19 , 
         \u_speaker/fcw_r_6_adj_1395 , \u_speaker/u_DDS_1/n15764 , 
         \u_speaker/n124 , \u_speaker/n123 , \u_speaker/u_DDS_1/n20 , 
         \u_speaker/fcw_r_5 , \u_speaker/u_DDS_1/n21 , 
         \u_speaker/fcw_r_4_adj_1396 , \u_speaker/u_DDS_1/n15763 , 
         \u_speaker/n126 , \u_speaker/n125 , \u_speaker/u_DDS_1/n22 , 
         \u_speaker/fcw_r_3 , \u_speaker/u_DDS_1/n23 , 
         \u_speaker/fcw_r_2_adj_1397 , \u_speaker/u_DDS_1/n15762 , 
         \u_speaker/n128 , \u_speaker/n127 , \u_speaker/u_DDS_1/n24 , 
         \u_speaker/fcw_r_1_adj_1398 , \u_speaker/n25_adj_860 , 
         \u_speaker/fcw_r_0 , \u_speaker/n129 , \u_speaker/u_DDS_1/n15512 , 
         \u_speaker/u_DDS_1/n7621 , \u_speaker/u_DDS_1/n15511 , 
         \u_speaker/u_DDS_1/n8 , \u_speaker/u_DDS_1/n15510 , 
         \u_speaker/u_DDS_1/n7615 , \u_speaker/u_DDS_1/n7614 , 
         \u_speaker/u_DDS_1/n9471 , \u_speaker/u_DDS_1/n15509 , 
         \u_speaker/u_DDS_1/n7617 , \u_speaker/u_DDS_1/n7616 , 
         \u_speaker/u_DDS_1/n7618 , \u_speaker/u_DDS_1/n7598 , stat, 
         \u_speaker/u_DDS_1/n15802 , \u_speaker/u_DDS_1/n15801 , 
         \u_speaker/u_DDS_1/n7600 , \u_speaker/u_DDS_1/n7599 , 
         \u_speaker/u_DDS_1/n15800 , \u_speaker/u_DDS_1/n7602 , 
         \u_speaker/u_DDS_1/n7601 , \u_speaker/u_DDS_1/n7603 , 
         \u_speaker/count13_24 , \u_speaker/count13_23 , 
         \u_speaker/u_DDS_13/n15474 , \u_speaker/count_24_N_543_23_adj_1215 , 
         \u_speaker/count_24_N_543_24_adj_1217 , \u_speaker/count13_22 , 
         \u_speaker/count13_21 , \u_speaker/u_DDS_13/n15473 , 
         \u_speaker/count_24_N_543_21_adj_1211 , 
         \u_speaker/count_24_N_543_22_adj_1213 , \u_speaker/count13_20 , 
         \u_speaker/count13_19 , \u_speaker/u_DDS_13/n15472 , 
         \u_speaker/count_24_N_543_19_adj_1207 , 
         \u_speaker/count_24_N_543_20_adj_1209 , \u_speaker/count13_18 , 
         \u_speaker/count13_17 , \u_speaker/u_DDS_13/n15471 , 
         \u_speaker/count_24_N_543_17_adj_1203 , 
         \u_speaker/count_24_N_543_18_adj_1205 , \u_speaker/count13_16 , 
         \u_speaker/count13_15 , \u_speaker/u_DDS_13/n15470 , 
         \u_speaker/count_24_N_543_15_adj_1199 , 
         \u_speaker/count_24_N_543_16_adj_1201 , \u_speaker/count13_14 , 
         \u_speaker/u_DDS_13/count13_13 , \u_speaker/u_DDS_13/n15469 , 
         \u_speaker/count_24_N_543_13 , \u_speaker/count_24_N_543_14_adj_1197 , 
         \u_speaker/u_DDS_13/count13_12 , \u_speaker/u_DDS_13/count13_11 , 
         \u_speaker/u_DDS_13/n15468 , \u_speaker/count_24_N_543_11_adj_1038 , 
         \u_speaker/count_24_N_543_12_adj_1022 , 
         \u_speaker/u_DDS_13/count13_10 , \u_speaker/u_DDS_13/count13_9 , 
         \u_speaker/u_DDS_13/n15467 , \u_speaker/count_24_N_543_9_adj_1079 , 
         \u_speaker/count_24_N_543_10_adj_1077 , 
         \u_speaker/u_DDS_13/count13_8 , \u_speaker/u_DDS_13/count13_7 , 
         \u_speaker/u_DDS_13/n15466 , \u_speaker/count_24_N_543_7_adj_841 , 
         \u_speaker/count_24_N_543_8_adj_1097 , \u_speaker/u_DDS_13/count13_6 , 
         \u_speaker/u_DDS_13/count13_5 , \u_speaker/u_DDS_13/n15465 , 
         \u_speaker/count_24_N_543_5_adj_1162 , 
         \u_speaker/count_24_N_543_6_adj_1100 , \u_speaker/u_DDS_13/count13_4 , 
         \u_speaker/u_DDS_13/count13_3 , \u_speaker/u_DDS_13/n15464 , 
         \u_speaker/count_24_N_543_3 , \u_speaker/count_24_N_543_4_adj_1142 , 
         \u_speaker/u_DDS_13/count13_2 , \u_speaker/count13_1 , 
         \u_speaker/count_24_N_543_2 , \u_speaker/count12_24 , 
         \u_speaker/u_DDS_12/n15721 , \u_speaker/n106_adj_1075 , 
         \u_speaker/count12_23 , \u_speaker/count12_22 , 
         \u_speaker/u_DDS_12/n15720 , \u_speaker/n108_adj_1071 , 
         \u_speaker/n107_adj_1073 , \u_speaker/count12_21 , 
         \u_speaker/count12_20 , \u_speaker/u_DDS_12/n15719 , 
         \u_speaker/n110_adj_1067 , \u_speaker/n109_adj_1069 , 
         \u_speaker/count12_19 , \u_speaker/count12_18 , 
         \u_speaker/u_DDS_12/n15718 , \u_speaker/n112_adj_1063 , 
         \u_speaker/n111_adj_1065 , \u_speaker/count12_17 , 
         \u_speaker/count12_16 , \u_speaker/u_DDS_12/n15717 , 
         \u_speaker/n114_adj_1059 , \u_speaker/n113_adj_1061 , 
         \u_speaker/count12_15 , \u_speaker/count12_14 , 
         \u_speaker/u_DDS_12/n15716 , \u_speaker/n116_adj_1055 , 
         \u_speaker/n115_adj_1057 , \u_speaker/u_DDS_12/n12 , 
         \u_speaker/u_DDS_12/n13 , \u_speaker/u_DDS_12/n15715 , 
         \u_speaker/n118_adj_1051 , \u_speaker/n117_adj_1053 , 
         \u_speaker/u_DDS_12/n6816 , \u_speaker/u_DDS_12/n18701 , 
         \u_speaker/u_DDS_12/n14 , \u_speaker/u_DDS_12/n15 , 
         \u_speaker/u_DDS_12/n4 , fcw_r_15_N_495_10, 
         \u_speaker/u_DDS_12/n15714 , \u_speaker/n120_adj_1026 , 
         \u_speaker/u_DDS_11/fcw_r_9 , \u_speaker/n119_adj_1024 , 
         \u_speaker/u_DDS_11/fcw_r_10 , \u_speaker/u_DDS_12/n16 , 
         \u_speaker/u_DDS_12/n4_adj_832 , \u_speaker/u_DDS_12/n17 , 
         \u_speaker/u_DDS_12/n6818 , \u_speaker/fcw_r_15_N_495_8 , 
         \u_speaker/u_DDS_12/n15713 , \u_speaker/n122_adj_1030 , 
         \u_speaker/u_DDS_11/fcw_r_7 , \u_speaker/n121_adj_1028 , 
         \u_speaker/u_DDS_11/fcw_r_8 , \u_speaker/u_DDS_12/n18 , 
         \u_speaker/u_DDS_12/fcw_r_7 , \u_speaker/u_DDS_12/n19 , 
         \u_speaker/u_DDS_12/fcw_r_6 , \u_speaker/u_DDS_12/n15712 , 
         \u_speaker/n124_adj_1034 , \u_speaker/n123_adj_1032 , 
         \u_speaker/u_DDS_12/n20 , \u_speaker/u_DDS_12/fcw_r_5 , 
         \u_speaker/u_DDS_12/n21 , \u_speaker/u_DDS_12/fcw_r_4 , 
         \u_speaker/u_DDS_12/n15711 , \u_speaker/n126_adj_1040 , 
         \u_speaker/n125_adj_1036 , \u_speaker/u_DDS_12/n22 , 
         \u_speaker/u_DDS_12/n23 , \u_speaker/u_DDS_12/n15710 , 
         \u_speaker/n128_adj_1044 , \u_speaker/n127_adj_1042 , 
         \u_speaker/u_DDS_12/n24 , \u_speaker/n25_adj_1049 , 
         \u_speaker/n129_adj_1046 , \u_speaker/u_DDS_12/n8503 , 
         \u_speaker/u_DDS_12/n8493 , \u_speaker/u_DDS_12/n15805 , 
         \u_speaker/u_DDS_12/n6817 , \u_speaker/u_DDS_12/n8494 , 
         \u_speaker/u_DDS_12/n8495 , \u_speaker/u_DDS_12/n15804 , 
         \u_speaker/u_DDS_12/n8496 , \u_speaker/u_DDS_12/n8497 , 
         \u_speaker/u_DDS_12/n15803 , \u_speaker/u_DDS_12/n8498 , 
         \u_speaker/count11_24 , \u_speaker/count11_23 , 
         \u_speaker/u_DDS_11/n15454 , \u_speaker/count_24_N_543_23_adj_1134 , 
         \u_speaker/count_24_N_543_24_adj_1136 , \u_speaker/count11_22 , 
         \u_speaker/count11_21 , \u_speaker/u_DDS_11/n15453 , 
         \u_speaker/count_24_N_543_21_adj_1130 , 
         \u_speaker/count_24_N_543_22_adj_1132 , \u_speaker/count11_20 , 
         \u_speaker/count11_19 , \u_speaker/u_DDS_11/n15452 , 
         \u_speaker/count_24_N_543_19_adj_1124 , 
         \u_speaker/count_24_N_543_20_adj_1128 , \u_speaker/count11_18 , 
         \u_speaker/count11_17 , \u_speaker/u_DDS_11/n15451 , 
         \u_speaker/count_24_N_543_17 , \u_speaker/count_24_N_543_18_adj_1122 , 
         \u_speaker/count11_16 , \u_speaker/count11_15 , 
         \u_speaker/u_DDS_11/n15450 , \u_speaker/count_24_N_543_15_adj_1119 , 
         \u_speaker/count_24_N_543_16 , \u_speaker/count11_14 , 
         \u_speaker/u_DDS_11/count11_13 , \u_speaker/u_DDS_11/n15449 , 
         \u_speaker/count_24_N_543_13_adj_1113 , 
         \u_speaker/count_24_N_543_14_adj_1117 , 
         \u_speaker/u_DDS_11/count11_12 , \u_speaker/u_DDS_11/fcw_r_11 , 
         \u_speaker/u_DDS_11/count11_11 , \u_speaker/u_DDS_11/n15448 , 
         \u_speaker/count_24_N_543_11_adj_1106 , \u_speaker/u_DDS_10/fcw_r_4 , 
         \u_speaker/count_24_N_543_12_adj_1108 , 
         \u_speaker/u_DDS_11/count11_10 , \u_speaker/u_DDS_11/count11_9 , 
         \u_speaker/u_DDS_11/n15447 , \u_speaker/count_24_N_543_9_adj_1102 , 
         \u_speaker/fcw_r_2 , \u_speaker/count_24_N_543_10_adj_1104 , 
         \u_speaker/u_DDS_10/fcw_r_3 , \u_speaker/u_DDS_11/count11_8 , 
         \u_speaker/u_DDS_11/count11_7 , \u_speaker/u_DDS_11/n15446 , 
         \u_speaker/count_24_N_543_7 , \u_speaker/count_24_N_543_8 , 
         \u_speaker/fcw_r_6_adj_1219 , \u_speaker/u_DDS_11/count11_6 , 
         \u_speaker/u_DDS_11/fcw_r_5 , \u_speaker/u_DDS_11/count11_5 , 
         \u_speaker/u_DDS_11/n15445 , \u_speaker/count_24_N_543_5_adj_1247 , 
         \u_speaker/count_24_N_543_6_adj_1233 , \u_speaker/u_DDS_11/fcw_r_4 , 
         \u_speaker/u_DDS_11/count11_4 , \u_speaker/u_DDS_11/fcw_r_3 , 
         \u_speaker/u_DDS_11/count11_3 , \u_speaker/u_DDS_11/n15444 , 
         \u_speaker/count_24_N_543_3_adj_1223 , 
         \u_speaker/count_24_N_543_4_adj_1225 , \u_speaker/u_DDS_11/fcw_r_2 , 
         \u_speaker/u_DDS_11/count11_2 , \u_speaker/count11_1 , 
         \u_speaker/count_24_N_543_2_adj_1221 , \u_speaker/count10_24 , 
         \u_speaker/u_DDS_10/n15442 , \u_speaker/count_24_N_543_24_adj_1276 , 
         \u_speaker/count10_23 , \u_speaker/count10_22 , 
         \u_speaker/u_DDS_10/n15441 , \u_speaker/count_24_N_543_22_adj_1272 , 
         \u_speaker/count_24_N_543_23_adj_1274 , \u_speaker/count10_21 , 
         \u_speaker/count10_20 , \u_speaker/u_DDS_10/n15440 , 
         \u_speaker/count_24_N_543_20_adj_1268 , 
         \u_speaker/count_24_N_543_21_adj_1270 , \u_speaker/count10_19 , 
         \u_speaker/count10_18 , \u_speaker/u_DDS_10/n15439 , 
         \u_speaker/count_24_N_543_18_adj_1264 , 
         \u_speaker/count_24_N_543_19_adj_1266 , \u_speaker/count10_17 , 
         \u_speaker/count10_16 , \u_speaker/u_DDS_10/n15438 , 
         \u_speaker/count_24_N_543_16_adj_1260 , 
         \u_speaker/count_24_N_543_17_adj_1262 , \u_speaker/count10_15 , 
         \u_speaker/count10_14 , \u_speaker/u_DDS_10/n15437 , 
         \u_speaker/count_24_N_543_14_adj_1256 , 
         \u_speaker/count_24_N_543_15_adj_1258 , 
         \u_speaker/u_DDS_10/count10_13 , \u_speaker/u_DDS_10/count10_12 , 
         \u_speaker/u_DDS_10/n15436 , \u_speaker/count_24_N_543_12_adj_1140 , 
         \u_speaker/count_24_N_543_13_adj_1138 , \u_speaker/u_DDS_10/fcw_r_11 , 
         \u_speaker/u_DDS_10/count10_11 , \u_speaker/u_DDS_10/fcw_r_10 , 
         \u_speaker/u_DDS_10/count10_10 , \u_speaker/u_DDS_10/n15435 , 
         \u_speaker/count_24_N_543_10_adj_1235 , 
         \u_speaker/count_24_N_543_11_adj_1160 , \u_speaker/u_DDS_10/fcw_r_9 , 
         \u_speaker/u_DDS_10/count10_9 , \u_speaker/u_DDS_10/fcw_r_8 , 
         \u_speaker/u_DDS_10/count10_8 , \u_speaker/u_DDS_10/n15434 , 
         \u_speaker/count_24_N_543_8_adj_1241 , 
         \u_speaker/count_24_N_543_9_adj_1237 , \u_speaker/u_DDS_10/fcw_r_7 , 
         \u_speaker/u_DDS_10/count10_7 , \u_speaker/u_DDS_10/fcw_r_6 , 
         \u_speaker/u_DDS_10/count10_6 , \u_speaker/u_DDS_10/n15433 , 
         \u_speaker/count_24_N_543_6_adj_1245 , 
         \u_speaker/count_24_N_543_7_adj_1243 , \u_speaker/u_DDS_10/fcw_r_5 , 
         \u_speaker/u_DDS_10/count10_5 , \u_speaker/u_DDS_10/count10_4 , 
         \u_speaker/u_DDS_10/n15432 , \u_speaker/count_24_N_543_4_adj_1251 , 
         \u_speaker/count_24_N_543_5_adj_1249 , \u_speaker/u_DDS_10/count10_3 , 
         \u_speaker/count10_2 , \u_speaker/count_24_N_543_3_adj_1253 , 
         \u_key_state/delay_cnt_31 , \u_key_state/n10 , 
         \u_key_state/clk_N_168_enable_505 , \u_key_state/n18788 , 
         \u_key_state/n15528 , \u_key_state/delay_cnt_30 , 
         \u_key_state/delay_cnt_29 , \u_key_state/n11 , \u_key_state/n12 , 
         \u_key_state/n15527 , \u_key_state/delay_cnt_28 , 
         \u_key_state/delay_cnt_27 , \u_key_state/n13 , \u_key_state/n14 , 
         \u_key_state/n15526 , \u_key_state/delay_cnt_26 , 
         \u_key_state/delay_cnt_25 , \u_key_state/n15 , \u_key_state/n16 , 
         \u_key_state/n15525 , \u_key_state/delay_cnt_24 , 
         \u_key_state/delay_cnt_23 , \u_key_state/n17 , \u_key_state/n18 , 
         \u_key_state/n15524 , \u_key_state/delay_cnt_22 , 
         \u_key_state/delay_cnt_21 , \u_key_state/n19 , \u_key_state/n20 , 
         \u_key_state/n15523 , \u_key_state/delay_cnt_20 , 
         \u_key_state/delay_cnt_19 , \u_key_state/n21 , \u_key_state/n15522 , 
         \u_key_state/n22 , \u_key_state/delay_cnt_18 , 
         \u_key_state/delay_cnt_17 , key_state_c, \u_key_state/n15521 , 
         \u_key_state/n24 , \u_key_state/key_reg , \u_key_state/n23 , 
         \u_key_state/delay_cnt_16 , \u_key_state/delay_cnt_15 , 
         \u_key_state/n26 , \u_key_state/n15520 , \u_key_state/n25 , 
         \u_key_state/delay_cnt_14 , \u_key_state/delay_cnt_13 , 
         \u_key_state/n28 , \u_key_state/n15519 , \u_key_state/n27 , 
         \u_key_state/delay_cnt_12 , \u_key_state/delay_cnt_11 , 
         \u_key_state/n29 , \u_key_state/n30 , \u_key_state/n15518 , 
         \u_key_state/delay_cnt_10 , \u_key_state/delay_cnt_9 , 
         \u_key_state/n31 , \u_key_state/n15517 , \u_key_state/n32 , 
         \u_key_state/delay_cnt_8 , \u_key_state/delay_cnt_7 , 
         \u_key_state/n33 , \u_key_state/n34 , \u_key_state/n15516 , 
         \u_key_state/delay_cnt_6 , \u_key_state/delay_cnt_5 , 
         \u_key_state/n36 , \u_key_state/n15515 , \u_key_state/n35 , 
         \u_key_state/delay_cnt_4 , \u_key_state/delay_cnt_3 , 
         \u_key_state/n37 , \u_key_state/n38 , \u_key_state/n15514 , 
         \u_key_state/delay_cnt_2 , \u_key_state/delay_cnt_1 , 
         \u_key_state/n39 , \u_key_state/n40 , \u_key_state/n15513 , 
         \u_key_state/delay_cnt_0 , \u_key_state/key_flag_N_639 , 
         key_state_value, \u_key_state/n41 , cnt_6, cnt_5, n127, n128, n15785, 
         cnt_4, cnt_3, n129, n130, n15784, cnt_2, cnt_1, n131, n132, n15783, 
         cnt_0, n133, count_note_7, n38_adj_1457, clk_N_168_enable_533, n10968, 
         n15708, count_note_6, count_note_5, n39, n40_adj_1456, n15707, 
         count_note_4, count_note_3, n41_adj_1455, n42_adj_1454, n15706, 
         count_note_2, count_note_1, n43, n44_adj_1453, n15705, count_note_0, 
         n45, CNT_17_N_703_17, CNT_17, n15507, n3759, CNT_17_N_703_16, CNT_16, 
         CNT_17_N_703_15, CNT_15, n15506, CNT_17_N_703_14, CNT_14, 
         CNT_17_N_703_13, CNT_13, n15505, CNT_17_N_703_12, CNT_12, 
         CNT_17_N_703_11, CNT_11, n15504, CNT_17_N_703_10, CNT_10, 
         CNT_17_N_703_9, CNT_9, n15503, CNT_17_N_703_8, CNT_8, CNT_17_N_703_7, 
         CNT_7, n15502, CNT_17_N_703_6, CNT_6, CNT_17_N_703_5, CNT_5, n15501, 
         CNT_17_N_703_4, CNT_4, CNT_17_N_703_3, CNT_3, n15500, CNT_17_N_703_2, 
         CNT_2, CNT_17_N_703_1, CNT_1, n15499, CNT_17_N_703_0, CNT_0, 
         \u_buzzer/cycle_4 , \u_buzzer/cycle_3 , \u_buzzer/n15307 , 
         \u_buzzer/n15308 , \u_buzzer/n15782 , n78, \u_buzzer/n15781 , n80, 
         n79, \u_buzzer/n15780 , n82, n81, \u_buzzer/n15779 , n84, n83, 
         \u_buzzer/n15778 , n86, n85, \u_buzzer/n15777 , n88, n87, 
         \u_buzzer/n15776 , n90, n89, \u_buzzer/n15775 , n92_adj_1476, 
         n91_adj_1475, \u_buzzer/yinjie_box_1 , \u_buzzer/n15774 , 
         n94_adj_1477, n93, \u_buzzer/yinjie_box_0 , n95, \u_buzzer/cycle_2 , 
         \u_buzzer/cycle_1 , \u_buzzer/n15306 , \u_buzzer/cycle_0 , 
         \u_buzzer/cycle_17 , \u_buzzer/n15314 , CNT_17_N_703_18, 
         \u_buzzer/cycle_16 , \u_buzzer/cycle_15 , \u_buzzer/n15313 , 
         \u_buzzer/cycle_14 , \u_buzzer/cycle_13 , \u_buzzer/n15312 , 
         \u_buzzer/cycle_12 , \u_buzzer/cycle_11 , \u_buzzer/n15311 , 
         \u_buzzer/cycle_10 , \u_buzzer/cycle_9 , \u_buzzer/n15310 , 
         \u_buzzer/cycle_8 , \u_buzzer/cycle_7 , \u_buzzer/n15309 , 
         \u_buzzer/cycle_6 , \u_buzzer/cycle_5 , \u_key_5/delay_cnt_31 , 
         \u_key_5/n10 , \u_key_5/clk_N_168_enable_325 , \u_key_5/n18798 , 
         \u_key_5/n15704 , \u_key_5/delay_cnt_30 , \u_key_5/delay_cnt_29 , 
         \u_key_5/n11 , \u_key_5/n12 , \u_key_5/n15703 , 
         \u_key_5/delay_cnt_28 , \u_key_5/delay_cnt_27 , \u_key_5/n13 , 
         \u_key_5/n14 , \u_key_5/n15702 , \u_key_5/delay_cnt_26 , 
         \u_key_5/delay_cnt_25 , \u_key_5/n15 , \u_key_5/n16 , 
         \u_key_5/n15701 , \u_key_5/delay_cnt_24 , \u_key_5/delay_cnt_23 , 
         \u_key_5/n17 , \u_key_5/n18 , \u_key_5/n15700 , 
         \u_key_5/delay_cnt_22 , \u_key_5/delay_cnt_21 , \u_key_5/n19 , 
         \u_key_5/n20 , \u_key_5/n15699 , \u_key_5/delay_cnt_20 , 
         \u_key_5/delay_cnt_19 , \u_key_5/n21 , \u_key_5/n15698 , 
         \u_key_5/n22 , \u_key_5/delay_cnt_18 , \u_key_5/delay_cnt_17 , 
         key_c_4, \u_key_5/n15697 , \u_key_5/n24 , \u_key_5/key_reg , 
         \u_key_5/n23 , \u_key_5/delay_cnt_16 , \u_key_5/delay_cnt_15 , 
         \u_key_5/n26 , \u_key_5/n15696 , \u_key_5/n25 , 
         \u_key_5/delay_cnt_14 , \u_key_5/delay_cnt_13 , \u_key_5/n28 , 
         \u_key_5/n15695 , \u_key_5/n27 , \u_key_5/delay_cnt_12 , 
         \u_key_5/delay_cnt_11 , \u_key_5/n29 , \u_key_5/n30 , 
         \u_key_5/n15694 , \u_key_5/delay_cnt_10 , \u_key_5/delay_cnt_9 , 
         \u_key_5/n31 , \u_key_5/n15693 , \u_key_5/n32 , \u_key_5/delay_cnt_8 , 
         \u_key_5/delay_cnt_7 , \u_key_5/n33 , \u_key_5/n34 , \u_key_5/n15692 , 
         \u_key_5/delay_cnt_6 , \u_key_5/delay_cnt_5 , \u_key_5/n36 , 
         \u_key_5/n15691 , \u_key_5/n35 , \u_key_5/delay_cnt_4 , 
         \u_key_5/delay_cnt_3 , \u_key_5/n37 , \u_key_5/n38 , \u_key_5/n15690 , 
         \u_key_5/delay_cnt_2 , \u_key_5/delay_cnt_1 , \u_key_5/n39 , 
         \u_key_5/n40 , \u_key_5/n15689 , \u_key_5/delay_cnt_0 , 
         \u_key_5/key_flag_N_639 , key_value_4, \u_key_5/n41 , 
         \u_key_8/delay_cnt_31 , \u_key_8/n10 , \u_key_8/clk_N_168_enable_232 , 
         \u_key_8/n18795 , \u_key_8/n15656 , \u_key_8/delay_cnt_30 , 
         \u_key_8/delay_cnt_29 , \u_key_8/n11 , \u_key_8/n12 , 
         \u_key_8/n15655 , \u_key_8/delay_cnt_28 , \u_key_8/delay_cnt_27 , 
         \u_key_8/n13 , \u_key_8/n14 , \u_key_8/n15654 , 
         \u_key_8/delay_cnt_26 , \u_key_8/delay_cnt_25 , \u_key_8/n15 , 
         \u_key_8/n16 , \u_key_8/n15653 , \u_key_8/delay_cnt_24 , 
         \u_key_8/delay_cnt_23 , \u_key_8/n17 , \u_key_8/n18 , 
         \u_key_8/n15652 , \u_key_8/delay_cnt_22 , \u_key_8/delay_cnt_21 , 
         \u_key_8/n19 , \u_key_8/n20 , \u_key_8/n15651 , 
         \u_key_8/delay_cnt_20 , \u_key_8/delay_cnt_19 , \u_key_8/n21 , 
         \u_key_8/n15650 , \u_key_8/n22 , \u_key_8/delay_cnt_18 , 
         \u_key_8/delay_cnt_17 , key_c_7, \u_key_8/n15649 , \u_key_8/n24 , 
         \u_key_8/key_reg , \u_key_8/n23 , \u_key_8/delay_cnt_16 , 
         \u_key_8/delay_cnt_15 , \u_key_8/n26 , \u_key_8/n15648 , 
         \u_key_8/n25 , \u_key_8/delay_cnt_14 , \u_key_8/delay_cnt_13 , 
         \u_key_8/n28 , \u_key_8/n15647 , \u_key_8/n27 , 
         \u_key_8/delay_cnt_12 , \u_key_8/delay_cnt_11 , \u_key_8/n29 , 
         \u_key_8/n30 , \u_key_8/n15646 , \u_key_8/delay_cnt_10 , 
         \u_key_8/delay_cnt_9 , \u_key_8/n31 , \u_key_8/n15645 , \u_key_8/n32 , 
         \u_key_8/delay_cnt_8 , \u_key_8/delay_cnt_7 , \u_key_8/n33 , 
         \u_key_8/n34 , \u_key_8/n15644 , \u_key_8/delay_cnt_6 , 
         \u_key_8/delay_cnt_5 , \u_key_8/n36 , \u_key_8/n15643 , \u_key_8/n35 , 
         \u_key_8/delay_cnt_4 , \u_key_8/delay_cnt_3 , \u_key_8/n37 , 
         \u_key_8/n38 , \u_key_8/n15642 , \u_key_8/delay_cnt_2 , 
         \u_key_8/delay_cnt_1 , \u_key_8/n39 , \u_key_8/n40 , \u_key_8/n15641 , 
         \u_key_8/delay_cnt_0 , \u_key_8/key_flag_N_639 , key_value_7, 
         \u_key_8/n41 , \u_key_10/delay_cnt_12 , \u_key_10/delay_cnt_11 , 
         \u_key_10/n29 , \u_key_10/n30 , \u_key_10/clk_N_168_enable_170 , 
         \u_key_10/n18793 , \u_key_10/n15614 , \u_key_10/n15615 , 
         \u_key_10/delay_cnt_10 , \u_key_10/delay_cnt_9 , \u_key_10/n31 , 
         \u_key_10/n15613 , \u_key_10/n32 , \u_key_10/delay_cnt_8 , 
         \u_key_10/delay_cnt_7 , \u_key_10/n33 , \u_key_10/n34 , 
         \u_key_10/n15612 , \u_key_10/delay_cnt_6 , \u_key_10/delay_cnt_5 , 
         \u_key_10/n36 , \u_key_10/n15611 , \u_key_10/n35 , 
         \u_key_10/delay_cnt_4 , \u_key_10/delay_cnt_3 , \u_key_10/n37 , 
         \u_key_10/n38 , \u_key_10/n15610 , \u_key_10/delay_cnt_2 , 
         \u_key_10/delay_cnt_1 , \u_key_10/n39 , \u_key_10/n40 , 
         \u_key_10/n15609 , \u_key_10/delay_cnt_0 , key_c_9, 
         \u_key_10/key_flag_N_639 , key_value_9, \u_key_10/n41 , 
         \u_key_10/delay_cnt_31 , \u_key_10/n10 , \u_key_10/n15624 , 
         \u_key_10/delay_cnt_30 , \u_key_10/delay_cnt_29 , \u_key_10/n11 , 
         \u_key_10/n12 , \u_key_10/n15623 , \u_key_10/delay_cnt_28 , 
         \u_key_10/delay_cnt_27 , \u_key_10/n13 , \u_key_10/n14 , 
         \u_key_10/n15622 , \u_key_10/delay_cnt_26 , \u_key_10/delay_cnt_25 , 
         \u_key_10/n15 , \u_key_10/n16 , \u_key_10/n15621 , 
         \u_key_10/delay_cnt_24 , \u_key_10/delay_cnt_23 , \u_key_10/n17 , 
         \u_key_10/n18 , \u_key_10/n15620 , \u_key_10/delay_cnt_22 , 
         \u_key_10/delay_cnt_21 , \u_key_10/n19 , \u_key_10/n20 , 
         \u_key_10/n15619 , \u_key_10/delay_cnt_20 , \u_key_10/delay_cnt_19 , 
         \u_key_10/n21 , \u_key_10/n15618 , \u_key_10/n22 , 
         \u_key_10/delay_cnt_18 , \u_key_10/delay_cnt_17 , \u_key_10/n15617 , 
         \u_key_10/n24 , \u_key_10/key_reg , \u_key_10/n23 , 
         \u_key_10/delay_cnt_16 , \u_key_10/delay_cnt_15 , \u_key_10/n26 , 
         \u_key_10/n15616 , \u_key_10/n25 , \u_key_10/delay_cnt_14 , 
         \u_key_10/delay_cnt_13 , \u_key_10/n28 , \u_key_10/n27 , 
         \u_key_11/delay_cnt_31 , \u_key_11/n10 , 
         \u_key_11/clk_N_168_enable_139 , \u_key_11/n18792 , \u_key_11/n15608 , 
         \u_key_11/delay_cnt_30 , \u_key_11/delay_cnt_29 , \u_key_11/n11 , 
         \u_key_11/n12 , \u_key_11/n15607 , \u_key_11/delay_cnt_28 , 
         \u_key_11/delay_cnt_27 , \u_key_11/n13 , \u_key_11/n14 , 
         \u_key_11/n15606 , \u_key_11/delay_cnt_26 , \u_key_11/delay_cnt_25 , 
         \u_key_11/n15 , \u_key_11/n16 , \u_key_11/n15605 , 
         \u_key_11/delay_cnt_24 , \u_key_11/delay_cnt_23 , \u_key_11/n17 , 
         \u_key_11/n18 , \u_key_11/n15604 , \u_key_11/delay_cnt_22 , 
         \u_key_11/delay_cnt_21 , \u_key_11/n19 , \u_key_11/n20 , 
         \u_key_11/n15603 , \u_key_11/delay_cnt_20 , \u_key_11/delay_cnt_19 , 
         \u_key_11/n21 , \u_key_11/n15602 , \u_key_11/n22 , 
         \u_key_11/delay_cnt_18 , \u_key_11/delay_cnt_17 , key_c_10, 
         \u_key_11/n15601 , \u_key_11/n24 , \u_key_11/key_reg , \u_key_11/n23 , 
         \u_key_11/delay_cnt_16 , \u_key_11/delay_cnt_15 , \u_key_11/n26 , 
         \u_key_11/n15600 , \u_key_11/n25 , \u_key_11/delay_cnt_14 , 
         \u_key_11/delay_cnt_13 , \u_key_11/n28 , \u_key_11/n15599 , 
         \u_key_11/n27 , \u_key_11/delay_cnt_12 , \u_key_11/delay_cnt_11 , 
         \u_key_11/n29 , \u_key_11/n30 , \u_key_11/n15598 , 
         \u_key_11/delay_cnt_10 , \u_key_11/delay_cnt_9 , \u_key_11/n31 , 
         \u_key_11/n15597 , \u_key_11/n32 , \u_key_11/delay_cnt_8 , 
         \u_key_11/delay_cnt_7 , \u_key_11/n33 , \u_key_11/n34 , 
         \u_key_11/n15596 , \u_key_11/delay_cnt_6 , \u_key_11/delay_cnt_5 , 
         \u_key_11/n36 , \u_key_11/n15595 , \u_key_11/n35 , 
         \u_key_11/delay_cnt_4 , \u_key_11/delay_cnt_3 , \u_key_11/n37 , 
         \u_key_11/n38 , \u_key_11/n15594 , \u_key_11/delay_cnt_2 , 
         \u_key_11/delay_cnt_1 , \u_key_11/n39 , \u_key_11/n40 , 
         \u_key_11/n15593 , \u_key_11/delay_cnt_0 , \u_key_11/key_flag_N_639 , 
         key_value_10, \u_key_11/n41 , \u_key_12/delay_cnt_31 , \u_key_12/n10 , 
         \u_key_12/clk_N_168_enable_108 , \u_key_12/n18791 , \u_key_12/n15592 , 
         \u_key_12/delay_cnt_30 , \u_key_12/delay_cnt_29 , \u_key_12/n11 , 
         \u_key_12/n12 , \u_key_12/n15591 , \u_key_12/delay_cnt_28 , 
         \u_key_12/delay_cnt_27 , \u_key_12/n13 , \u_key_12/n14 , 
         \u_key_12/n15590 , \u_key_12/delay_cnt_26 , \u_key_12/delay_cnt_25 , 
         \u_key_12/n15 , \u_key_12/n16 , \u_key_12/n15589 , 
         \u_key_12/delay_cnt_24 , \u_key_12/delay_cnt_23 , \u_key_12/n17 , 
         \u_key_12/n18 , \u_key_12/n15588 , \u_key_12/delay_cnt_22 , 
         \u_key_12/delay_cnt_21 , \u_key_12/n19 , \u_key_12/n20 , 
         \u_key_12/n15587 , \u_key_12/delay_cnt_20 , \u_key_12/delay_cnt_19 , 
         \u_key_12/n21 , \u_key_12/n15586 , \u_key_12/n22 , 
         \u_key_12/delay_cnt_18 , \u_key_12/delay_cnt_17 , key_c_11, 
         \u_key_12/n15585 , \u_key_12/n24 , \u_key_12/key_reg , \u_key_12/n23 , 
         \u_key_12/delay_cnt_16 , \u_key_12/delay_cnt_15 , \u_key_12/n26 , 
         \u_key_12/n15584 , \u_key_12/n25 , \u_key_12/delay_cnt_14 , 
         \u_key_12/delay_cnt_13 , \u_key_12/n28 , \u_key_12/n15583 , 
         \u_key_12/n27 , \u_key_12/delay_cnt_12 , \u_key_12/delay_cnt_11 , 
         \u_key_12/n29 , \u_key_12/n30 , \u_key_12/n15582 , 
         \u_key_12/delay_cnt_10 , \u_key_12/delay_cnt_9 , \u_key_12/n31 , 
         \u_key_12/n15581 , \u_key_12/n32 , \u_key_12/delay_cnt_8 , 
         \u_key_12/delay_cnt_7 , \u_key_12/n33 , \u_key_12/n34 , 
         \u_key_12/n15580 , \u_key_12/delay_cnt_6 , \u_key_12/delay_cnt_5 , 
         \u_key_12/n36 , \u_key_12/n15579 , \u_key_12/n35 , 
         \u_key_12/delay_cnt_4 , \u_key_12/delay_cnt_3 , \u_key_12/n37 , 
         \u_key_12/n38 , \u_key_12/n15578 , \u_key_12/delay_cnt_2 , 
         \u_key_12/delay_cnt_1 , \u_key_12/n39 , \u_key_12/n40 , 
         \u_key_12/n15577 , \u_key_12/delay_cnt_0 , \u_key_12/key_flag_N_639 , 
         key_value_11, \u_key_12/n41 , \u_key_2/delay_cnt_31 , \u_key_2/n10 , 
         \u_key_2/clk_N_168_enable_419 , \u_key_2/n18801 , \u_key_2/n15363 , 
         \u_key_2/delay_cnt_30 , \u_key_2/delay_cnt_29 , \u_key_2/n11 , 
         \u_key_2/n12 , \u_key_2/n15362 , \u_key_2/delay_cnt_28 , 
         \u_key_2/delay_cnt_27 , \u_key_2/n13 , \u_key_2/n14 , 
         \u_key_2/n15361 , \u_key_2/delay_cnt_26 , \u_key_2/delay_cnt_25 , 
         \u_key_2/n15 , \u_key_2/n16 , \u_key_2/n15360 , 
         \u_key_2/delay_cnt_24 , \u_key_2/delay_cnt_23 , \u_key_2/n17 , 
         \u_key_2/n18 , \u_key_2/n15359 , \u_key_2/delay_cnt_22 , 
         \u_key_2/delay_cnt_21 , \u_key_2/n19 , \u_key_2/n20 , 
         \u_key_2/n15358 , \u_key_2/delay_cnt_20 , \u_key_2/delay_cnt_19 , 
         \u_key_2/n21 , \u_key_2/n15357 , \u_key_2/n22 , 
         \u_key_2/delay_cnt_18 , \u_key_2/delay_cnt_17 , key_c_1, 
         \u_key_2/n15356 , \u_key_2/n24 , \u_key_2/key_reg , \u_key_2/n23 , 
         \u_key_2/delay_cnt_16 , \u_key_2/delay_cnt_15 , \u_key_2/n26 , 
         \u_key_2/n15355 , \u_key_2/n25 , \u_key_2/delay_cnt_14 , 
         \u_key_2/delay_cnt_13 , \u_key_2/n28 , \u_key_2/n15354 , 
         \u_key_2/n27 , \u_key_2/delay_cnt_12 , \u_key_2/delay_cnt_11 , 
         \u_key_2/n29 , \u_key_2/n30 , \u_key_2/n15353 , 
         \u_key_2/delay_cnt_10 , \u_key_2/delay_cnt_9 , \u_key_2/n31 , 
         \u_key_2/n15352 , \u_key_2/n32 , \u_key_2/delay_cnt_8 , 
         \u_key_2/delay_cnt_7 , \u_key_2/n33 , \u_key_2/n34 , \u_key_2/n15351 , 
         \u_key_2/delay_cnt_6 , \u_key_2/delay_cnt_5 , \u_key_2/n36 , 
         \u_key_2/n15350 , \u_key_2/n35 , \u_key_2/delay_cnt_4 , 
         \u_key_2/delay_cnt_3 , \u_key_2/n37 , \u_key_2/n38 , \u_key_2/n15349 , 
         \u_key_2/delay_cnt_2 , \u_key_2/delay_cnt_1 , \u_key_2/n39 , 
         \u_key_2/n40 , \u_key_2/n15348 , \u_key_2/delay_cnt_0 , 
         \u_key_2/key_flag_N_639 , key_value_1, \u_key_2/n41 , 
         \u_key_13/delay_cnt_31 , \u_key_13/n10 , 
         \u_key_13/clk_N_168_enable_77 , \u_key_13/n18790 , \u_key_13/n15576 , 
         \u_key_13/delay_cnt_30 , \u_key_13/delay_cnt_29 , \u_key_13/n11 , 
         \u_key_13/n12 , \u_key_13/n15575 , \u_key_13/delay_cnt_28 , 
         \u_key_13/delay_cnt_27 , \u_key_13/n13 , \u_key_13/n14 , 
         \u_key_13/n15574 , \u_key_13/delay_cnt_26 , \u_key_13/delay_cnt_25 , 
         \u_key_13/n15 , \u_key_13/n16 , \u_key_13/n15573 , 
         \u_key_13/delay_cnt_24 , \u_key_13/delay_cnt_23 , \u_key_13/n17 , 
         \u_key_13/n18 , \u_key_13/n15572 , \u_key_13/delay_cnt_22 , 
         \u_key_13/delay_cnt_21 , \u_key_13/n19 , \u_key_13/n20 , 
         \u_key_13/n15571 , \u_key_13/delay_cnt_20 , \u_key_13/delay_cnt_19 , 
         \u_key_13/n21 , \u_key_13/n15570 , \u_key_13/n22 , 
         \u_key_13/delay_cnt_18 , \u_key_13/delay_cnt_17 , key_c_12, 
         \u_key_13/n15569 , \u_key_13/n24 , \u_key_13/key_reg , \u_key_13/n23 , 
         \u_key_13/delay_cnt_16 , \u_key_13/delay_cnt_15 , \u_key_13/n26 , 
         \u_key_13/n15568 , \u_key_13/n25 , \u_key_13/delay_cnt_14 , 
         \u_key_13/delay_cnt_13 , \u_key_13/n28 , \u_key_13/n15567 , 
         \u_key_13/n27 , \u_key_13/delay_cnt_12 , \u_key_13/delay_cnt_11 , 
         \u_key_13/n29 , \u_key_13/n30 , \u_key_13/n15566 , 
         \u_key_13/delay_cnt_10 , \u_key_13/delay_cnt_9 , \u_key_13/n31 , 
         \u_key_13/n15565 , \u_key_13/n32 , \u_key_13/delay_cnt_8 , 
         \u_key_13/delay_cnt_7 , \u_key_13/n33 , \u_key_13/n34 , 
         \u_key_13/n15564 , \u_key_13/delay_cnt_6 , \u_key_13/delay_cnt_5 , 
         \u_key_13/n36 , \u_key_13/n15563 , \u_key_13/n35 , 
         \u_key_13/delay_cnt_4 , \u_key_13/delay_cnt_3 , \u_key_13/n37 , 
         \u_key_13/n38 , \u_key_13/n15562 , \u_key_13/delay_cnt_2 , 
         \u_key_13/delay_cnt_1 , \u_key_13/n39 , \u_key_13/n40 , 
         \u_key_13/n15561 , \u_key_13/delay_cnt_0 , \u_key_13/key_flag_N_639 , 
         key_value_12, \u_key_13/n41 , \u_key_9/delay_cnt_31 , \u_key_9/n10 , 
         \u_key_9/clk_N_168_enable_201 , \u_key_9/n18794 , \u_key_9/n15640 , 
         \u_key_9/delay_cnt_30 , \u_key_9/delay_cnt_29 , \u_key_9/n11 , 
         \u_key_9/n12 , \u_key_9/n15639 , \u_key_9/delay_cnt_28 , 
         \u_key_9/delay_cnt_27 , \u_key_9/n13 , \u_key_9/n14 , 
         \u_key_9/n15638 , \u_key_9/delay_cnt_26 , \u_key_9/delay_cnt_25 , 
         \u_key_9/n15 , \u_key_9/n16 , \u_key_9/n15637 , 
         \u_key_9/delay_cnt_24 , \u_key_9/delay_cnt_23 , \u_key_9/n17 , 
         \u_key_9/n18 , \u_key_9/n15636 , \u_key_9/delay_cnt_22 , 
         \u_key_9/delay_cnt_21 , \u_key_9/n19 , \u_key_9/n20 , 
         \u_key_9/n15635 , \u_key_9/delay_cnt_20 , \u_key_9/delay_cnt_19 , 
         \u_key_9/n21 , \u_key_9/n15634 , \u_key_9/n22 , 
         \u_key_9/delay_cnt_18 , \u_key_9/delay_cnt_17 , key_c_8, 
         \u_key_9/n15633 , \u_key_9/n24 , \u_key_9/key_reg , \u_key_9/n23 , 
         \u_key_9/delay_cnt_16 , \u_key_9/delay_cnt_15 , \u_key_9/n26 , 
         \u_key_9/n15632 , \u_key_9/n25 , \u_key_9/delay_cnt_14 , 
         \u_key_9/delay_cnt_13 , \u_key_9/n28 , \u_key_9/n15631 , 
         \u_key_9/n27 , \u_key_9/delay_cnt_12 , \u_key_9/delay_cnt_11 , 
         \u_key_9/n29 , \u_key_9/n30 , \u_key_9/n15630 , 
         \u_key_9/delay_cnt_10 , \u_key_9/delay_cnt_9 , \u_key_9/n31 , 
         \u_key_9/n15629 , \u_key_9/n32 , \u_key_9/delay_cnt_8 , 
         \u_key_9/delay_cnt_7 , \u_key_9/n33 , \u_key_9/n34 , \u_key_9/n15628 , 
         \u_key_9/delay_cnt_6 , \u_key_9/delay_cnt_5 , \u_key_9/n36 , 
         \u_key_9/n15627 , \u_key_9/n35 , \u_key_9/delay_cnt_4 , 
         \u_key_9/delay_cnt_3 , \u_key_9/n37 , \u_key_9/n38 , \u_key_9/n15626 , 
         \u_key_9/delay_cnt_2 , \u_key_9/delay_cnt_1 , \u_key_9/n39 , 
         \u_key_9/n40 , \u_key_9/n15625 , \u_key_9/delay_cnt_0 , 
         \u_key_9/key_flag_N_639 , key_value_8, \u_key_9/n41 , 
         \u_key_1/delay_cnt_16 , \u_key_1/delay_cnt_15 , \u_key_1/n26 , 
         \u_key_1/clk_N_168_enable_450 , \u_key_1/n18802 , \u_key_1/n15371 , 
         \u_key_1/n25 , \u_key_1/n15372 , \u_key_1/delay_cnt_14 , 
         \u_key_1/delay_cnt_13 , \u_key_1/n28 , \u_key_1/n15370 , 
         \u_key_1/n27 , \u_key_1/delay_cnt_12 , \u_key_1/delay_cnt_11 , 
         \u_key_1/n29 , \u_key_1/n30 , \u_key_1/n15369 , 
         \u_key_1/delay_cnt_10 , \u_key_1/delay_cnt_9 , \u_key_1/n31 , 
         \u_key_1/n15368 , \u_key_1/n32 , \u_key_1/delay_cnt_8 , 
         \u_key_1/delay_cnt_7 , \u_key_1/n33 , \u_key_1/n34 , \u_key_1/n15367 , 
         \u_key_1/delay_cnt_6 , \u_key_1/delay_cnt_5 , \u_key_1/n36 , 
         \u_key_1/n15366 , \u_key_1/n35 , \u_key_1/delay_cnt_4 , 
         \u_key_1/delay_cnt_3 , \u_key_1/n37 , \u_key_1/n38 , \u_key_1/n15365 , 
         \u_key_1/delay_cnt_2 , \u_key_1/delay_cnt_1 , \u_key_1/n39 , 
         \u_key_1/n40 , \u_key_1/n15364 , \u_key_1/delay_cnt_0 , key_c_0, 
         \u_key_1/key_flag_N_639 , key_value_0, \u_key_1/n41 , 
         \u_key_1/delay_cnt_31 , \u_key_1/n10 , \u_key_1/n15379 , 
         \u_key_1/delay_cnt_30 , \u_key_1/delay_cnt_29 , \u_key_1/n11 , 
         \u_key_1/n12 , \u_key_1/n15378 , \u_key_1/delay_cnt_28 , 
         \u_key_1/delay_cnt_27 , \u_key_1/n13 , \u_key_1/n14 , 
         \u_key_1/n15377 , \u_key_1/delay_cnt_26 , \u_key_1/delay_cnt_25 , 
         \u_key_1/n15 , \u_key_1/n16 , \u_key_1/n15376 , 
         \u_key_1/delay_cnt_24 , \u_key_1/delay_cnt_23 , \u_key_1/n17 , 
         \u_key_1/n18 , \u_key_1/n15375 , \u_key_1/delay_cnt_22 , 
         \u_key_1/delay_cnt_21 , \u_key_1/n19 , \u_key_1/n20 , 
         \u_key_1/n15374 , \u_key_1/delay_cnt_20 , \u_key_1/delay_cnt_19 , 
         \u_key_1/n21 , \u_key_1/n15373 , \u_key_1/n22 , 
         \u_key_1/delay_cnt_18 , \u_key_1/delay_cnt_17 , \u_key_1/n24 , 
         \u_key_1/key_reg , \u_key_1/n23 , \u_key_7/delay_cnt_31 , 
         \u_key_7/n10 , \u_key_7/clk_N_168_enable_263 , \u_key_7/n18796 , 
         \u_key_7/n15672 , \u_key_7/delay_cnt_30 , \u_key_7/delay_cnt_29 , 
         \u_key_7/n11 , \u_key_7/n12 , \u_key_7/n15671 , 
         \u_key_7/delay_cnt_28 , \u_key_7/delay_cnt_27 , \u_key_7/n13 , 
         \u_key_7/n14 , \u_key_7/n15670 , \u_key_7/delay_cnt_26 , 
         \u_key_7/delay_cnt_25 , \u_key_7/n15 , \u_key_7/n16 , 
         \u_key_7/n15669 , \u_key_7/delay_cnt_24 , \u_key_7/delay_cnt_23 , 
         \u_key_7/n17 , \u_key_7/n18 , \u_key_7/n15668 , 
         \u_key_7/delay_cnt_22 , \u_key_7/delay_cnt_21 , \u_key_7/n19 , 
         \u_key_7/n20 , \u_key_7/n15667 , \u_key_7/delay_cnt_20 , 
         \u_key_7/delay_cnt_19 , \u_key_7/n21 , \u_key_7/n15666 , 
         \u_key_7/n22 , \u_key_7/delay_cnt_18 , \u_key_7/delay_cnt_17 , 
         key_c_6, \u_key_7/n15665 , \u_key_7/n24 , \u_key_7/key_reg , 
         \u_key_7/n23 , \u_key_7/delay_cnt_16 , \u_key_7/delay_cnt_15 , 
         \u_key_7/n26 , \u_key_7/n15664 , \u_key_7/n25 , 
         \u_key_7/delay_cnt_14 , \u_key_7/delay_cnt_13 , \u_key_7/n28 , 
         \u_key_7/n15663 , \u_key_7/n27 , \u_key_7/delay_cnt_12 , 
         \u_key_7/delay_cnt_11 , \u_key_7/n29 , \u_key_7/n30 , 
         \u_key_7/n15662 , \u_key_7/delay_cnt_10 , \u_key_7/delay_cnt_9 , 
         \u_key_7/n31 , \u_key_7/n15661 , \u_key_7/n32 , \u_key_7/delay_cnt_8 , 
         \u_key_7/delay_cnt_7 , \u_key_7/n33 , \u_key_7/n34 , \u_key_7/n15660 , 
         \u_key_7/delay_cnt_6 , \u_key_7/delay_cnt_5 , \u_key_7/n36 , 
         \u_key_7/n15659 , \u_key_7/n35 , \u_key_7/delay_cnt_4 , 
         \u_key_7/delay_cnt_3 , \u_key_7/n37 , \u_key_7/n38 , \u_key_7/n15658 , 
         \u_key_7/delay_cnt_2 , \u_key_7/delay_cnt_1 , \u_key_7/n39 , 
         \u_key_7/n40 , \u_key_7/n15657 , \u_key_7/delay_cnt_0 , 
         \u_key_7/key_flag_N_639 , key_value_6, \u_key_7/n41 , 
         \u_key_6/delay_cnt_31 , \u_key_6/n10 , \u_key_6/clk_N_168_enable_294 , 
         \u_key_6/n18797 , \u_key_6/n15688 , \u_key_6/delay_cnt_30 , 
         \u_key_6/delay_cnt_29 , \u_key_6/n11 , \u_key_6/n12 , 
         \u_key_6/n15687 , \u_key_6/delay_cnt_28 , \u_key_6/delay_cnt_27 , 
         \u_key_6/n13 , \u_key_6/n14 , \u_key_6/n15686 , 
         \u_key_6/delay_cnt_26 , \u_key_6/delay_cnt_25 , \u_key_6/n15 , 
         \u_key_6/n16 , \u_key_6/n15685 , \u_key_6/delay_cnt_24 , 
         \u_key_6/delay_cnt_23 , \u_key_6/n17 , \u_key_6/n18 , 
         \u_key_6/n15684 , \u_key_6/delay_cnt_22 , \u_key_6/delay_cnt_21 , 
         \u_key_6/n19 , \u_key_6/n20 , \u_key_6/n15683 , 
         \u_key_6/delay_cnt_20 , \u_key_6/delay_cnt_19 , \u_key_6/n21 , 
         \u_key_6/n15682 , \u_key_6/n22 , \u_key_6/delay_cnt_18 , 
         \u_key_6/delay_cnt_17 , key_c_5, \u_key_6/n15681 , \u_key_6/n24 , 
         \u_key_6/key_reg , \u_key_6/n23 , \u_key_6/delay_cnt_16 , 
         \u_key_6/delay_cnt_15 , \u_key_6/n26 , \u_key_6/n15680 , 
         \u_key_6/n25 , \u_key_6/delay_cnt_14 , \u_key_6/delay_cnt_13 , 
         \u_key_6/n28 , \u_key_6/n15679 , \u_key_6/n27 , 
         \u_key_6/delay_cnt_12 , \u_key_6/delay_cnt_11 , \u_key_6/n29 , 
         \u_key_6/n30 , \u_key_6/n15678 , \u_key_6/delay_cnt_10 , 
         \u_key_6/delay_cnt_9 , \u_key_6/n31 , \u_key_6/n15677 , \u_key_6/n32 , 
         \u_key_6/delay_cnt_8 , \u_key_6/delay_cnt_7 , \u_key_6/n33 , 
         \u_key_6/n34 , \u_key_6/n15676 , \u_key_6/delay_cnt_6 , 
         \u_key_6/delay_cnt_5 , \u_key_6/n36 , \u_key_6/n15675 , \u_key_6/n35 , 
         \u_key_6/delay_cnt_4 , \u_key_6/delay_cnt_3 , \u_key_6/n37 , 
         \u_key_6/n38 , \u_key_6/n15674 , \u_key_6/delay_cnt_2 , 
         \u_key_6/delay_cnt_1 , \u_key_6/n39 , \u_key_6/n40 , \u_key_6/n15673 , 
         \u_key_6/delay_cnt_0 , \u_key_6/key_flag_N_639 , key_value_5, 
         \u_key_6/n41 , cnt_31, n102_adj_1489, n15798, cnt_30, cnt_29, 
         n103_adj_1490, n104_adj_1491, n15797, \u_key_3/delay_cnt_0 , key_c_2, 
         \u_key_3/key_flag_N_639 , key_value_2, \u_key_3/n41 , 
         \u_key_3/n15332 , \u_key_3/delay_cnt_2 , \u_key_3/delay_cnt_1 , 
         \u_key_3/n39 , \u_key_3/n40 , \u_key_3/clk_N_168_enable_387 , 
         \u_key_3/n18800 , \u_key_3/n15333 , \u_key_3/delay_cnt_31 , 
         \u_key_3/n10 , \u_key_3/n15347 , \u_key_3/delay_cnt_30 , 
         \u_key_3/delay_cnt_29 , \u_key_3/n11 , \u_key_3/n12 , 
         \u_key_3/n15346 , \u_key_3/delay_cnt_28 , \u_key_3/delay_cnt_27 , 
         \u_key_3/n13 , \u_key_3/n14 , \u_key_3/n15345 , 
         \u_key_3/delay_cnt_26 , \u_key_3/delay_cnt_25 , \u_key_3/n15 , 
         \u_key_3/n16 , \u_key_3/n15344 , \u_key_3/delay_cnt_24 , 
         \u_key_3/delay_cnt_23 , \u_key_3/n17 , \u_key_3/n18 , 
         \u_key_3/n15343 , \u_key_3/delay_cnt_22 , \u_key_3/delay_cnt_21 , 
         \u_key_3/n19 , \u_key_3/n20 , \u_key_3/n15342 , 
         \u_key_3/delay_cnt_20 , \u_key_3/delay_cnt_19 , \u_key_3/n21 , 
         \u_key_3/n15341 , \u_key_3/n22 , \u_key_3/delay_cnt_18 , 
         \u_key_3/delay_cnt_17 , \u_key_3/n15340 , \u_key_3/n24 , 
         \u_key_3/key_reg , \u_key_3/n23 , \u_key_3/delay_cnt_16 , 
         \u_key_3/delay_cnt_15 , \u_key_3/n26 , \u_key_3/n15339 , 
         \u_key_3/n25 , \u_key_3/delay_cnt_14 , \u_key_3/delay_cnt_13 , 
         \u_key_3/n28 , \u_key_3/n15338 , \u_key_3/n27 , 
         \u_key_3/delay_cnt_12 , \u_key_3/delay_cnt_11 , \u_key_3/n29 , 
         \u_key_3/n30 , \u_key_3/n15337 , \u_key_3/delay_cnt_10 , 
         \u_key_3/delay_cnt_9 , \u_key_3/n31 , \u_key_3/n15336 , \u_key_3/n32 , 
         \u_key_3/delay_cnt_8 , \u_key_3/delay_cnt_7 , \u_key_3/n33 , 
         \u_key_3/n34 , \u_key_3/n15335 , \u_key_3/delay_cnt_6 , 
         \u_key_3/delay_cnt_5 , \u_key_3/n36 , \u_key_3/n15334 , \u_key_3/n35 , 
         \u_key_3/delay_cnt_4 , \u_key_3/delay_cnt_3 , \u_key_3/n37 , 
         \u_key_3/n38 , cnt_28, cnt_27, n105_adj_1492, n106_adj_1493, n15796, 
         cnt_26, cnt_25, n107_adj_1494, n108_adj_1495, n15795, 
         \u_key_15/delay_cnt_31 , \u_key_15/n10 , 
         \u_key_15/clk_N_168_enable_531 , \u_key_15/n18728 , \u_key_15/n15544 , 
         \u_key_15/delay_cnt_30 , \u_key_15/delay_cnt_29 , \u_key_15/n11 , 
         \u_key_15/n12 , \u_key_15/n15543 , \u_key_15/delay_cnt_28 , 
         \u_key_15/delay_cnt_27 , \u_key_15/n13 , \u_key_15/n14 , 
         \u_key_15/n15542 , \u_key_15/delay_cnt_26 , \u_key_15/delay_cnt_25 , 
         \u_key_15/n15 , \u_key_15/n16 , \u_key_15/n15541 , 
         \u_key_15/delay_cnt_24 , \u_key_15/delay_cnt_23 , \u_key_15/n17 , 
         \u_key_15/n18 , \u_key_15/n15540 , \u_key_15/delay_cnt_22 , 
         \u_key_15/delay_cnt_21 , \u_key_15/n19 , \u_key_15/n20 , 
         \u_key_15/n15539 , \u_key_15/delay_cnt_20 , \u_key_15/delay_cnt_19 , 
         \u_key_15/n21 , \u_key_15/n15538 , \u_key_15/n22 , 
         \u_key_15/delay_cnt_18 , \u_key_15/delay_cnt_17 , key_c_14, 
         \u_key_15/n15537 , \u_key_15/n24 , \u_key_15/key_reg , \u_key_15/n23 , 
         \u_key_15/delay_cnt_16 , \u_key_15/delay_cnt_15 , \u_key_15/n26 , 
         \u_key_15/n15536 , \u_key_15/n25 , \u_key_15/delay_cnt_14 , 
         \u_key_15/delay_cnt_13 , \u_key_15/n28 , \u_key_15/n15535 , 
         \u_key_15/n27 , \u_key_15/delay_cnt_12 , \u_key_15/delay_cnt_11 , 
         \u_key_15/n29 , \u_key_15/n30 , \u_key_15/n15534 , 
         \u_key_15/delay_cnt_10 , \u_key_15/delay_cnt_9 , \u_key_15/n31 , 
         \u_key_15/n15533 , \u_key_15/n32 , \u_key_15/delay_cnt_8 , 
         \u_key_15/delay_cnt_7 , \u_key_15/n33 , \u_key_15/n34 , 
         \u_key_15/n15532 , \u_key_15/delay_cnt_6 , \u_key_15/delay_cnt_5 , 
         \u_key_15/n36 , \u_key_15/n15531 , \u_key_15/n35 , 
         \u_key_15/delay_cnt_4 , \u_key_15/delay_cnt_3 , \u_key_15/n37 , 
         \u_key_15/n38 , \u_key_15/n15530 , \u_key_15/delay_cnt_2 , 
         \u_key_15/delay_cnt_1 , \u_key_15/n39 , \u_key_15/n40 , 
         \u_key_15/n15529 , \u_key_15/delay_cnt_0 , \u_key_15/key_flag_N_639 , 
         key_value_14, \u_key_15/n41 , cnt_24, cnt_23, n109_adj_1496, 
         n110_adj_1497, \u_key_4/delay_cnt_31 , \u_key_4/n10 , 
         \u_key_4/clk_N_168_enable_356 , \u_key_4/n18799 , \u_key_4/n15331 , 
         \u_key_4/delay_cnt_30 , \u_key_4/delay_cnt_29 , \u_key_4/n11 , 
         \u_key_4/n12 , \u_key_4/n15330 , \u_key_4/delay_cnt_28 , 
         \u_key_4/delay_cnt_27 , \u_key_4/n13 , \u_key_4/n14 , 
         \u_key_4/n15329 , \u_key_4/delay_cnt_26 , \u_key_4/delay_cnt_25 , 
         \u_key_4/n15 , \u_key_4/n16 , \u_key_4/n15328 , 
         \u_key_4/delay_cnt_24 , \u_key_4/delay_cnt_23 , \u_key_4/n17 , 
         \u_key_4/n18 , \u_key_4/n15327 , \u_key_4/delay_cnt_22 , 
         \u_key_4/delay_cnt_21 , \u_key_4/n19 , \u_key_4/n20 , 
         \u_key_4/n15326 , \u_key_4/delay_cnt_20 , \u_key_4/delay_cnt_19 , 
         \u_key_4/n21 , \u_key_4/n15325 , \u_key_4/n22 , 
         \u_key_4/delay_cnt_18 , \u_key_4/delay_cnt_17 , key_c_3, 
         \u_key_4/n15324 , \u_key_4/n24 , \u_key_4/key_reg , \u_key_4/n23 , 
         \u_key_4/delay_cnt_16 , \u_key_4/delay_cnt_15 , \u_key_4/n26 , 
         \u_key_4/n15323 , \u_key_4/n25 , \u_key_4/delay_cnt_14 , 
         \u_key_4/delay_cnt_13 , \u_key_4/n28 , \u_key_4/n15322 , 
         \u_key_4/n27 , \u_key_4/delay_cnt_12 , \u_key_4/delay_cnt_11 , 
         \u_key_4/n29 , \u_key_4/n30 , \u_key_4/n15321 , 
         \u_key_4/delay_cnt_10 , \u_key_4/delay_cnt_9 , \u_key_4/n31 , 
         \u_key_4/n15320 , \u_key_4/n32 , \u_key_4/delay_cnt_8 , 
         \u_key_4/delay_cnt_7 , \u_key_4/n33 , \u_key_4/n34 , \u_key_4/n15319 , 
         \u_key_4/delay_cnt_6 , \u_key_4/delay_cnt_5 , \u_key_4/n36 , 
         \u_key_4/n15318 , \u_key_4/n35 , \u_key_4/delay_cnt_4 , 
         \u_key_4/delay_cnt_3 , \u_key_4/n37 , \u_key_4/n38 , \u_key_4/n15317 , 
         \u_key_4/delay_cnt_2 , \u_key_4/delay_cnt_1 , \u_key_4/n39 , 
         \u_key_4/n40 , \u_key_4/n15316 , \u_key_4/delay_cnt_0 , 
         \u_key_4/key_flag_N_639 , key_value_3, \u_key_4/n41 , 
         \u_key_14/delay_cnt_31 , \u_key_14/n10 , 
         \u_key_14/clk_N_168_enable_46 , \u_key_14/n18789 , \u_key_14/n15560 , 
         \u_key_14/delay_cnt_30 , \u_key_14/delay_cnt_29 , \u_key_14/n11 , 
         \u_key_14/n12 , \u_key_14/n15559 , \u_key_14/delay_cnt_28 , 
         \u_key_14/delay_cnt_27 , \u_key_14/n13 , \u_key_14/n14 , 
         \u_key_14/n15558 , \u_key_14/delay_cnt_26 , \u_key_14/delay_cnt_25 , 
         \u_key_14/n15 , \u_key_14/n16 , \u_key_14/n15557 , 
         \u_key_14/delay_cnt_24 , \u_key_14/delay_cnt_23 , \u_key_14/n17 , 
         \u_key_14/n18 , \u_key_14/n15556 , \u_key_14/delay_cnt_22 , 
         \u_key_14/delay_cnt_21 , \u_key_14/n19 , \u_key_14/n20 , 
         \u_key_14/n15555 , \u_key_14/delay_cnt_20 , \u_key_14/delay_cnt_19 , 
         \u_key_14/n21 , \u_key_14/n15554 , \u_key_14/n22 , 
         \u_key_14/delay_cnt_18 , \u_key_14/delay_cnt_17 , key_c_13, 
         \u_key_14/n15553 , \u_key_14/n24 , \u_key_14/key_reg , \u_key_14/n23 , 
         \u_key_14/delay_cnt_16 , \u_key_14/delay_cnt_15 , \u_key_14/n26 , 
         \u_key_14/n15552 , \u_key_14/n25 , \u_key_14/delay_cnt_14 , 
         \u_key_14/delay_cnt_13 , \u_key_14/n28 , \u_key_14/n15551 , 
         \u_key_14/n27 , \u_key_14/delay_cnt_12 , \u_key_14/delay_cnt_11 , 
         \u_key_14/n29 , \u_key_14/n30 , \u_key_14/n15550 , 
         \u_key_14/delay_cnt_10 , \u_key_14/delay_cnt_9 , \u_key_14/n31 , 
         \u_key_14/n15549 , \u_key_14/n32 , \u_key_14/delay_cnt_8 , 
         \u_key_14/delay_cnt_7 , \u_key_14/n33 , \u_key_14/n34 , 
         \u_key_14/n15548 , \u_key_14/delay_cnt_6 , \u_key_14/delay_cnt_5 , 
         \u_key_14/n36 , \u_key_14/n15547 , \u_key_14/n35 , 
         \u_key_14/delay_cnt_4 , \u_key_14/delay_cnt_3 , \u_key_14/n37 , 
         \u_key_14/n38 , \u_key_14/n15546 , \u_key_14/delay_cnt_2 , 
         \u_key_14/delay_cnt_1 , \u_key_14/n39 , \u_key_14/n40 , 
         \u_key_14/n15545 , \u_key_14/delay_cnt_0 , \u_key_14/key_flag_N_639 , 
         key_value_13, \u_key_14/n41 , n114, n115, \u_buzzer/pwm_out1_N_122 , 
         n112, n113, n110, n111, n108, n109, n106, n107, n104, n105, n102, 
         n103, n100, n101, n98, n99, n18730, n7_adj_1448, beat_4_N_40_0, 
         clk_N_168_enable_534, beat_0, n17124, n17123, n17121, n17120, 
         beat_4_N_40_2, beat_4_N_40_1, clk_N_168_enable_456, beat_1, beat_2, 
         n18604, n16854, n10, beat_4_N_40_4, beat_4_N_40_3, beat_3, beat_4, 
         n10216, clk_beat_N_126, clk_beat, count_beat_1, n18760, n4689, 
         count_beat_0, n201, n29_adj_1480, n30_adj_1481, n8_adj_1478, n18613, 
         n18607, n18614, n18615, n27, n28, count_beat_2, count_beat_3, 
         count_beat_4, n18605, n26_adj_1479, \u_key_2/n10228 , 
         \u_key_1/n10222 , key_flag_0, key_flag_1, \u_key_4/n10225 , 
         \u_key_3/n10234 , key_flag_2, key_flag_3, \u_key_6/n10231 , 
         \u_key_5/n10219 , key_flag_4, key_flag_5, \u_key_8/n10240 , 
         \u_key_7/n10237 , key_flag_6, key_flag_7, \u_key_10/n10246 , 
         \u_key_9/n10243 , key_flag_8, key_flag_9, \u_key_12/n10252 , 
         \u_key_11/n10249 , key_flag_10, key_flag_11, \u_key_14/n10258 , 
         \u_key_13/n10255 , key_flag_12, key_flag_13, \u_key_15/n10261 , 
         key_flag_14, \u_key_15/n50 , \u_key_state/n10264 , key_state_flag, 
         \u_key_state/n50 , n17430, n17219, n17218, n17209, n17208, 
         note_5_N_45_1, note_5_N_45_0, note_0, note_1, n18847, n18462, n17250, 
         n17249, note_5_N_45_2, note_2, n94, n17132, n17118, n17117, 
         note_5_N_45_4, note_5_N_45_3, note_3, note_4, n895, n891, n887, 
         \u_speaker/n3909 , \u_speaker/n18712 , \u_speaker/n879 , n18713, 
         \u_speaker/n3924 , \u_speaker/rom2_4_N_397_0 , n9292, 
         \u_speaker/rom2_4__N_297 , rom2_0, n907, \u_speaker/n18661 , 
         \u_speaker/n18662 , \u_speaker/n903 , \u_speaker/n16899 , 
         \u_speaker/n18663 , \u_speaker/n16903 , \u_speaker/n18643 , rom2_1, 
         n18815, n6_adj_1446, \u_speaker/rom1_1 , \u_speaker/rom1_0 , 
         \u_speaker/n18660 , \u_speaker/n15938 , \u_speaker/n16930 , rom2_3, 
         \u_buzzer/n34 , \u_buzzer/PWM_N_764 , \u_buzzer/n15951 , 
         \u_buzzer/PWM , \u_buzzer/n31_adj_826 , n18623, n18709, 
         \u_buzzer/n14162 , \u_buzzer/cycle_17_N_663_0 , 
         \u_buzzer/clk_N_168_enable_15 , n18769, n417, n18808, n3_adj_1473, 
         \u_buzzer/cycle_17_N_663_1 , n17110, \u_buzzer/clk_N_168_enable_508 , 
         n18807, n18772, \u_speaker/n18656 , n18720, n16959, n269, 
         cycle_17_N_663_2, clk_N_168_enable_507, n18771, n331, n18768, 
         \u_buzzer/cycle_17_N_663_3 , n18734, n414, 
         \u_buzzer/cycle_17_N_663_4 , \u_buzzer/clk_N_168_enable_509 , n18737, 
         n18803, n18651, n18763, n18755, n18620, \u_buzzer/cycle_17_N_663_5 , 
         \u_buzzer/clk_N_168_enable_510 , n12983, \u_buzzer/n4 , n18706, 
         \u_buzzer/cycle_17_N_663_6 , \u_buzzer/clk_N_168_enable_511 , 
         \u_speaker/n3_adj_858 , n16917, n18761, \u_speaker/n4 , 
         cycle_17_N_663_7, clk_N_168_enable_512, n18697, n18667, 
         \u_buzzer/cycle_17_N_663_8 , \u_buzzer/clk_N_168_enable_513 , n262, 
         n18610, \u_buzzer/cycle_17_N_663_9 , \u_buzzer/clk_N_168_enable_514 , 
         n9757, \u_buzzer/n7_adj_819 , n10337, n18612, n18756, 
         cycle_17_N_663_10, \u_buzzer/clk_N_168_enable_515 , n3, 
         \u_speaker/n14_adj_855 , n344, \u_buzzer/cycle_17_N_663_11 , 
         \u_buzzer/clk_N_168_enable_516 , n14_adj_1471, n10160, n16909, n9654, 
         \u_buzzer/cycle_17_N_663_12 , \u_buzzer/clk_N_168_enable_517 , 
         \u_speaker/n18732 , n405, \u_buzzer/cycle_17_N_663_13 , 
         clk_N_168_enable_518, \u_speaker/n362 , \u_buzzer/cycle_17_N_663_14 , 
         \u_buzzer/clk_N_168_enable_520 , \u_speaker/n16_adj_1086 , 
         \u_buzzer/cycle_17_N_663_15 , \u_buzzer/cycle_17_N_663_16 , 
         \u_buzzer/clk_N_168_enable_522 , \u_speaker/n7_adj_849 , 
         cycle_17_N_663_17, yinjie_box_2_N_394_1, yinjie_box_2_N_394_0, 
         \u_key_1/n50 , \u_key_1/n49 , \u_key_1/n60 , \u_key_1/n55 , 
         \u_key_1/n10368 , \u_key_1/delay_cnt_31_N_570_9 , 
         \u_key_1/delay_cnt_31_N_570_6 , \u_key_1/clk_N_168_enable_445 , 
         \u_key_1/delay_cnt_31_N_570_16 , \u_key_1/delay_cnt_31_N_570_14 , 
         \u_key_1/delay_cnt_31_N_570_18 , \u_key_1/delay_cnt_31_N_570_17 , 
         \u_key_1/delay_cnt_31_N_570_19 , \u_key_10/n10386 , 
         \u_key_10/clk_N_168_enable_165 , \u_key_10/delay_cnt_31_N_570_9 , 
         \u_key_10/delay_cnt_31_N_570_6 , \u_key_10/delay_cnt_31_N_570_16 , 
         \u_key_10/delay_cnt_31_N_570_14 , \u_key_10/delay_cnt_31_N_570_18 , 
         \u_key_10/delay_cnt_31_N_570_17 , \u_key_10/delay_cnt_31_N_570_19 , 
         \u_key_11/n10388 , \u_key_11/clk_N_168_enable_134 , 
         \u_key_11/delay_cnt_31_N_570_9 , \u_key_11/delay_cnt_31_N_570_6 , 
         \u_key_11/delay_cnt_31_N_570_16 , \u_key_11/delay_cnt_31_N_570_14 , 
         \u_key_11/delay_cnt_31_N_570_18 , \u_key_11/delay_cnt_31_N_570_17 , 
         \u_key_11/delay_cnt_31_N_570_19 , \u_key_12/n10390 , 
         \u_key_12/clk_N_168_enable_103 , \u_key_12/delay_cnt_31_N_570_9 , 
         \u_key_12/delay_cnt_31_N_570_6 , \u_key_12/delay_cnt_31_N_570_16 , 
         \u_key_12/delay_cnt_31_N_570_14 , \u_key_12/delay_cnt_31_N_570_18 , 
         \u_key_12/delay_cnt_31_N_570_17 , \u_key_12/delay_cnt_31_N_570_19 , 
         \u_key_13/n10392 , \u_key_13/clk_N_168_enable_72 , 
         \u_key_13/delay_cnt_31_N_570_9 , \u_key_13/delay_cnt_31_N_570_6 , 
         \u_key_13/delay_cnt_31_N_570_16 , \u_key_13/delay_cnt_31_N_570_14 , 
         \u_key_13/delay_cnt_31_N_570_18 , \u_key_13/delay_cnt_31_N_570_17 , 
         \u_key_13/delay_cnt_31_N_570_19 , \u_key_14/n10394 , 
         \u_key_14/clk_N_168_enable_41 , \u_key_14/delay_cnt_31_N_570_9 , 
         \u_key_14/delay_cnt_31_N_570_6 , \u_key_14/delay_cnt_31_N_570_16 , 
         \u_key_14/delay_cnt_31_N_570_14 , \u_key_14/delay_cnt_31_N_570_18 , 
         \u_key_14/delay_cnt_31_N_570_17 , \u_key_14/delay_cnt_31_N_570_19 , 
         \u_key_15/n10396 , \u_key_15/delay_cnt_31_N_570_9 , 
         \u_key_15/delay_cnt_31_N_570_6 , \u_key_15/clk_N_168_enable_462 , 
         \u_key_15/delay_cnt_31_N_570_16 , \u_key_15/delay_cnt_31_N_570_14 , 
         \u_key_15/delay_cnt_31_N_570_18 , \u_key_15/delay_cnt_31_N_570_17 , 
         \u_key_15/delay_cnt_31_N_570_19 , \u_key_2/n50 , \u_key_2/n49 , 
         \u_key_2/n60 , \u_key_2/n55 , \u_key_2/n10370 , 
         \u_key_2/delay_cnt_31_N_570_9 , \u_key_2/delay_cnt_31_N_570_6 , 
         \u_key_2/clk_N_168_enable_414 , \u_key_2/delay_cnt_31_N_570_16 , 
         \u_key_2/delay_cnt_31_N_570_14 , \u_key_2/delay_cnt_31_N_570_18 , 
         \u_key_2/delay_cnt_31_N_570_17 , \u_key_2/delay_cnt_31_N_570_19 , 
         \u_key_3/n50 , \u_key_3/n49 , \u_key_3/n60 , \u_key_3/n55 , 
         \u_key_3/n10372 , \u_key_3/delay_cnt_31_N_570_9 , 
         \u_key_3/delay_cnt_31_N_570_6 , \u_key_3/clk_N_168_enable_382 , 
         \u_key_3/delay_cnt_31_N_570_16 , \u_key_3/delay_cnt_31_N_570_14 , 
         \u_key_3/delay_cnt_31_N_570_18 , \u_key_3/delay_cnt_31_N_570_17 , 
         \u_key_3/delay_cnt_31_N_570_19 , \u_key_4/n50 , \u_key_4/n49 , 
         \u_key_4/n60 , \u_key_4/n55 , \u_key_4/n10374 , 
         \u_key_4/delay_cnt_31_N_570_9 , \u_key_4/delay_cnt_31_N_570_6 , 
         \u_key_4/clk_N_168_enable_351 , \u_key_4/delay_cnt_31_N_570_16 , 
         \u_key_4/delay_cnt_31_N_570_14 , \u_key_4/delay_cnt_31_N_570_18 , 
         \u_key_4/delay_cnt_31_N_570_17 , \u_key_4/delay_cnt_31_N_570_19 , 
         \u_key_5/n50 , \u_key_5/n49 , \u_key_5/n60 , \u_key_5/n55 , 
         \u_key_5/n10376 , \u_key_5/delay_cnt_31_N_570_9 , 
         \u_key_5/delay_cnt_31_N_570_6 , \u_key_5/clk_N_168_enable_320 , 
         \u_key_5/delay_cnt_31_N_570_16 , \u_key_5/delay_cnt_31_N_570_14 , 
         \u_key_5/delay_cnt_31_N_570_18 , \u_key_5/delay_cnt_31_N_570_17 , 
         \u_key_5/delay_cnt_31_N_570_19 , \u_key_6/n10378 , 
         \u_key_6/clk_N_168_enable_289 , \u_key_6/delay_cnt_31_N_570_9 , 
         \u_key_6/delay_cnt_31_N_570_6 , \u_key_6/delay_cnt_31_N_570_16 , 
         \u_key_6/delay_cnt_31_N_570_14 , \u_key_6/delay_cnt_31_N_570_18 , 
         \u_key_6/delay_cnt_31_N_570_17 , \u_key_6/delay_cnt_31_N_570_19 , 
         \u_key_7/n10380 , \u_key_7/clk_N_168_enable_258 , 
         \u_key_7/delay_cnt_31_N_570_9 , \u_key_7/delay_cnt_31_N_570_6 , 
         \u_key_7/delay_cnt_31_N_570_16 , \u_key_7/delay_cnt_31_N_570_14 , 
         \u_key_7/delay_cnt_31_N_570_18 , \u_key_7/delay_cnt_31_N_570_17 , 
         \u_key_7/delay_cnt_31_N_570_19 , \u_key_8/n10382 , 
         \u_key_8/clk_N_168_enable_227 , \u_key_8/delay_cnt_31_N_570_9 , 
         \u_key_8/delay_cnt_31_N_570_6 , \u_key_8/delay_cnt_31_N_570_16 , 
         \u_key_8/delay_cnt_31_N_570_14 , \u_key_8/delay_cnt_31_N_570_18 , 
         \u_key_8/delay_cnt_31_N_570_17 , \u_key_8/delay_cnt_31_N_570_19 , 
         \u_key_9/n10384 , \u_key_9/clk_N_168_enable_196 , 
         \u_key_9/delay_cnt_31_N_570_9 , \u_key_9/delay_cnt_31_N_570_6 , 
         \u_key_9/delay_cnt_31_N_570_16 , \u_key_9/delay_cnt_31_N_570_14 , 
         \u_key_9/delay_cnt_31_N_570_18 , \u_key_9/delay_cnt_31_N_570_17 , 
         \u_key_9/delay_cnt_31_N_570_19 , \u_key_state/n10399 , 
         \u_key_state/clk_N_168_enable_493 , 
         \u_key_state/delay_cnt_31_N_570_9 , 
         \u_key_state/delay_cnt_31_N_570_6 , 
         \u_key_state/delay_cnt_31_N_570_16 , 
         \u_key_state/delay_cnt_31_N_570_14 , 
         \u_key_state/delay_cnt_31_N_570_18 , 
         \u_key_state/delay_cnt_31_N_570_17 , 
         \u_key_state/delay_cnt_31_N_570_19 , \u_speaker/n4956 , n25, n26, n23, 
         n24, n21, n22, n19, n20, n17, n18, n15, n16, n14_adj_1435, pwm_out1_c, 
         \u_speaker/n36_adj_1257 , \u_speaker/n48_adj_1255 , 
         \u_speaker/n34_adj_1261 , \u_speaker/n35_adj_1259 , 
         \u_speaker/n32_adj_1265 , \u_speaker/n33_adj_1263 , 
         \u_speaker/n30_adj_1269 , \u_speaker/n31_adj_1267 , 
         \u_speaker/n28_adj_1273 , \u_speaker/n29_adj_1271 , 
         \u_speaker/n26_adj_1277 , \u_speaker/n27_adj_1275 , 
         \u_speaker/n36_adj_1118 , \u_speaker/n49_adj_1220 , 
         \u_speaker/n34_adj_1121 , \u_speaker/n35_adj_1120 , 
         \u_speaker/n32_adj_1123 , \u_speaker/n33 , \u_speaker/n30_adj_1129 , 
         \u_speaker/n31_adj_1125 , \u_speaker/n28_adj_1133 , 
         \u_speaker/n29_adj_1131 , \u_speaker/n26_adj_1137 , 
         \u_speaker/n27_adj_1135 , \u_speaker/n142_adj_1058 , 
         \u_speaker/n143_adj_1056 , \u_speaker/n140_adj_1062 , 
         \u_speaker/n141_adj_1060 , \u_speaker/n138_adj_1066 , 
         \u_speaker/n139_adj_1064 , \u_speaker/n136_adj_1070 , 
         \u_speaker/n137_adj_1068 , \u_speaker/n134_adj_1074 , 
         \u_speaker/n135_adj_1072 , \u_speaker/n133_adj_1076 , 
         \u_speaker/n36_adj_1198 , \u_speaker/n49_adj_1081 , 
         \u_speaker/n34_adj_1202 , \u_speaker/n35_adj_1200 , 
         \u_speaker/n32_adj_1206 , \u_speaker/n33_adj_1204 , 
         \u_speaker/n30_adj_1210 , \u_speaker/n31_adj_1208 , 
         \u_speaker/n28_adj_1214 , \u_speaker/n29_adj_1212 , 
         \u_speaker/n26_adj_1218 , \u_speaker/n27_adj_1216 , \u_speaker/n142 , 
         \u_speaker/n143 , \u_speaker/n140 , \u_speaker/n141 , 
         \u_speaker/n138 , \u_speaker/n139 , \u_speaker/n136 , 
         \u_speaker/n137 , \u_speaker/n134 , \u_speaker/n135 , 
         \u_speaker/n133 , \u_speaker/n36_adj_1145 , \u_speaker/n49 , 
         \u_speaker/n34_adj_1177 , \u_speaker/n35_adj_1169 , 
         \u_speaker/n32_adj_1175 , \u_speaker/n33_adj_1171 , \u_speaker/n30 , 
         \u_speaker/n31_adj_1096 , \u_speaker/n28_adj_935 , 
         \u_speaker/n29_adj_929 , \u_speaker/n26_adj_840 , 
         \u_speaker/n27_adj_937 , \u_speaker/n142_adj_895 , 
         \u_speaker/n143_adj_893 , \u_speaker/n140_adj_899 , 
         \u_speaker/n141_adj_897 , \u_speaker/n138_adj_903 , 
         \u_speaker/n139_adj_901 , \u_speaker/n136_adj_907 , 
         \u_speaker/n137_adj_905 , \u_speaker/n134_adj_911 , 
         \u_speaker/n135_adj_909 , \u_speaker/n133_adj_914 , 
         \u_speaker/n142_adj_953 , \u_speaker/n143_adj_951 , 
         \u_speaker/n140_adj_957 , \u_speaker/n141_adj_955 , 
         \u_speaker/n138_adj_961 , \u_speaker/n139_adj_959 , 
         \u_speaker/n136_adj_965 , \u_speaker/n137_adj_963 , 
         \u_speaker/n134_adj_969 , \u_speaker/n135_adj_967 , 
         \u_speaker/n133_adj_971 , \u_speaker/n36 , \u_speaker/n49_adj_1180 , 
         \u_speaker/n34_adj_1159 , \u_speaker/n35 , \u_speaker/n32_adj_1153 , 
         \u_speaker/n33_adj_1157 , \u_speaker/n30_adj_1147 , 
         \u_speaker/n31_adj_1149 , \u_speaker/n28 , \u_speaker/n29 , 
         \u_speaker/n26_adj_844 , \u_speaker/n27_adj_1173 , 
         \u_speaker/n36_adj_1116 , \u_speaker/n48_adj_1378 , 
         \u_speaker/n34_adj_1240 , \u_speaker/n35_adj_1190 , \u_speaker/n32 , 
         \u_speaker/n33_adj_1331 , \u_speaker/n30_adj_1127 , 
         \u_speaker/n31_adj_1112 , \u_speaker/n28_adj_1335 , 
         \u_speaker/n29_adj_1188 , \u_speaker/n26_adj_862 , \u_speaker/n27 , 
         \u_speaker/n142_adj_1003 , \u_speaker/n143_adj_1001 , 
         \u_speaker/n140_adj_1007 , \u_speaker/n141_adj_1005 , 
         \u_speaker/n138_adj_1011 , \u_speaker/n139_adj_1009 , 
         \u_speaker/n136_adj_1015 , \u_speaker/n137_adj_1013 , 
         \u_speaker/n134_adj_1019 , \u_speaker/n135_adj_1017 , 
         \u_speaker/n133_adj_1021 , \u_speaker/n36_adj_1357 , 
         \u_speaker/n49_adj_1353 , \u_speaker/n34_adj_1361 , 
         \u_speaker/n35_adj_1359 , \u_speaker/n32_adj_1365 , 
         \u_speaker/n33_adj_1363 , \u_speaker/n30_adj_1369 , 
         \u_speaker/n31_adj_1367 , \u_speaker/n28_adj_1373 , 
         \u_speaker/n29_adj_1371 , \u_speaker/n26_adj_1377 , 
         \u_speaker/n27_adj_1375 , \u_speaker/n36_adj_1305 , 
         \u_speaker/n49_adj_1279 , \u_speaker/n34_adj_1309 , 
         \u_speaker/n35_adj_1307 , \u_speaker/n32_adj_1313 , 
         \u_speaker/n33_adj_1311 , \u_speaker/n30_adj_1317 , 
         \u_speaker/n31_adj_1315 , \u_speaker/n28_adj_1321 , 
         \u_speaker/n29_adj_1319 , \u_speaker/n26_adj_1325 , 
         \u_speaker/n27_adj_1323 , \u_speaker/n10879 , \u_speaker/rom1_3 , 
         \u_speaker/n17242 , \u_speaker/rom1_2 , \u_speaker/n16952 , 
         \u_speaker/n18925 , \u_speaker/en_0__N_252 , 
         \u_speaker/clk_N_168_enable_523 , \u_speaker/en_0 , 
         \u_speaker/rom2_2 , n58, n17135, en_1__N_194, 
         \u_speaker/clk_N_168_enable_524 , \u_speaker/en_1 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_495_3 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_527_5 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_527_7 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_495_9 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_495_1 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_495_2 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_527_4 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_527_6 , 
         \u_speaker/u_DDS_1/fcw_r_15_N_527_8 , \u_speaker/n157_adj_887 , 
         \u_speaker/n157 , \u_speaker/n157_adj_973 , \u_speaker/n157_adj_945 , 
         \u_speaker/n157_adj_1050 , \u_speaker/n18689 , n11464, n444, n3815, 
         n18676, n436, n18679, n3830, rom1_4_N_338_0, 
         \u_speaker/rom1_4__N_289 , n18724, n12156, n18722, \u_speaker/n15925 , 
         \u_speaker/n18665 , \u_speaker/n3839 , n18644, n456, 
         \u_speaker/n16816 , \u_speaker/n10269 , \u_speaker/n18698 , 
         \u_speaker/n480 , \u_speaker/n16818 , \u_speaker/n18622 , 
         \u_speaker/n18762 , \u_speaker/n15957 , \u_speaker/n16916 , n911, 
         n18719, \u_speaker/n16929 , \u_speaker/n18642 , \u_speaker/n18718 , 
         \u_speaker/n923 , \u_speaker/n16823 , \u_speaker/n18621 , 
         \u_speaker/n145 , \u_speaker/n144 , \u_speaker/n147 , 
         \u_speaker/n146 , \u_speaker/n149 , \u_speaker/n148 , 
         \u_speaker/n151 , \u_speaker/n150 , \u_speaker/n153 , 
         \u_speaker/n152 , \u_speaker/n155 , \u_speaker/n154 , 
         \u_speaker/n156 , \u_speaker/n46_adj_1252 , \u_speaker/n47_adj_1254 , 
         \u_speaker/n44_adj_1246 , \u_speaker/n45_adj_1250 , 
         \u_speaker/n42_adj_1242 , \u_speaker/n43_adj_1244 , 
         \u_speaker/n40_adj_1236 , \u_speaker/n41_adj_1238 , 
         \u_speaker/n38_adj_1141 , \u_speaker/n39_adj_1161 , 
         \u_speaker/n37_adj_1139 , fcw_r_15_N_495_6, fcw_r_15_N_495_5, 
         fcw_r_15_N_495_8, \u_speaker/u_DDS_10/fcw_r_15_N_495_7 , n10972, 
         \u_speaker/n47_adj_1224 , \u_speaker/n48_adj_1222 , 
         \u_speaker/n45_adj_1248 , \u_speaker/n46_adj_1226 , \u_speaker/n43 , 
         \u_speaker/n44_adj_1234 , \u_speaker/n41_adj_1103 , \u_speaker/n42 , 
         \u_speaker/n39_adj_1107 , \u_speaker/n40_adj_1105 , 
         \u_speaker/n37_adj_1114 , \u_speaker/n38_adj_1109 , 
         \u_speaker/n145_adj_1052 , \u_speaker/n144_adj_1054 , 
         \u_speaker/n147_adj_1027 , \u_speaker/n146_adj_1025 , 
         \u_speaker/n149_adj_1031 , \u_speaker/n148_adj_1029 , 
         \u_speaker/n151_adj_1035 , \u_speaker/n150_adj_1033 , 
         \u_speaker/n153_adj_1041 , \u_speaker/n152_adj_1037 , 
         \u_speaker/n155_adj_1045 , \u_speaker/n154_adj_1043 , n16876, n18668, 
         \u_speaker/n156_adj_1047 , \u_speaker/n47 , \u_speaker/n48 , 
         \u_speaker/n45_adj_1163 , \u_speaker/n46_adj_1143 , 
         \u_speaker/n43_adj_842 , \u_speaker/n44_adj_1101 , 
         \u_speaker/n41_adj_1080 , \u_speaker/n42_adj_1098 , 
         \u_speaker/n39_adj_1039 , \u_speaker/n40_adj_1078 , \u_speaker/n37 , 
         \u_speaker/n38_adj_1023 , \u_speaker/n47_adj_1194 , 
         \u_speaker/n48_adj_1155 , \u_speaker/n45 , \u_speaker/n46 , 
         \u_speaker/n43_adj_1089 , \u_speaker/n44 , \u_speaker/n41 , 
         \u_speaker/n42_adj_1182 , \u_speaker/n39_adj_848 , 
         \u_speaker/n40_adj_1165 , \u_speaker/n37_adj_1151 , 
         \u_speaker/n38_adj_1167 , \u_speaker/n145_adj_889 , 
         \u_speaker/n144_adj_891 , \u_speaker/n147_adj_866 , 
         \u_speaker/n146_adj_864 , \u_speaker/n149_adj_870 , 
         \u_speaker/n148_adj_868 , \u_speaker/n151_adj_874 , 
         \u_speaker/n150_adj_872 , \u_speaker/n153_adj_878 , 
         \u_speaker/n152_adj_876 , \u_speaker/n155_adj_882 , 
         \u_speaker/n154_adj_880 , \u_speaker/n17004 , \u_speaker/n18346 , 
         \u_speaker/n156_adj_884 , \u_speaker/n18347 , 
         \u_speaker/n145_adj_947 , \u_speaker/n144_adj_949 , 
         \u_speaker/n147_adj_919 , \u_speaker/n146_adj_917 , 
         \u_speaker/n149_adj_923 , \u_speaker/n148_adj_921 , 
         \u_speaker/n151_adj_927 , \u_speaker/n150_adj_925 , 
         \u_speaker/n154_adj_939 , \u_speaker/n153_adj_933 , 
         \u_speaker/n156_adj_943 , \u_speaker/n155_adj_941 , 
         \u_speaker/n152_adj_931 , \u_speaker/n47_adj_1192 , 
         \u_speaker/n48_adj_1230 , \u_speaker/n45_adj_1196 , 
         \u_speaker/n46_adj_1232 , \u_speaker/n43_adj_1186 , 
         \u_speaker/n44_adj_1228 , \u_speaker/n41_adj_1184 , 
         \u_speaker/n42_adj_1179 , \u_speaker/n39_adj_1091 , 
         \u_speaker/n40_adj_846 , \u_speaker/n37_adj_1094 , 
         \u_speaker/n38_adj_1085 , \u_key_4/n54 , \u_key_14/n54 , n8146, n8147, 
         \u_key_15/n49 , \u_key_15/n54 , \u_key_6/n54 , \u_key_3/n54 , 
         \u_speaker/n46_adj_1382 , \u_speaker/n47_adj_1380 , 
         \u_speaker/n44_adj_1386 , \u_speaker/n45_adj_1384 , 
         \u_speaker/n42_adj_1390 , \u_speaker/n43_adj_1388 , \u_speaker/n40 , 
         \u_speaker/n41_adj_1392 , \u_speaker/n38 , \u_speaker/n39 , 
         \u_buzzer/n18640 , \u_speaker/n37_adj_1083 , n18841, n17227, 
         \u_key_7/n54 , n18690, \u_speaker/n16936 , \u_speaker/n18634 , 
         \u_speaker/n18608 , \u_speaker/u_DDS_6/n7921 , \u_speaker/n7920 , 
         \u_speaker/u_DDS_6/n6875 , \u_speaker/n18716 , \u_speaker/n15966 , 
         \u_key_9/n54 , \u_key_1/n54 , \u_key_2/n54 , \u_key_13/n54 , 
         \u_key_11/n54 , \u_key_12/n54 , \u_speaker/n145_adj_997 , 
         \u_speaker/n144_adj_999 , \u_speaker/n147_adj_993 , 
         \u_speaker/n146_adj_995 , \u_speaker/n149_adj_989 , 
         \u_speaker/n148_adj_991 , \u_speaker/n151_adj_985 , 
         \u_speaker/n150_adj_987 , \u_speaker/n153_adj_981 , 
         \u_speaker/n152_adj_983 , \u_speaker/n155_adj_977 , 
         \u_speaker/n154_adj_979 , \u_speaker/n156_adj_975 , 
         \u_buzzer/n22_adj_823 , \u_speaker/n47_adj_1349 , 
         \u_speaker/n48_adj_1351 , \u_speaker/n45_adj_1345 , 
         \u_speaker/n46_adj_1347 , \u_speaker/n43_adj_1341 , 
         \u_speaker/n44_adj_1343 , \u_speaker/n41_adj_1337 , 
         \u_speaker/n42_adj_1339 , \u_speaker/n39_adj_1329 , 
         \u_speaker/n40_adj_1333 , \u_speaker/n37_adj_1355 , 
         \u_speaker/n38_adj_1327 , \u_key_8/n54 , \u_key_10/n54 , 
         \u_speaker/n47_adj_1283 , \u_speaker/n48_adj_1281 , 
         \u_speaker/n45_adj_1287 , \u_speaker/n46_adj_1285 , 
         \u_speaker/n43_adj_1291 , \u_speaker/n44_adj_1289 , 
         \u_speaker/n41_adj_1295 , \u_speaker/n42_adj_1293 , 
         \u_speaker/n39_adj_1299 , \u_speaker/n40_adj_1297 , 
         \u_speaker/n37_adj_1303 , \u_speaker/n38_adj_1301 , n40, 
         \u_key_5/n54 , \u_speaker/n3086 , \u_speaker/n2819 , 
         \u_speaker/n2789 , \u_speaker/n2820 , \u_speaker/n2790 , 
         \u_speaker/u_count1_24_N_142_15 , \u_speaker/u_count1_24_N_142_14 , 
         \u_speaker/u_count1_14 , \u_speaker/u_count1_15 , \u_speaker/n2817 , 
         \u_speaker/n2787 , \u_speaker/n2818 , \u_speaker/n2788 , 
         \u_speaker/u_count1_24_N_142_17 , \u_speaker/u_count1_24_N_142_16 , 
         \u_speaker/u_count1_16 , \u_speaker/u_count1_17 , \u_speaker/n2815 , 
         \u_speaker/n2785 , \u_speaker/n2816 , \u_speaker/n2786 , 
         \u_speaker/u_count1_24_N_142_19 , \u_speaker/u_count1_24_N_142_18 , 
         \u_speaker/u_count1_18 , \u_speaker/u_count1_19 , \u_speaker/n2813 , 
         \u_speaker/n2783 , \u_speaker/n2814 , \u_speaker/n2784 , 
         \u_speaker/u_count1_24_N_142_21 , \u_speaker/u_count1_24_N_142_20 , 
         \u_speaker/u_count1_20 , \u_speaker/u_count1_21 , \u_speaker/n2811 , 
         \u_speaker/n2781 , \u_speaker/n2812 , \u_speaker/n2782 , 
         \u_speaker/u_count1_24_N_142_23 , \u_speaker/u_count1_24_N_142_22 , 
         \u_speaker/u_count1_22 , \u_speaker/u_count1_23 , \u_speaker/n2810 , 
         \u_speaker/n2780 , \u_speaker/u_count1_24_N_142_24 , 
         \u_speaker/u_count1_24 , n17005, \u_speaker/n3440 , \u_speaker/n3469 , 
         \u_speaker/n3498 , \u_speaker/n3692 , \u_speaker/n23_adj_1092 , 
         \u_speaker/n3599 , \u_speaker/n3665 , \u_speaker/n3638 , 
         \u_speaker/n10964 , \u_speaker/u_count2_14 , \u_speaker/n3439 , 
         \u_speaker/n3468 , \u_speaker/n3497 , \u_speaker/n3691 , 
         \u_speaker/n3664 , \u_speaker/n3637 , \u_speaker/u_count2_15 , 
         \u_speaker/n3438 , \u_speaker/n3467 , \u_speaker/n3496 , 
         \u_speaker/n3690 , \u_speaker/n3663 , \u_speaker/n3636 , 
         \u_speaker/u_count2_16 , \u_speaker/n3437 , \u_speaker/n3466 , 
         \u_speaker/n3495 , \u_speaker/n3689 , \u_speaker/n3662 , 
         \u_speaker/n3635 , \u_speaker/u_count2_17 , \u_speaker/n3436 , 
         \u_speaker/n3465 , \u_speaker/n3494 , \u_speaker/n3688 , 
         \u_speaker/n3661 , \u_speaker/n3634 , \u_speaker/u_count2_18 , 
         \u_speaker/n3435 , \u_speaker/n3464 , \u_speaker/n3493 , 
         \u_speaker/n3687 , \u_speaker/n3660 , \u_speaker/n3633 , 
         \u_speaker/u_count2_19 , \u_speaker/n3434 , \u_speaker/n3463 , 
         \u_speaker/n3492 , \u_speaker/n3686 , \u_speaker/n3659 , 
         \u_speaker/n3632 , \u_speaker/u_count2_20 , \u_speaker/n3433 , 
         \u_speaker/n3462 , \u_speaker/n3491 , \u_speaker/n3685 , 
         \u_speaker/n3658 , \u_speaker/n3631 , \u_speaker/u_count2_21 , 
         \u_speaker/n3432 , \u_speaker/n3461 , \u_speaker/n3490 , 
         \u_speaker/n3684 , \u_speaker/n3657 , \u_speaker/n3630 , 
         \u_speaker/u_count2_22 , \u_speaker/n3431 , \u_speaker/n3460 , 
         \u_speaker/n3489 , \u_speaker/n3683 , \u_speaker/n3656 , 
         \u_speaker/n3629 , \u_speaker/u_count2_23 , \u_speaker/n3430 , 
         \u_speaker/n3459 , \u_speaker/n3488 , \u_speaker/n3682 , 
         \u_speaker/n3655 , \u_speaker/n3628 , \u_speaker/u_count2_24 , 
         \u_key_state/n49 , \u_key_state/n54 , n18669, n73, n10074, 
         yinjie_2_N_1_1, yinjie_2_N_1_0, n13, yinjie_2_N_1_2, n18735, n18754, 
         \u_speaker/n18599 , \u_speaker/n17245 , \u_speaker/n3074 , 
         \u_speaker/n3080 , \u_speaker/n2625 , \u_speaker/n2596 , 
         \u_speaker/n3084 , \u_speaker/n2626 , \u_speaker/n2597 , 
         \u_speaker/n2627 , \u_speaker/n2598 , \u_speaker/n2628 , 
         \u_speaker/n2599 , \u_speaker/n2629 , \u_speaker/n2600 , 
         \u_speaker/n2630 , \u_speaker/n2601 , \u_speaker/n2631 , 
         \u_speaker/n2602 , \u_speaker/n2632 , \u_speaker/n2603 , 
         \u_speaker/n2633 , \u_speaker/n2604 , \u_speaker/n2634 , 
         \u_speaker/n2605 , \u_speaker/n3064 , \u_speaker/n3062 , 
         \u_speaker/n3076 , \u_speaker/n2683 , \u_speaker/n2684 , 
         \u_speaker/n2685 , \u_speaker/n2686 , \u_speaker/n2687 , 
         \u_speaker/n2688 , \u_speaker/n2689 , \u_speaker/n2690 , 
         \u_speaker/n2691 , \u_speaker/n2692 , \u_speaker/n2635 , 
         \u_speaker/n2606 , \u_speaker/n2693 , \u_speaker/n3068 , 
         \u_speaker/n3066 , \u_speaker/n3082 , \u_speaker/n3078 , 
         \u_speaker/n2723 , \u_speaker/n2722 , \u_speaker/n2721 , 
         \u_speaker/n2720 , \u_speaker/n18858 , \u_speaker/n18857 , 
         \u_speaker/n163 , \u_speaker/n18970 , \u_speaker/n2719 , 
         \u_speaker/n2718 , \u_speaker/n2717 , \u_speaker/n2716 , 
         \u_speaker/n2715 , \u_speaker/n2714 , \u_speaker/n2724 , 
         \u_speaker/n18659 , \u_speaker/n18924 , \u_speaker/n18921 , 
         \u_speaker/n3070 , \u_speaker/n10946 , \u_speaker/n17236 , n18850, 
         \u_speaker/n18856 , \u_speaker/n3381 , \u_speaker/n3410 , 
         \u_speaker/n3380 , \u_speaker/n3409 , \u_speaker/n3379 , 
         \u_speaker/n3408 , \u_speaker/n3378 , \u_speaker/n3407 , 
         \u_speaker/n3377 , \u_speaker/n3406 , \u_speaker/n3376 , 
         \u_speaker/n3405 , \u_speaker/n3375 , \u_speaker/n3404 , 
         \u_speaker/n3374 , \u_speaker/n3403 , \u_speaker/n3373 , 
         \u_speaker/n3402 , \u_speaker/n3372 , \u_speaker/n3401 , 
         \u_speaker/n3382 , \u_speaker/n3411 , n18458, n18461, n18443, n18844, 
         n18721, \u_buzzer/n12 , \u_buzzer/n4_adj_805 , \u_buzzer/n26_adj_802 , 
         \u_buzzer/n17088 , \u_buzzer/n18741 , \u_buzzer/n17091 , 
         \u_buzzer/n17097 , \u_buzzer/n32 , \u_buzzer/n24 , n18707, n18725, 
         \u_buzzer/n6 , \u_buzzer/n20 , \u_buzzer/n17066 , \u_buzzer/n18744 , 
         \u_buzzer/n8 , \u_buzzer/n17071 , n18837, n109_adj_1509, n18779, 
         n17188, n17185, n17184, n17181, n17182, n17162, n17136, n17126, 
         n17127, n17130, n17131, n17128, n17137, n17138, n17145, n17143, 
         n17144, n17146, n17147, n17148, n17153, n17154, n17155, n37_adj_1467, 
         n18773, n17158, n17156, n18781, n17157, n17163, n17164, n17171, 
         n17169, n17170, n17179, n17180, n17183, n17186, n17187, n17189, 
         n17190, n17197, n17195, n17196, n17202, n91, n17203, n17204, n17205, 
         n17206, n17207, n17217, n17215, n17216, n17225, n17226, n6_adj_1451, 
         n17020, n17230, n17129, \u_speaker/n121_adj_915 , \u_speaker/n18344 , 
         n5_adj_1445, n6_adj_1443, n18813, n18747, \u_speaker/n18764 , 
         \u_speaker/n18664 , \u_speaker/n12287 , n18814, n5_adj_1447, 
         \u_speaker/n468 , n18770, \u_speaker/n3799 , \u_speaker/n137_adj_912 , 
         n6, n16_adj_1439, n18444, n18677, \u_buzzer/n20_adj_821 , 
         \u_buzzer/n24_adj_820 , n5, \u_speaker/n18345 , n18758, 
         \u_speaker/n18966 , \u_speaker/n18967 , n31, n321, \u_speaker/n17920 , 
         n37, n351, \u_speaker/n18653 , \u_buzzer/n18617 , \u_speaker/n18675 , 
         n16920, n18619, n18685, n18736, n247, \u_speaker/n8 , n18708, n9, 
         \u_speaker/n16843 , \u_speaker/n3072 , \u_speaker/n10301 , 
         \u_speaker/n18767 , \u_speaker/n16871 , n464, \u_speaker/n18699 , 
         \u_speaker/n18693 , n18649, \u_speaker/n16004 , \u_speaker/n18611 , 
         n18680, n18655, \u_speaker/n18666 , \u_buzzer/n18648 , n16888, 
         \u_speaker/n4_adj_1099 , n18606, n3800, n18684, n18682, 
         \u_buzzer/n8_adj_828 , n16828, n18616, \u_speaker/n3894 , 
         \u_speaker/u_DDS_6/n18759 , \u_speaker/u_DDS_5/n18723 , 
         \u_speaker/u_DDS_4/n18777 , \u_speaker/u_DDS_4/n18702 , 
         \u_speaker/u_DDS_3/n18778 , \u_speaker/u_DDS_12/n18776 , 
         \u_key_state/n60 , \u_key_state/n55 , \u_key_state/n48 , 
         \u_key_state/n40_adj_830 , \u_key_state/n52 , \u_key_state/n58 , 
         \u_key_state/n39_adj_829 , \u_key_state/n44 , n92_adj_1474, 
         n9_adj_1506, n42, n46, n41, n26_adj_1449, n38, n44, n25_adj_1450, n30, 
         n16847, n18812, n13027, n12259, n18671, n4, n18774, \u_buzzer/n17069 , 
         \u_buzzer/n18739 , \u_buzzer/n18740 , \u_buzzer/n17411 , 
         \u_buzzer/n11 , \u_buzzer/n18748 , \u_buzzer/n18749 , 
         \u_buzzer/n17081 , \u_buzzer/n14_adj_801 , \u_buzzer/n18738 , 
         \u_buzzer/n17052 , \u_buzzer/n18752 , \u_buzzer/n18742 , 
         \u_buzzer/n18743 , \u_buzzer/n17413 , \u_buzzer/n17050 , 
         \u_buzzer/n18 , \u_buzzer/n17028 , \u_buzzer/n18745 , 
         \u_buzzer/n17037 , \u_buzzer/n10 , \u_buzzer/n18751 , 
         \u_buzzer/n6_adj_807 , n18696, \u_buzzer/n18650 , n18652, 
         \u_buzzer/n16_adj_824 , \u_buzzer/n30_adj_825 , \u_buzzer/n17345 , 
         \u_buzzer/n29 , \u_buzzer/n28_adj_827 , \u_key_5/n48 , 
         \u_key_5/n40_adj_799 , \u_key_5/n52 , \u_key_5/n58 , 
         \u_key_5/n39_adj_798 , \u_key_5/n44 , n18654, n312, n18804, 
         \u_key_8/n50 , \u_key_8/n49 , \u_key_8/n60 , \u_key_8/n55 , 
         \u_key_8/n48 , \u_key_8/n40_adj_797 , \u_key_8/n52 , \u_key_8/n58 , 
         \u_key_8/n39_adj_796 , \u_key_8/n44 , \u_key_10/n50 , \u_key_10/n49 , 
         \u_key_10/n60 , \u_key_10/n55 , \u_key_10/n48 , 
         \u_key_10/n40_adj_793 , \u_key_10/n52 , \u_key_10/n58 , 
         \u_key_10/n39_adj_792 , \u_key_10/n44 , \u_key_11/n50 , 
         \u_key_11/n49 , \u_key_11/n60 , \u_key_11/n55 , \u_key_11/n48 , 
         \u_key_11/n40_adj_791 , \u_key_11/n52 , \u_key_11/n58 , 
         \u_key_11/n39_adj_790 , \u_key_11/n44 , \u_key_12/n50 , 
         \u_key_12/n49 , \u_key_12/n60 , \u_key_12/n55 , \u_key_12/n48 , 
         \u_key_12/n40_adj_789 , \u_key_12/n52 , \u_key_12/n58 , 
         \u_key_12/n39_adj_788 , \u_key_12/n44 , \u_key_2/n48 , 
         \u_key_2/n40_adj_787 , \u_key_2/n52 , \u_key_2/n58 , 
         \u_key_2/n39_adj_786 , \u_key_2/n44 , \u_key_13/n50 , \u_key_13/n49 , 
         \u_key_13/n60 , \u_key_13/n55 , \u_key_13/n48 , 
         \u_key_13/n40_adj_785 , \u_key_13/n52 , \u_key_13/n58 , 
         \u_key_13/n39_adj_784 , \u_key_13/n44 , \u_key_9/n50 , \u_key_9/n49 , 
         \u_key_9/n60 , \u_key_9/n55 , \u_key_9/n48 , \u_key_9/n40_adj_783 , 
         \u_key_9/n52 , \u_key_9/n58 , \u_key_9/n39_adj_782 , \u_key_9/n44 , 
         \u_key_1/n48 , \u_key_1/n40_adj_779 , \u_key_1/n52 , \u_key_1/n58 , 
         \u_key_1/n39_adj_778 , \u_key_1/n44 , \u_key_7/n50 , \u_key_7/n49 , 
         \u_key_7/n60 , \u_key_7/n55 , \u_key_7/n48 , \u_key_7/n40_adj_777 , 
         \u_key_7/n52 , \u_key_7/n58 , \u_key_7/n39_adj_776 , \u_key_7/n44 , 
         \u_key_6/n50 , \u_key_6/n49 , \u_key_6/n60 , \u_key_6/n55 , 
         \u_key_6/n48 , \u_key_6/n40_adj_775 , \u_key_6/n52 , \u_key_6/n58 , 
         \u_key_6/n39_adj_774 , \u_key_6/n44 , n18726, n18727, n16869, n16859, 
         \u_key_3/n48 , \u_key_3/n40_adj_773 , \u_key_3/n52 , \u_key_3/n58 , 
         \u_key_3/n39_adj_772 , \u_key_3/n44 , \u_key_15/n60 , \u_key_15/n55 , 
         \u_key_15/n48 , \u_key_15/n40_adj_771 , \u_key_15/n52 , 
         \u_key_15/n58 , \u_key_15/n39_adj_770 , \u_key_15/n44 , \u_key_4/n48 , 
         \u_key_4/n40_adj_769 , \u_key_4/n52 , \u_key_4/n58 , 
         \u_key_4/n39_adj_768 , \u_key_4/n44 , \u_key_14/n50 , \u_key_14/n49 , 
         \u_key_14/n60 , \u_key_14/n55 , \u_key_14/n48 , 
         \u_key_14/n40_adj_767 , \u_key_14/n52 , \u_key_14/n58 , 
         \u_key_14/n39_adj_766 , \u_key_14/n44 , key_pa_c, rst_n_c, sys_clk_c, 
         VCCI;

  SLICE_0 SLICE_0( .A1(cnt_22), .A0(cnt_21), .DI1(n111_adj_1498), 
    .DI0(n112_adj_1499), .LSR(n10969), .CLK(clk), .FCI(n15793), 
    .F0(n112_adj_1499), .Q0(cnt_21), .F1(n111_adj_1498), .Q1(cnt_22), 
    .FCO(n15794));
  SLICE_1 SLICE_1( .A1(cnt_20), .A0(cnt_19), .DI1(n113_adj_1500), 
    .DI0(n114_adj_1501), .LSR(n10969), .CLK(clk), .FCI(n15792), 
    .F0(n114_adj_1501), .Q0(cnt_19), .F1(n113_adj_1500), .Q1(cnt_20), 
    .FCO(n15793));
  SLICE_2 SLICE_2( .A1(cnt_18), .A0(cnt_17), .DI1(n115_adj_1502), .DI0(n116), 
    .LSR(n10969), .CLK(clk), .FCI(n15791), .F0(n116), .Q0(cnt_17), 
    .F1(n115_adj_1502), .Q1(cnt_18), .FCO(n15792));
  SLICE_3 SLICE_3( .A1(cnt_16), .A0(cnt_15), .DI1(n117), .DI0(n118), 
    .LSR(n10969), .CLK(clk), .FCI(n15790), .F0(n118), .Q0(cnt_15), .F1(n117), 
    .Q1(cnt_16), .FCO(n15791));
  SLICE_4 SLICE_4( .A1(cnt_14), .A0(cnt_13), .DI1(n119), .DI0(n120), 
    .LSR(n10969), .CLK(clk), .FCI(n15789), .F0(n120), .Q0(cnt_13), .F1(n119), 
    .Q1(cnt_14), .FCO(n15790));
  SLICE_5 SLICE_5( .A1(cnt_12), .A0(cnt_11), .DI1(n121), .DI0(n122), 
    .LSR(n10969), .CLK(clk), .FCI(n15788), .F0(n122), .Q0(cnt_11), .F1(n121), 
    .Q1(cnt_12), .FCO(n15789));
  SLICE_6 SLICE_6( .A1(cnt_10), .A0(cnt_9), .DI1(n123), .DI0(n124), 
    .LSR(n10969), .CLK(clk), .FCI(n15787), .F0(n124), .Q0(cnt_9), .F1(n123), 
    .Q1(cnt_10), .FCO(n15788));
  SLICE_7 SLICE_7( .A1(cnt_8), .A0(cnt_7), .DI1(n125), .DI0(n126), 
    .LSR(n10969), .CLK(clk), .FCI(n15786), .F0(n126), .Q0(cnt_7), .F1(n125), 
    .Q1(cnt_8), .FCO(n15787));
  u_speaker_SLICE_8 \u_speaker/SLICE_8 ( .B1(\u_speaker/data_out2_3 ), 
    .A1(\u_speaker/data_out1_3 ), .B0(\u_speaker/data_out2_2 ), 
    .A0(\u_speaker/data_out1_2 ), .FCI(\u_speaker/n15477 ), 
    .F0(PWM_in_12_N_452_2), .F1(PWM_in_12_N_452_3), .FCO(\u_speaker/n15478 ));
  u_speaker_SLICE_9 \u_speaker/SLICE_9 ( .B1(\u_speaker/data_out2_1 ), 
    .A1(\u_speaker/data_out1_1 ), .B0(data_out2_0), .A0(data_out1_0), 
    .F1(PWM_in_12_N_452_1), .FCO(\u_speaker/n15477 ));
  u_speaker_SLICE_10 \u_speaker/SLICE_10 ( .B0(\u_speaker/PWM_in_12 ), 
    .A0(\u_speaker/PWM_DDS_accumulator_12 ), 
    .DI1(\u_speaker/PWM_DDS_accumulator_12_N_321_13 ), 
    .DI0(\u_speaker/PWM_DDS_accumulator_12_N_321_12 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .FCI(\u_speaker/n15462 ), 
    .F0(\u_speaker/PWM_DDS_accumulator_12_N_321_12 ), 
    .Q0(\u_speaker/PWM_DDS_accumulator_12 ), 
    .F1(\u_speaker/PWM_DDS_accumulator_12_N_321_13 ), .Q1(pwm_out2_c));
  u_speaker_SLICE_11 \u_speaker/SLICE_11 ( .B1(\u_speaker/PWM_in_11 ), 
    .A1(\u_speaker/PWM_DDS_accumulator_11 ), .B0(\u_speaker/PWM_in_10 ), 
    .A0(\u_speaker/PWM_DDS_accumulator_10 ), 
    .DI1(\u_speaker/PWM_DDS_accumulator_12_N_321_11 ), 
    .DI0(\u_speaker/PWM_DDS_accumulator_12_N_321_10 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .FCI(\u_speaker/n15461 ), 
    .F0(\u_speaker/PWM_DDS_accumulator_12_N_321_10 ), 
    .Q0(\u_speaker/PWM_DDS_accumulator_10 ), 
    .F1(\u_speaker/PWM_DDS_accumulator_12_N_321_11 ), 
    .Q1(\u_speaker/PWM_DDS_accumulator_11 ), .FCO(\u_speaker/n15462 ));
  u_speaker_SLICE_12 \u_speaker/SLICE_12 ( .B1(\u_speaker/PWM_in_9 ), 
    .A1(\u_speaker/PWM_DDS_accumulator_9 ), .B0(\u_speaker/PWM_in_8 ), 
    .A0(\u_speaker/PWM_DDS_accumulator_8 ), 
    .DI1(\u_speaker/PWM_DDS_accumulator_12_N_321_9 ), 
    .DI0(\u_speaker/PWM_DDS_accumulator_12_N_321_8 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .FCI(\u_speaker/n15460 ), 
    .F0(\u_speaker/PWM_DDS_accumulator_12_N_321_8 ), 
    .Q0(\u_speaker/PWM_DDS_accumulator_8 ), 
    .F1(\u_speaker/PWM_DDS_accumulator_12_N_321_9 ), 
    .Q1(\u_speaker/PWM_DDS_accumulator_9 ), .FCO(\u_speaker/n15461 ));
  u_speaker_SLICE_13 \u_speaker/SLICE_13 ( .B1(\u_speaker/PWM_in_7 ), 
    .A1(\u_speaker/PWM_DDS_accumulator_7 ), .B0(\u_speaker/PWM_in_6 ), 
    .A0(\u_speaker/PWM_DDS_accumulator_6 ), 
    .DI1(\u_speaker/PWM_DDS_accumulator_12_N_321_7 ), 
    .DI0(\u_speaker/PWM_DDS_accumulator_12_N_321_6 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .FCI(\u_speaker/n15459 ), 
    .F0(\u_speaker/PWM_DDS_accumulator_12_N_321_6 ), 
    .Q0(\u_speaker/PWM_DDS_accumulator_6 ), 
    .F1(\u_speaker/PWM_DDS_accumulator_12_N_321_7 ), 
    .Q1(\u_speaker/PWM_DDS_accumulator_7 ), .FCO(\u_speaker/n15460 ));
  u_speaker_SLICE_14 \u_speaker/SLICE_14 ( .B1(\u_speaker/PWM_in_5 ), 
    .A1(\u_speaker/PWM_DDS_accumulator_5 ), .B0(\u_speaker/PWM_in_4 ), 
    .A0(\u_speaker/PWM_DDS_accumulator_4 ), 
    .DI1(\u_speaker/PWM_DDS_accumulator_12_N_321_5 ), 
    .DI0(\u_speaker/PWM_DDS_accumulator_12_N_321_4 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .FCI(\u_speaker/n15458 ), 
    .F0(\u_speaker/PWM_DDS_accumulator_12_N_321_4 ), 
    .Q0(\u_speaker/PWM_DDS_accumulator_4 ), 
    .F1(\u_speaker/PWM_DDS_accumulator_12_N_321_5 ), 
    .Q1(\u_speaker/PWM_DDS_accumulator_5 ), .FCO(\u_speaker/n15459 ));
  u_speaker_SLICE_15 \u_speaker/SLICE_15 ( .B1(\u_speaker/PWM_in_3 ), 
    .A1(\u_speaker/PWM_DDS_accumulator_3 ), .B0(\u_speaker/PWM_in_2 ), 
    .A0(\u_speaker/PWM_DDS_accumulator_2 ), 
    .DI1(\u_speaker/PWM_DDS_accumulator_12_N_321_3 ), 
    .DI0(\u_speaker/PWM_DDS_accumulator_12_N_321_2 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .FCI(\u_speaker/n15457 ), 
    .F0(\u_speaker/PWM_DDS_accumulator_12_N_321_2 ), 
    .Q0(\u_speaker/PWM_DDS_accumulator_2 ), 
    .F1(\u_speaker/PWM_DDS_accumulator_12_N_321_3 ), 
    .Q1(\u_speaker/PWM_DDS_accumulator_3 ), .FCO(\u_speaker/n15458 ));
  u_speaker_SLICE_16 \u_speaker/SLICE_16 ( .B1(\u_speaker/PWM_in_1 ), 
    .A1(\u_speaker/PWM_DDS_accumulator_1 ), .B0(\u_speaker/PWM_in_0 ), 
    .A0(\u_speaker/PWM_DDS_accumulator_0 ), 
    .DI1(\u_speaker/PWM_DDS_accumulator_12_N_321_1 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), 
    .F1(\u_speaker/PWM_DDS_accumulator_12_N_321_1 ), 
    .Q1(\u_speaker/PWM_DDS_accumulator_1 ), .FCO(\u_speaker/n15457 ));
  u_speaker_SLICE_17 \u_speaker/SLICE_17 ( .FCI(\u_speaker/n15482 ), 
    .F0(PWM_in_12_N_452_12));
  u_speaker_SLICE_18 \u_speaker/SLICE_18 ( .B1(\u_speaker/data_out2_11 ), 
    .A1(\u_speaker/data_out1_11 ), .B0(\u_speaker/data_out2_10 ), 
    .A0(\u_speaker/data_out1_10 ), .FCI(\u_speaker/n15481 ), 
    .F0(PWM_in_12_N_452_10), .F1(PWM_in_12_N_452_11), .FCO(\u_speaker/n15482 ));
  u_speaker_SLICE_19 \u_speaker/SLICE_19 ( .B1(\u_speaker/data_out2_9 ), 
    .A1(\u_speaker/data_out1_9 ), .B0(\u_speaker/data_out2_8 ), 
    .A0(\u_speaker/data_out1_8 ), .FCI(\u_speaker/n15480 ), 
    .F0(PWM_in_12_N_452_8), .F1(PWM_in_12_N_452_9), .FCO(\u_speaker/n15481 ));
  u_speaker_SLICE_20 \u_speaker/SLICE_20 ( .B1(\u_speaker/data_out2_7 ), 
    .A1(\u_speaker/data_out1_7 ), .B0(\u_speaker/data_out2_6 ), 
    .A0(\u_speaker/data_out1_6 ), .FCI(\u_speaker/n15479 ), 
    .F0(PWM_in_12_N_452_6), .F1(PWM_in_12_N_452_7), .FCO(\u_speaker/n15480 ));
  u_speaker_SLICE_21 \u_speaker/SLICE_21 ( .B1(\u_speaker/data_out2_5 ), 
    .A1(\u_speaker/data_out1_5 ), .B0(\u_speaker/data_out2_4 ), 
    .A0(\u_speaker/data_out1_4 ), .FCI(\u_speaker/n15478 ), 
    .F0(PWM_in_12_N_452_4), .F1(PWM_in_12_N_452_5), .FCO(\u_speaker/n15479 ));
  u_speaker_u_DDS_9_SLICE_22 \u_speaker/u_DDS_9/SLICE_22 ( 
    .A1(\u_speaker/count9_24 ), .A0(\u_speaker/count9_23 ), 
    .FCI(\u_speaker/u_DDS_9/n15429 ), 
    .F0(\u_speaker/count_24_N_543_23_adj_1322 ), 
    .F1(\u_speaker/count_24_N_543_24_adj_1324 ));
  u_speaker_u_DDS_9_SLICE_23 \u_speaker/u_DDS_9/SLICE_23 ( 
    .A1(\u_speaker/count9_22 ), .A0(\u_speaker/count9_21 ), 
    .FCI(\u_speaker/u_DDS_9/n15428 ), 
    .F0(\u_speaker/count_24_N_543_21_adj_1318 ), 
    .F1(\u_speaker/count_24_N_543_22_adj_1320 ), 
    .FCO(\u_speaker/u_DDS_9/n15429 ));
  u_speaker_u_DDS_9_SLICE_24 \u_speaker/u_DDS_9/SLICE_24 ( 
    .A1(\u_speaker/count9_20 ), .A0(\u_speaker/count9_19 ), 
    .FCI(\u_speaker/u_DDS_9/n15427 ), 
    .F0(\u_speaker/count_24_N_543_19_adj_1314 ), 
    .F1(\u_speaker/count_24_N_543_20_adj_1316 ), 
    .FCO(\u_speaker/u_DDS_9/n15428 ));
  u_speaker_u_DDS_9_SLICE_25 \u_speaker/u_DDS_9/SLICE_25 ( 
    .A1(\u_speaker/count9_18 ), .A0(\u_speaker/count9_17 ), 
    .FCI(\u_speaker/u_DDS_9/n15426 ), 
    .F0(\u_speaker/count_24_N_543_17_adj_1310 ), 
    .F1(\u_speaker/count_24_N_543_18_adj_1312 ), 
    .FCO(\u_speaker/u_DDS_9/n15427 ));
  u_speaker_u_DDS_9_SLICE_26 \u_speaker/u_DDS_9/SLICE_26 ( 
    .A1(\u_speaker/count9_16 ), .A0(\u_speaker/count9_15 ), 
    .FCI(\u_speaker/u_DDS_9/n15425 ), 
    .F0(\u_speaker/count_24_N_543_15_adj_1306 ), 
    .F1(\u_speaker/count_24_N_543_16_adj_1308 ), 
    .FCO(\u_speaker/u_DDS_9/n15426 ));
  u_speaker_u_DDS_9_SLICE_27 \u_speaker/u_DDS_9/SLICE_27 ( 
    .A1(\u_speaker/count9_14 ), .A0(\u_speaker/u_DDS_9/count9_13 ), 
    .FCI(\u_speaker/u_DDS_9/n15424 ), 
    .F0(\u_speaker/count_24_N_543_13_adj_1302 ), 
    .F1(\u_speaker/count_24_N_543_14_adj_1304 ), 
    .FCO(\u_speaker/u_DDS_9/n15425 ));
  u_speaker_u_DDS_9_SLICE_28 \u_speaker/u_DDS_9/SLICE_28 ( 
    .A1(\u_speaker/u_DDS_9/count9_12 ), .A0(\u_speaker/u_DDS_9/count9_11 ), 
    .FCI(\u_speaker/u_DDS_9/n15423 ), 
    .F0(\u_speaker/count_24_N_543_11_adj_1298 ), 
    .F1(\u_speaker/count_24_N_543_12_adj_1300 ), 
    .FCO(\u_speaker/u_DDS_9/n15424 ));
  u_speaker_SLICE_29 \u_speaker/SLICE_29 ( .B1(\u_speaker/u_DDS_9/fcw_r_10 ), 
    .A1(\u_speaker/u_DDS_9/count9_10 ), .B0(\u_speaker/u_DDS_9/fcw_r_9 ), 
    .A0(\u_speaker/u_DDS_9/count9_9 ), .M0(n18785), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_9/n15422 ), 
    .F0(\u_speaker/count_24_N_543_9_adj_1294 ), 
    .Q0(\u_speaker/fcw_r_8_adj_1352 ), 
    .F1(\u_speaker/count_24_N_543_10_adj_1296 ), 
    .FCO(\u_speaker/u_DDS_9/n15423 ));
  u_speaker_u_DDS_9_SLICE_30 \u_speaker/u_DDS_9/SLICE_30 ( 
    .B1(\u_speaker/fcw_r_8_adj_1278 ), .A1(\u_speaker/u_DDS_9/count9_8 ), 
    .B0(\u_speaker/u_DDS_9/fcw_r_10 ), .A0(\u_speaker/u_DDS_9/count9_7 ), 
    .FCI(\u_speaker/u_DDS_9/n15421 ), 
    .F0(\u_speaker/count_24_N_543_7_adj_1290 ), 
    .F1(\u_speaker/count_24_N_543_8_adj_1292 ), 
    .FCO(\u_speaker/u_DDS_9/n15422 ));
  u_speaker_u_DDS_9_SLICE_31 \u_speaker/u_DDS_9/SLICE_31 ( 
    .B1(\u_speaker/u_DDS_9/fcw_r_9 ), .A1(\u_speaker/u_DDS_9/count9_6 ), 
    .B0(\u_speaker/fcw_r_8_adj_1278 ), .A0(\u_speaker/u_DDS_9/count9_5 ), 
    .FCI(\u_speaker/u_DDS_9/n15420 ), 
    .F0(\u_speaker/count_24_N_543_5_adj_1286 ), 
    .F1(\u_speaker/count_24_N_543_6_adj_1288 ), 
    .FCO(\u_speaker/u_DDS_9/n15421 ));
  u_speaker_u_DDS_9_SLICE_32 \u_speaker/u_DDS_9/SLICE_32 ( 
    .A1(\u_speaker/u_DDS_9/count9_4 ), .B0(\u_speaker/u_DDS_9/fcw_r_10 ), 
    .A0(\u_speaker/u_DDS_9/count9_3 ), .FCI(\u_speaker/u_DDS_9/n15419 ), 
    .F0(\u_speaker/count_24_N_543_3_adj_1282 ), 
    .F1(\u_speaker/count_24_N_543_4_adj_1284 ), 
    .FCO(\u_speaker/u_DDS_9/n15420 ));
  u_speaker_u_DDS_9_SLICE_33 \u_speaker/u_DDS_9/SLICE_33 ( 
    .B1(\u_speaker/u_DDS_9/fcw_r_9 ), .A1(\u_speaker/u_DDS_9/count9_2 ), 
    .B0(\u_speaker/fcw_r_8_adj_1278 ), .A0(\u_speaker/count9_1 ), 
    .F1(\u_speaker/count_24_N_543_2_adj_1280 ), 
    .FCO(\u_speaker/u_DDS_9/n15419 ));
  u_speaker_u_DDS_8_SLICE_34 \u_speaker/u_DDS_8/SLICE_34 ( 
    .A1(\u_speaker/count8_24 ), .A0(\u_speaker/count8_23 ), 
    .FCI(\u_speaker/u_DDS_8/n15416 ), 
    .F0(\u_speaker/count_24_N_543_23_adj_1374 ), 
    .F1(\u_speaker/count_24_N_543_24_adj_1376 ));
  u_speaker_u_DDS_8_SLICE_35 \u_speaker/u_DDS_8/SLICE_35 ( 
    .A1(\u_speaker/count8_22 ), .A0(\u_speaker/count8_21 ), 
    .FCI(\u_speaker/u_DDS_8/n15415 ), 
    .F0(\u_speaker/count_24_N_543_21_adj_1370 ), 
    .F1(\u_speaker/count_24_N_543_22_adj_1372 ), 
    .FCO(\u_speaker/u_DDS_8/n15416 ));
  u_speaker_u_DDS_8_SLICE_36 \u_speaker/u_DDS_8/SLICE_36 ( 
    .A1(\u_speaker/count8_20 ), .A0(\u_speaker/count8_19 ), 
    .FCI(\u_speaker/u_DDS_8/n15414 ), 
    .F0(\u_speaker/count_24_N_543_19_adj_1366 ), 
    .F1(\u_speaker/count_24_N_543_20_adj_1368 ), 
    .FCO(\u_speaker/u_DDS_8/n15415 ));
  u_speaker_u_DDS_8_SLICE_37 \u_speaker/u_DDS_8/SLICE_37 ( 
    .A1(\u_speaker/count8_18 ), .A0(\u_speaker/count8_17 ), 
    .FCI(\u_speaker/u_DDS_8/n15413 ), 
    .F0(\u_speaker/count_24_N_543_17_adj_1362 ), 
    .F1(\u_speaker/count_24_N_543_18_adj_1364 ), 
    .FCO(\u_speaker/u_DDS_8/n15414 ));
  u_speaker_u_DDS_8_SLICE_38 \u_speaker/u_DDS_8/SLICE_38 ( 
    .A1(\u_speaker/count8_16 ), .A0(\u_speaker/count8_15 ), 
    .FCI(\u_speaker/u_DDS_8/n15412 ), 
    .F0(\u_speaker/count_24_N_543_15_adj_1358 ), 
    .F1(\u_speaker/count_24_N_543_16_adj_1360 ), 
    .FCO(\u_speaker/u_DDS_8/n15413 ));
  u_speaker_u_DDS_8_SLICE_39 \u_speaker/u_DDS_8/SLICE_39 ( 
    .A1(\u_speaker/count8_14 ), .A0(\u_speaker/u_DDS_8/count8_13 ), 
    .FCI(\u_speaker/u_DDS_8/n15411 ), 
    .F0(\u_speaker/count_24_N_543_13_adj_1354 ), 
    .F1(\u_speaker/count_24_N_543_14_adj_1356 ), 
    .FCO(\u_speaker/u_DDS_8/n15412 ));
  u_speaker_u_DDS_8_SLICE_40 \u_speaker/u_DDS_8/SLICE_40 ( 
    .A1(\u_speaker/u_DDS_8/count8_12 ), .A0(\u_speaker/u_DDS_8/count8_11 ), 
    .FCI(\u_speaker/u_DDS_8/n15410 ), 
    .F0(\u_speaker/count_24_N_543_11_adj_1328 ), 
    .F1(\u_speaker/count_24_N_543_12_adj_1326 ), 
    .FCO(\u_speaker/u_DDS_8/n15411 ));
  u_speaker_u_DDS_8_SLICE_41 \u_speaker/u_DDS_8/SLICE_41 ( 
    .B1(\u_speaker/u_DDS_8/fcw_r_10 ), .A1(\u_speaker/u_DDS_8/count8_10 ), 
    .B0(\u_speaker/u_DDS_8/fcw_r_9 ), .A0(\u_speaker/u_DDS_8/count8_9 ), 
    .FCI(\u_speaker/u_DDS_8/n15409 ), 
    .F0(\u_speaker/count_24_N_543_9_adj_1336 ), 
    .F1(\u_speaker/count_24_N_543_10_adj_1332 ), 
    .FCO(\u_speaker/u_DDS_8/n15410 ));
  u_speaker_u_DDS_8_SLICE_42 \u_speaker/u_DDS_8/SLICE_42 ( 
    .B1(\u_speaker/fcw_r_8_adj_1352 ), .A1(\u_speaker/u_DDS_8/count8_8 ), 
    .A0(\u_speaker/u_DDS_8/count8_7 ), .FCI(\u_speaker/u_DDS_8/n15408 ), 
    .F0(\u_speaker/count_24_N_543_7_adj_1340 ), 
    .F1(\u_speaker/count_24_N_543_8_adj_1338 ), 
    .FCO(\u_speaker/u_DDS_8/n15409 ));
  u_speaker_u_DDS_8_SLICE_43 \u_speaker/u_DDS_8/SLICE_43 ( 
    .B1(\u_speaker/u_DDS_8/fcw_r_10 ), .A1(\u_speaker/u_DDS_8/count8_6 ), 
    .B0(\u_speaker/u_DDS_8/fcw_r_9 ), .A0(\u_speaker/u_DDS_8/count8_5 ), 
    .FCI(\u_speaker/u_DDS_8/n15407 ), 
    .F0(\u_speaker/count_24_N_543_5_adj_1344 ), 
    .F1(\u_speaker/count_24_N_543_6_adj_1342 ), 
    .FCO(\u_speaker/u_DDS_8/n15408 ));
  u_speaker_u_DDS_8_SLICE_44 \u_speaker/u_DDS_8/SLICE_44 ( 
    .B1(\u_speaker/fcw_r_8_adj_1352 ), .A1(\u_speaker/u_DDS_8/count8_4 ), 
    .B0(\u_speaker/u_DDS_8/fcw_r_10 ), .A0(\u_speaker/u_DDS_8/count8_3 ), 
    .FCI(\u_speaker/u_DDS_8/n15406 ), 
    .F0(\u_speaker/count_24_N_543_3_adj_1348 ), 
    .F1(\u_speaker/count_24_N_543_4_adj_1346 ), 
    .FCO(\u_speaker/u_DDS_8/n15407 ));
  u_speaker_u_DDS_8_SLICE_45 \u_speaker/u_DDS_8/SLICE_45 ( 
    .B1(\u_speaker/u_DDS_8/fcw_r_9 ), .A1(\u_speaker/u_DDS_8/count8_2 ), 
    .B0(\u_speaker/fcw_r_8_adj_1352 ), .A0(\u_speaker/count8_1 ), 
    .F1(\u_speaker/count_24_N_543_2_adj_1350 ), 
    .FCO(\u_speaker/u_DDS_8/n15406 ));
  u_speaker_u_DDS_7_SLICE_46 \u_speaker/u_DDS_7/SLICE_46 ( 
    .A0(\u_speaker/count7_24 ), .FCI(\u_speaker/u_DDS_7/n15734 ), 
    .F0(\u_speaker/n106_adj_1020 ));
  u_speaker_u_DDS_7_SLICE_47 \u_speaker/u_DDS_7/SLICE_47 ( 
    .A1(\u_speaker/count7_23 ), .A0(\u_speaker/count7_22 ), 
    .FCI(\u_speaker/u_DDS_7/n15733 ), .F0(\u_speaker/n108_adj_1016 ), 
    .F1(\u_speaker/n107_adj_1018 ), .FCO(\u_speaker/u_DDS_7/n15734 ));
  u_speaker_u_DDS_7_SLICE_48 \u_speaker/u_DDS_7/SLICE_48 ( 
    .A1(\u_speaker/count7_21 ), .A0(\u_speaker/count7_20 ), 
    .FCI(\u_speaker/u_DDS_7/n15732 ), .F0(\u_speaker/n110_adj_1012 ), 
    .F1(\u_speaker/n109_adj_1014 ), .FCO(\u_speaker/u_DDS_7/n15733 ));
  u_speaker_u_DDS_7_SLICE_49 \u_speaker/u_DDS_7/SLICE_49 ( 
    .A1(\u_speaker/count7_19 ), .A0(\u_speaker/count7_18 ), 
    .FCI(\u_speaker/u_DDS_7/n15731 ), .F0(\u_speaker/n112_adj_1008 ), 
    .F1(\u_speaker/n111_adj_1010 ), .FCO(\u_speaker/u_DDS_7/n15732 ));
  u_speaker_u_DDS_7_SLICE_50 \u_speaker/u_DDS_7/SLICE_50 ( 
    .A1(\u_speaker/count7_17 ), .A0(\u_speaker/count7_16 ), 
    .FCI(\u_speaker/u_DDS_7/n15730 ), .F0(\u_speaker/n114_adj_1004 ), 
    .F1(\u_speaker/n113_adj_1006 ), .FCO(\u_speaker/u_DDS_7/n15731 ));
  u_speaker_u_DDS_7_SLICE_51 \u_speaker/u_DDS_7/SLICE_51 ( 
    .A1(\u_speaker/count7_15 ), .A0(\u_speaker/count7_14 ), 
    .FCI(\u_speaker/u_DDS_7/n15729 ), .F0(\u_speaker/n116_adj_1000 ), 
    .F1(\u_speaker/n115_adj_1002 ), .FCO(\u_speaker/u_DDS_7/n15730 ));
  u_speaker_u_DDS_7_SLICE_52 \u_speaker/u_DDS_7/SLICE_52 ( 
    .A1(\u_speaker/u_DDS_7/n12 ), .A0(\u_speaker/u_DDS_7/n13 ), 
    .FCI(\u_speaker/u_DDS_7/n15728 ), .F0(\u_speaker/n118_adj_996 ), 
    .F1(\u_speaker/n117_adj_998 ), .FCO(\u_speaker/u_DDS_7/n15729 ));
  u_speaker_u_DDS_7_SLICE_53 \u_speaker/u_DDS_7/SLICE_53 ( 
    .A1(\u_speaker/u_DDS_7/n14 ), .B0(\u_speaker/u_DDS_7/n15 ), 
    .A0(\u_speaker/u_DDS_7/fcw_r_10 ), .FCI(\u_speaker/u_DDS_7/n15727 ), 
    .F0(\u_speaker/n120_adj_992 ), .F1(\u_speaker/n119_adj_994 ), 
    .FCO(\u_speaker/u_DDS_7/n15728 ));
  u_speaker_u_DDS_7_SLICE_54 \u_speaker/u_DDS_7/SLICE_54 ( 
    .B1(\u_speaker/u_DDS_7/n16 ), .A1(\u_speaker/u_DDS_7/fcw_r_9 ), 
    .B0(\u_speaker/u_DDS_7/n17 ), .A0(\u_speaker/fcw_r_8 ), 
    .FCI(\u_speaker/u_DDS_7/n15726 ), .F0(\u_speaker/n122_adj_988 ), 
    .F1(\u_speaker/n121_adj_990 ), .FCO(\u_speaker/u_DDS_7/n15727 ));
  u_speaker_u_DDS_7_SLICE_55 \u_speaker/u_DDS_7/SLICE_55 ( 
    .A1(\u_speaker/u_DDS_7/n18 ), .A0(\u_speaker/u_DDS_7/n19 ), 
    .FCI(\u_speaker/u_DDS_7/n15725 ), .F0(\u_speaker/n124_adj_984 ), 
    .F1(\u_speaker/n123_adj_986 ), .FCO(\u_speaker/u_DDS_7/n15726 ));
  u_speaker_u_DDS_7_SLICE_56 \u_speaker/u_DDS_7/SLICE_56 ( 
    .A1(\u_speaker/u_DDS_7/n20 ), .B0(\u_speaker/u_DDS_7/n21 ), 
    .A0(\u_speaker/u_DDS_7/fcw_r_4 ), .FCI(\u_speaker/u_DDS_7/n15724 ), 
    .F0(\u_speaker/n126_adj_980 ), .F1(\u_speaker/n125_adj_982 ), 
    .FCO(\u_speaker/u_DDS_7/n15725 ));
  u_speaker_u_DDS_7_SLICE_57 \u_speaker/u_DDS_7/SLICE_57 ( 
    .B1(\u_speaker/u_DDS_7/n22 ), .A1(\u_speaker/u_DDS_7/fcw_r_3 ), 
    .B0(\u_speaker/u_DDS_7/n23 ), .A0(\u_speaker/u_DDS_7/fcw_r_2 ), 
    .FCI(\u_speaker/u_DDS_7/n15723 ), .F0(\u_speaker/n128_adj_976 ), 
    .F1(\u_speaker/n127_adj_978 ), .FCO(\u_speaker/u_DDS_7/n15724 ));
  u_speaker_u_DDS_7_SLICE_58 \u_speaker/u_DDS_7/SLICE_58 ( 
    .B1(\u_speaker/u_DDS_7/n24 ), .A1(\u_speaker/u_DDS_7/fcw_r_1 ), 
    .B0(\u_speaker/n25_adj_972 ), .A0(\u_speaker/fcw_r_8 ), 
    .F1(\u_speaker/n129_adj_974 ), .FCO(\u_speaker/u_DDS_7/n15723 ));
  u_speaker_u_DDS_6_SLICE_59 \u_speaker/u_DDS_6/SLICE_59 ( 
    .A0(\u_speaker/count6_24 ), .FCI(\u_speaker/u_DDS_6/n15404 ), 
    .F0(\u_speaker/count_24_N_543_24_adj_861 ));
  u_speaker_u_DDS_6_SLICE_60 \u_speaker/u_DDS_6/SLICE_60 ( 
    .A1(\u_speaker/count6_23 ), .A0(\u_speaker/count6_22 ), 
    .FCI(\u_speaker/u_DDS_6/n15403 ), 
    .F0(\u_speaker/count_24_N_543_22_adj_1334 ), 
    .F1(\u_speaker/count_24_N_543_23 ), .FCO(\u_speaker/u_DDS_6/n15404 ));
  u_speaker_u_DDS_6_SLICE_61 \u_speaker/u_DDS_6/SLICE_61 ( 
    .A1(\u_speaker/count6_21 ), .A0(\u_speaker/count6_20 ), 
    .FCI(\u_speaker/u_DDS_6/n15402 ), 
    .F0(\u_speaker/count_24_N_543_20_adj_1126 ), 
    .F1(\u_speaker/count_24_N_543_21_adj_1187 ), 
    .FCO(\u_speaker/u_DDS_6/n15403 ));
  u_speaker_u_DDS_6_SLICE_62 \u_speaker/u_DDS_6/SLICE_62 ( 
    .A1(\u_speaker/count6_19 ), .A0(\u_speaker/count6_18 ), 
    .FCI(\u_speaker/u_DDS_6/n15401 ), .F0(\u_speaker/count_24_N_543_18 ), 
    .F1(\u_speaker/count_24_N_543_19_adj_1111 ), 
    .FCO(\u_speaker/u_DDS_6/n15402 ));
  u_speaker_u_DDS_6_SLICE_63 \u_speaker/u_DDS_6/SLICE_63 ( 
    .A1(\u_speaker/count6_17 ), .A0(\u_speaker/count6_16 ), 
    .FCI(\u_speaker/u_DDS_6/n15400 ), 
    .F0(\u_speaker/count_24_N_543_16_adj_1239 ), 
    .F1(\u_speaker/count_24_N_543_17_adj_1330 ), 
    .FCO(\u_speaker/u_DDS_6/n15401 ));
  u_speaker_u_DDS_6_SLICE_64 \u_speaker/u_DDS_6/SLICE_64 ( 
    .A1(\u_speaker/count6_15 ), .A0(\u_speaker/count6_14 ), 
    .FCI(\u_speaker/u_DDS_6/n15399 ), 
    .F0(\u_speaker/count_24_N_543_14_adj_1115 ), 
    .F1(\u_speaker/count_24_N_543_15_adj_1189 ), 
    .FCO(\u_speaker/u_DDS_6/n15400 ));
  u_speaker_u_DDS_6_SLICE_65 \u_speaker/u_DDS_6/SLICE_65 ( 
    .A1(\u_speaker/u_DDS_6/count6_13 ), .A0(\u_speaker/u_DDS_6/count6_12 ), 
    .FCI(\u_speaker/u_DDS_6/n15398 ), .F0(\u_speaker/count_24_N_543_12 ), 
    .F1(\u_speaker/count_24_N_543_13_adj_1082 ), 
    .FCO(\u_speaker/u_DDS_6/n15399 ));
  u_speaker_u_DDS_6_SLICE_66 \u_speaker/u_DDS_6/SLICE_66 ( 
    .A1(\u_speaker/u_DDS_6/count6_11 ), .D0(\u_speaker/u_DDS_6/n6874 ), 
    .C0(\u_speaker/fcw_r_2_adj_1393 ), .B0(\u_speaker/u_DDS_6/n18694 ), 
    .A0(\u_speaker/u_DDS_6/count6_10 ), .FCI(\u_speaker/u_DDS_6/n15397 ), 
    .F0(\u_speaker/count_24_N_543_10 ), .F1(\u_speaker/count_24_N_543_11 ), 
    .FCO(\u_speaker/u_DDS_6/n15398 ));
  u_speaker_u_DDS_6_SLICE_67 \u_speaker/u_DDS_6/SLICE_67 ( 
    .C1(\u_speaker/u_DDS_6/count6_9 ), .B1(\u_speaker/u_DDS_6/n4_adj_839 ), 
    .A1(\u_speaker/fcw_r_2_adj_1393 ), .C0(\u_speaker/u_DDS_6/count6_8 ), 
    .B0(\u_speaker/u_DDS_6/n4 ), .A0(\u_speaker/fcw_r_1 ), 
    .FCI(\u_speaker/u_DDS_6/n15396 ), 
    .F0(\u_speaker/count_24_N_543_8_adj_1389 ), 
    .F1(\u_speaker/count_24_N_543_9_adj_1391 ), 
    .FCO(\u_speaker/u_DDS_6/n15397 ));
  u_speaker_u_DDS_6_SLICE_68 \u_speaker/u_DDS_6/SLICE_68 ( 
    .C1(\u_speaker/u_DDS_6/count6_7 ), .B1(\u_speaker/fcw_r_0_adj_886 ), 
    .A1(\u_speaker/u_DDS_6/n6876 ), .B0(\u_speaker/u_DDS_6/fcw_r_6 ), 
    .A0(\u_speaker/u_DDS_6/count6_6 ), .FCI(\u_speaker/u_DDS_6/n15395 ), 
    .F0(\u_speaker/count_24_N_543_6_adj_1385 ), 
    .F1(\u_speaker/count_24_N_543_7_adj_1387 ), 
    .FCO(\u_speaker/u_DDS_6/n15396 ));
  u_speaker_u_DDS_6_SLICE_69 \u_speaker/u_DDS_6/SLICE_69 ( 
    .B1(\u_speaker/u_DDS_6/fcw_r_5 ), .A1(\u_speaker/u_DDS_6/count6_5 ), 
    .B0(\u_speaker/fcw_r_4 ), .A0(\u_speaker/u_DDS_6/count6_4 ), 
    .FCI(\u_speaker/u_DDS_6/n15394 ), 
    .F0(\u_speaker/count_24_N_543_4_adj_1381 ), 
    .F1(\u_speaker/count_24_N_543_5_adj_1383 ), 
    .FCO(\u_speaker/u_DDS_6/n15395 ));
  u_speaker_u_DDS_6_SLICE_70 \u_speaker/u_DDS_6/SLICE_70 ( 
    .B1(\u_speaker/fcw_r_1 ), .A1(\u_speaker/u_DDS_6/count6_3 ), 
    .B0(\u_speaker/fcw_r_0_adj_886 ), .A0(\u_speaker/count6_2 ), 
    .F1(\u_speaker/count_24_N_543_3_adj_1379 ), 
    .FCO(\u_speaker/u_DDS_6/n15394 ));
  u_speaker_u_DDS_5_SLICE_71 \u_speaker/u_DDS_5/SLICE_71 ( 
    .A1(\u_speaker/count5_24 ), .A0(\u_speaker/count5_23 ), 
    .FCI(\u_speaker/u_DDS_5/n15391 ), 
    .F0(\u_speaker/count_24_N_543_23_adj_1172 ), 
    .F1(\u_speaker/count_24_N_543_24_adj_843 ));
  u_speaker_u_DDS_5_SLICE_72 \u_speaker/u_DDS_5/SLICE_72 ( 
    .A1(\u_speaker/count5_22 ), .A0(\u_speaker/count5_21 ), 
    .FCI(\u_speaker/u_DDS_5/n15390 ), .F0(\u_speaker/count_24_N_543_21 ), 
    .F1(\u_speaker/count_24_N_543_22 ), .FCO(\u_speaker/u_DDS_5/n15391 ));
  u_speaker_u_DDS_5_SLICE_73 \u_speaker/u_DDS_5/SLICE_73 ( 
    .A1(\u_speaker/count5_20 ), .A0(\u_speaker/count5_19 ), 
    .FCI(\u_speaker/u_DDS_5/n15389 ), 
    .F0(\u_speaker/count_24_N_543_19_adj_1148 ), 
    .F1(\u_speaker/count_24_N_543_20_adj_1146 ), 
    .FCO(\u_speaker/u_DDS_5/n15390 ));
  u_speaker_u_DDS_5_SLICE_74 \u_speaker/u_DDS_5/SLICE_74 ( 
    .A1(\u_speaker/count5_18 ), .A0(\u_speaker/count5_17 ), 
    .FCI(\u_speaker/u_DDS_5/n15388 ), 
    .F0(\u_speaker/count_24_N_543_17_adj_1156 ), 
    .F1(\u_speaker/count_24_N_543_18_adj_1152 ), 
    .FCO(\u_speaker/u_DDS_5/n15389 ));
  u_speaker_u_DDS_5_SLICE_75 \u_speaker/u_DDS_5/SLICE_75 ( 
    .A1(\u_speaker/count5_16 ), .A0(\u_speaker/count5_15 ), 
    .FCI(\u_speaker/u_DDS_5/n15387 ), .F0(\u_speaker/count_24_N_543_15 ), 
    .F1(\u_speaker/count_24_N_543_16_adj_1158 ), 
    .FCO(\u_speaker/u_DDS_5/n15388 ));
  u_speaker_u_DDS_5_SLICE_76 \u_speaker/u_DDS_5/SLICE_76 ( 
    .A1(\u_speaker/count5_14 ), .A0(\u_speaker/u_DDS_5/count5_13 ), 
    .FCI(\u_speaker/u_DDS_5/n15386 ), 
    .F0(\u_speaker/count_24_N_543_13_adj_1093 ), 
    .F1(\u_speaker/count_24_N_543_14 ), .FCO(\u_speaker/u_DDS_5/n15387 ));
  u_speaker_u_DDS_5_SLICE_77 \u_speaker/u_DDS_5/SLICE_77 ( 
    .A1(\u_speaker/u_DDS_5/count5_12 ), .A0(\u_speaker/u_DDS_5/count5_11 ), 
    .FCI(\u_speaker/u_DDS_5/n15385 ), 
    .F0(\u_speaker/count_24_N_543_11_adj_1090 ), 
    .F1(\u_speaker/count_24_N_543_12_adj_1084 ), 
    .FCO(\u_speaker/u_DDS_5/n15386 ));
  u_speaker_u_DDS_5_SLICE_78 \u_speaker/u_DDS_5/SLICE_78 ( 
    .D1(\u_speaker/u_DDS_5/n6898 ), .C1(\u_speaker/fcw_r_2_adj_1393 ), 
    .B1(\u_speaker/u_DDS_5/n18674 ), .A1(\u_speaker/u_DDS_5/count5_10 ), 
    .C0(\u_speaker/u_DDS_5/count5_9 ), .B0(\u_speaker/u_DDS_5/n4 ), 
    .A0(\u_speaker/fcw_r_2_adj_1393 ), .FCI(\u_speaker/u_DDS_5/n15384 ), 
    .F0(\u_speaker/count_24_N_543_9_adj_1183 ), 
    .F1(\u_speaker/count_24_N_543_10_adj_845 ), 
    .FCO(\u_speaker/u_DDS_5/n15385 ));
  u_speaker_u_DDS_5_SLICE_79 \u_speaker/u_DDS_5/SLICE_79 ( 
    .C1(\u_speaker/u_DDS_5/count5_8 ), .B1(\u_speaker/u_DDS_5/n4_adj_837 ), 
    .A1(\u_speaker/fcw_r_1 ), .C0(\u_speaker/u_DDS_5/count5_7 ), 
    .B0(\u_speaker/fcw_r_0_adj_886 ), .A0(\u_speaker/u_DDS_5/fcw_r_3 ), 
    .FCI(\u_speaker/u_DDS_5/n15383 ), 
    .F0(\u_speaker/count_24_N_543_7_adj_1185 ), 
    .F1(\u_speaker/count_24_N_543_8_adj_1178 ), 
    .FCO(\u_speaker/u_DDS_5/n15384 ));
  u_speaker_u_DDS_5_SLICE_80 \u_speaker/u_DDS_5/SLICE_80 ( 
    .B1(\u_speaker/u_DDS_5/fcw_r_6 ), .A1(\u_speaker/u_DDS_5/count5_6 ), 
    .B0(\u_speaker/u_DDS_5/fcw_r_5 ), .A0(\u_speaker/u_DDS_5/count5_5 ), 
    .FCI(\u_speaker/u_DDS_5/n15382 ), 
    .F0(\u_speaker/count_24_N_543_5_adj_1195 ), 
    .F1(\u_speaker/count_24_N_543_6_adj_1227 ), 
    .FCO(\u_speaker/u_DDS_5/n15383 ));
  u_speaker_u_DDS_5_SLICE_81 \u_speaker/u_DDS_5/SLICE_81 ( 
    .B1(\u_speaker/u_DDS_5/fcw_r_4 ), .A1(\u_speaker/u_DDS_5/count5_4 ), 
    .B0(\u_speaker/u_DDS_5/fcw_r_3 ), .A0(\u_speaker/u_DDS_5/count5_3 ), 
    .FCI(\u_speaker/u_DDS_5/n15381 ), 
    .F0(\u_speaker/count_24_N_543_3_adj_1191 ), 
    .F1(\u_speaker/count_24_N_543_4_adj_1231 ), 
    .FCO(\u_speaker/u_DDS_5/n15382 ));
  u_speaker_u_DDS_5_SLICE_82 \u_speaker/u_DDS_5/SLICE_82 ( 
    .B1(\u_speaker/u_DDS_5/fcw_r_2_adj_838 ), 
    .A1(\u_speaker/u_DDS_5/count5_2 ), .B0(\u_speaker/fcw_r_0_adj_886 ), 
    .A0(\u_speaker/count5_1 ), .F1(\u_speaker/count_24_N_543_2_adj_1229 ), 
    .FCO(\u_speaker/u_DDS_5/n15381 ));
  u_speaker_u_DDS_4_SLICE_83 \u_speaker/u_DDS_4/SLICE_83 ( 
    .A0(\u_speaker/count4_24 ), .FCI(\u_speaker/u_DDS_4/n15747 ), 
    .F0(\u_speaker/n106_adj_970 ));
  u_speaker_u_DDS_4_SLICE_84 \u_speaker/u_DDS_4/SLICE_84 ( 
    .A1(\u_speaker/count4_23 ), .A0(\u_speaker/count4_22 ), 
    .FCI(\u_speaker/u_DDS_4/n15746 ), .F0(\u_speaker/n108_adj_966 ), 
    .F1(\u_speaker/n107_adj_968 ), .FCO(\u_speaker/u_DDS_4/n15747 ));
  u_speaker_u_DDS_4_SLICE_85 \u_speaker/u_DDS_4/SLICE_85 ( 
    .A1(\u_speaker/count4_21 ), .A0(\u_speaker/count4_20 ), 
    .FCI(\u_speaker/u_DDS_4/n15745 ), .F0(\u_speaker/n110_adj_962 ), 
    .F1(\u_speaker/n109_adj_964 ), .FCO(\u_speaker/u_DDS_4/n15746 ));
  u_speaker_u_DDS_4_SLICE_86 \u_speaker/u_DDS_4/SLICE_86 ( 
    .A1(\u_speaker/count4_19 ), .A0(\u_speaker/count4_18 ), 
    .FCI(\u_speaker/u_DDS_4/n15744 ), .F0(\u_speaker/n112_adj_958 ), 
    .F1(\u_speaker/n111_adj_960 ), .FCO(\u_speaker/u_DDS_4/n15745 ));
  u_speaker_u_DDS_4_SLICE_87 \u_speaker/u_DDS_4/SLICE_87 ( 
    .A1(\u_speaker/count4_17 ), .A0(\u_speaker/count4_16 ), 
    .FCI(\u_speaker/u_DDS_4/n15743 ), .F0(\u_speaker/n114_adj_954 ), 
    .F1(\u_speaker/n113_adj_956 ), .FCO(\u_speaker/u_DDS_4/n15744 ));
  u_speaker_u_DDS_4_SLICE_88 \u_speaker/u_DDS_4/SLICE_88 ( 
    .A1(\u_speaker/count4_15 ), .A0(\u_speaker/count4_14 ), 
    .FCI(\u_speaker/u_DDS_4/n15742 ), .F0(\u_speaker/n116_adj_950 ), 
    .F1(\u_speaker/n115_adj_952 ), .FCO(\u_speaker/u_DDS_4/n15743 ));
  u_speaker_u_DDS_4_SLICE_89 \u_speaker/u_DDS_4/SLICE_89 ( 
    .A1(\u_speaker/u_DDS_4/n12 ), .A0(\u_speaker/u_DDS_4/n13 ), 
    .FCI(\u_speaker/u_DDS_4/n15741 ), .F0(\u_speaker/n118_adj_946 ), 
    .F1(\u_speaker/n117_adj_948 ), .FCO(\u_speaker/u_DDS_4/n15742 ));
  u_speaker_u_DDS_4_SLICE_90 \u_speaker/u_DDS_4/SLICE_90 ( 
    .A1(\u_speaker/u_DDS_4/n14 ), .C0(\u_speaker/u_DDS_4/n15 ), 
    .B0(\u_speaker/u_DDS_4/n20 ), .A0(\u_speaker/u_DDS_4/n6923 ), 
    .FCI(\u_speaker/u_DDS_4/n15740 ), .F0(\u_speaker/n120_adj_918 ), 
    .F1(\u_speaker/n119_adj_916 ), .FCO(\u_speaker/u_DDS_4/n15741 ));
  u_speaker_u_DDS_4_SLICE_91 \u_speaker/u_DDS_4/SLICE_91 ( 
    .C1(\u_speaker/u_DDS_4/n16 ), .B1(\u_speaker/u_DDS_4/n4_adj_835 ), 
    .A1(\u_speaker/fcw_r_2_adj_1393 ), .C0(\u_speaker/u_DDS_4/n17 ), 
    .B0(\u_speaker/u_DDS_4/n4 ), .A0(\u_speaker/fcw_r_1 ), 
    .FCI(\u_speaker/u_DDS_4/n15739 ), .F0(\u_speaker/n122_adj_922 ), 
    .F1(\u_speaker/n121_adj_920 ), .FCO(\u_speaker/u_DDS_4/n15740 ));
  u_speaker_u_DDS_4_SLICE_92 \u_speaker/u_DDS_4/SLICE_92 ( 
    .C1(\u_speaker/u_DDS_4/n18 ), .B1(\u_speaker/fcw_r_0_adj_886 ), 
    .A1(\u_speaker/u_DDS_4/n6926 ), .B0(\u_speaker/u_DDS_4/n19 ), 
    .A0(\u_speaker/u_DDS_4/fcw_r_6 ), .FCI(\u_speaker/u_DDS_4/n15738 ), 
    .F0(\u_speaker/n124_adj_926 ), .F1(\u_speaker/n123_adj_924 ), 
    .FCO(\u_speaker/u_DDS_4/n15739 ));
  u_speaker_u_DDS_4_SLICE_93 \u_speaker/u_DDS_4/SLICE_93 ( 
    .B1(\u_speaker/u_DDS_4/n20_adj_836 ), .A1(\u_speaker/u_DDS_4/fcw_r_5 ), 
    .B0(\u_speaker/u_DDS_4/n21 ), .A0(\u_speaker/u_DDS_4/fcw_r_4 ), 
    .FCI(\u_speaker/u_DDS_4/n15737 ), .F0(\u_speaker/n126_adj_932 ), 
    .F1(\u_speaker/n125_adj_930 ), .FCO(\u_speaker/u_DDS_4/n15738 ));
  u_speaker_u_DDS_4_SLICE_94 \u_speaker/u_DDS_4/SLICE_94 ( 
    .B1(\u_speaker/u_DDS_4/n22 ), .A1(\u_speaker/fcw_r_0_adj_886 ), 
    .B0(\u_speaker/u_DDS_4/n23 ), .A0(\u_speaker/fcw_r_2_adj_1393 ), 
    .FCI(\u_speaker/u_DDS_4/n15736 ), .F0(\u_speaker/n128_adj_940 ), 
    .F1(\u_speaker/n127_adj_938 ), .FCO(\u_speaker/u_DDS_4/n15737 ));
  u_speaker_u_DDS_4_SLICE_95 \u_speaker/u_DDS_4/SLICE_95 ( 
    .B1(\u_speaker/u_DDS_4/n24 ), .A1(\u_speaker/fcw_r_1 ), 
    .B0(\u_speaker/n25_adj_944 ), .A0(\u_speaker/fcw_r_0_adj_886 ), 
    .F1(\u_speaker/n129_adj_942 ), .FCO(\u_speaker/u_DDS_4/n15736 ));
  u_speaker_u_DDS_4_SLICE_96 \u_speaker/u_DDS_4/SLICE_96 ( 
    .B0(fcw_r_15_N_495_11), .A0(n18757), .DI1(\u_speaker/u_DDS_4/n8304 ), 
    .DI0(\u_speaker/u_DDS_4/n8294 ), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_4/n15808 ), .F0(\u_speaker/u_DDS_4/n8294 ), 
    .Q0(\u_speaker/u_DDS_4/n6924 ), .F1(\u_speaker/u_DDS_4/n8304 ), 
    .Q1(\u_speaker/u_DDS_4/n6923 ));
  u_speaker_u_DDS_4_SLICE_97 \u_speaker/u_DDS_4/SLICE_97 ( 
    .B1(fcw_r_15_N_495_11), .A1(n18757), .D0(n19846), .C0(n18784), .B0(n18785), 
    .A0(yinjie_2), .DI1(\u_speaker/u_DDS_4/n8295 ), 
    .DI0(\u_speaker/u_DDS_4/n8296 ), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_4/n15807 ), .F0(\u_speaker/u_DDS_4/n8296 ), 
    .Q0(\u_speaker/u_DDS_4/n6926 ), .F1(\u_speaker/u_DDS_4/n8295 ), 
    .Q1(\u_speaker/u_DDS_4/n6925 ), .FCO(\u_speaker/u_DDS_4/n15808 ));
  u_speaker_u_DDS_4_SLICE_98 \u_speaker/u_DDS_4/SLICE_98 ( .D1(n19846), 
    .C1(\u_speaker/fcw_r_15_N_527_0 ), .B1(yinjie_0), .A1(yinjie_2), 
    .D0(yinjie_1), .C0(\u_speaker/yinjie_box_1 ), .B0(n19846), .A0(yinjie_2), 
    .DI1(\u_speaker/u_DDS_4/n8297 ), .DI0(\u_speaker/u_DDS_4/n8298 ), 
    .CLK(clk), .FCI(\u_speaker/u_DDS_4/n15806 ), 
    .F0(\u_speaker/u_DDS_4/n8298 ), .Q0(\u_speaker/u_DDS_4/fcw_r_5 ), 
    .F1(\u_speaker/u_DDS_4/n8297 ), .Q1(\u_speaker/u_DDS_4/fcw_r_6 ), 
    .FCO(\u_speaker/u_DDS_4/n15807 ));
  u_speaker_u_DDS_4_SLICE_99 \u_speaker/u_DDS_4/SLICE_99 ( .D1(yinjie_0), 
    .C1(\u_speaker/fcw_r_15_N_527_0 ), .B1(n19846), .A1(n18784), 
    .DI1(\u_speaker/u_DDS_4/n8299 ), .CLK(clk), .F1(\u_speaker/u_DDS_4/n8299 ), 
    .Q1(\u_speaker/u_DDS_4/fcw_r_4 ), .FCO(\u_speaker/u_DDS_4/n15806 ));
  u_speaker_u_DDS_3_SLICE_100 \u_speaker/u_DDS_3/SLICE_100 ( 
    .A0(\u_speaker/count3_24 ), .FCI(\u_speaker/u_DDS_3/n15760 ), 
    .F0(\u_speaker/n106_adj_913 ));
  u_speaker_u_DDS_3_SLICE_101 \u_speaker/u_DDS_3/SLICE_101 ( 
    .A1(\u_speaker/count3_23 ), .A0(\u_speaker/count3_22 ), 
    .FCI(\u_speaker/u_DDS_3/n15759 ), .F0(\u_speaker/n108_adj_908 ), 
    .F1(\u_speaker/n107_adj_910 ), .FCO(\u_speaker/u_DDS_3/n15760 ));
  u_speaker_u_DDS_3_SLICE_102 \u_speaker/u_DDS_3/SLICE_102 ( 
    .A1(\u_speaker/count3_21 ), .A0(\u_speaker/count3_20 ), 
    .FCI(\u_speaker/u_DDS_3/n15758 ), .F0(\u_speaker/n110_adj_904 ), 
    .F1(\u_speaker/n109_adj_906 ), .FCO(\u_speaker/u_DDS_3/n15759 ));
  u_speaker_u_DDS_3_SLICE_103 \u_speaker/u_DDS_3/SLICE_103 ( 
    .A1(\u_speaker/count3_19 ), .A0(\u_speaker/count3_18 ), 
    .FCI(\u_speaker/u_DDS_3/n15757 ), .F0(\u_speaker/n112_adj_900 ), 
    .F1(\u_speaker/n111_adj_902 ), .FCO(\u_speaker/u_DDS_3/n15758 ));
  u_speaker_u_DDS_3_SLICE_104 \u_speaker/u_DDS_3/SLICE_104 ( 
    .A1(\u_speaker/count3_17 ), .A0(\u_speaker/count3_16 ), 
    .FCI(\u_speaker/u_DDS_3/n15756 ), .F0(\u_speaker/n114_adj_896 ), 
    .F1(\u_speaker/n113_adj_898 ), .FCO(\u_speaker/u_DDS_3/n15757 ));
  u_speaker_u_DDS_3_SLICE_105 \u_speaker/u_DDS_3/SLICE_105 ( 
    .A1(\u_speaker/count3_15 ), .A0(\u_speaker/count3_14 ), 
    .FCI(\u_speaker/u_DDS_3/n15755 ), .F0(\u_speaker/n116_adj_892 ), 
    .F1(\u_speaker/n115_adj_894 ), .FCO(\u_speaker/u_DDS_3/n15756 ));
  u_speaker_SLICE_106 \u_speaker/SLICE_106 ( .A1(\u_speaker/u_DDS_3/n12 ), 
    .A0(\u_speaker/u_DDS_3/n13 ), .M1(\u_speaker/n19840 ), .M0(n19839), 
    .CLK(clk), .FCI(\u_speaker/u_DDS_3/n15754 ), .F0(\u_speaker/n118_adj_888 ), 
    .Q0(\u_speaker/u_DDS_2/fcw_r_9 ), .F1(\u_speaker/n117_adj_890 ), 
    .Q1(\u_speaker/u_DDS_2/fcw_r_10 ), .FCO(\u_speaker/u_DDS_3/n15755 ));
  u_speaker_SLICE_107 \u_speaker/SLICE_107 ( .A1(\u_speaker/u_DDS_3/n14 ), 
    .D0(\u_speaker/u_DDS_3/n6846 ), .C0(\u_speaker/fcw_r_2_adj_1393 ), 
    .B0(\u_speaker/u_DDS_3/n18703 ), .A0(\u_speaker/u_DDS_3/n15 ), .M1(n18717), 
    .M0(\u_speaker/n18705 ), .CLK(clk), .FCI(\u_speaker/u_DDS_3/n15753 ), 
    .F0(\u_speaker/n120_adj_865 ), .Q0(\u_speaker/u_DDS_2/fcw_r_7 ), 
    .F1(\u_speaker/n119_adj_863 ), .Q1(\u_speaker/u_DDS_2/fcw_r_8 ), 
    .FCO(\u_speaker/u_DDS_3/n15754 ));
  u_speaker_SLICE_108 \u_speaker/SLICE_108 ( .C1(\u_speaker/u_DDS_3/n16 ), 
    .B1(\u_speaker/u_DDS_3/n4_adj_833 ), .A1(\u_speaker/fcw_r_2_adj_1393 ), 
    .C0(\u_speaker/u_DDS_3/n17 ), .B0(\u_speaker/u_DDS_3/n4 ), 
    .A0(\u_speaker/fcw_r_1 ), .M1(n18757), .M0(n18784), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_3/n15752 ), .F0(\u_speaker/n122_adj_869 ), 
    .Q0(\u_speaker/u_DDS_2/fcw_r_2 ), .F1(\u_speaker/n121_adj_867 ), 
    .Q1(\u_speaker/u_DDS_2/fcw_r_3 ), .FCO(\u_speaker/u_DDS_3/n15753 ));
  u_speaker_u_DDS_3_SLICE_109 \u_speaker/u_DDS_3/SLICE_109 ( 
    .C1(\u_speaker/u_DDS_3/n18 ), .B1(\u_speaker/fcw_r_0_adj_886 ), 
    .A1(\u_speaker/u_DDS_3/n6848 ), .B0(\u_speaker/u_DDS_3/n19 ), 
    .A0(\u_speaker/u_DDS_3/fcw_r_6 ), .FCI(\u_speaker/u_DDS_3/n15751 ), 
    .F0(\u_speaker/n124_adj_873 ), .F1(\u_speaker/n123_adj_871 ), 
    .FCO(\u_speaker/u_DDS_3/n15752 ));
  u_speaker_u_DDS_3_SLICE_110 \u_speaker/u_DDS_3/SLICE_110 ( 
    .B1(\u_speaker/u_DDS_3/n20 ), .A1(\u_speaker/u_DDS_3/fcw_r_5 ), 
    .B0(\u_speaker/u_DDS_3/n21 ), .A0(\u_speaker/u_DDS_3/fcw_r_4 ), 
    .FCI(\u_speaker/u_DDS_3/n15750 ), .F0(\u_speaker/n126_adj_877 ), 
    .F1(\u_speaker/n125_adj_875 ), .FCO(\u_speaker/u_DDS_3/n15751 ));
  u_speaker_u_DDS_3_SLICE_111 \u_speaker/u_DDS_3/SLICE_111 ( 
    .B1(\u_speaker/u_DDS_3/n22 ), .A1(\u_speaker/u_DDS_3/fcw_r_3 ), 
    .B0(\u_speaker/u_DDS_3/n23 ), .A0(\u_speaker/fcw_r_4 ), 
    .FCI(\u_speaker/u_DDS_3/n15749 ), .F0(\u_speaker/n128_adj_881 ), 
    .F1(\u_speaker/n127_adj_879 ), .FCO(\u_speaker/u_DDS_3/n15750 ));
  u_speaker_u_DDS_3_SLICE_112 \u_speaker/u_DDS_3/SLICE_112 ( 
    .B1(\u_speaker/u_DDS_3/n24 ), .A1(\u_speaker/fcw_r_1 ), 
    .B0(\u_speaker/n25_adj_885 ), .A0(\u_speaker/fcw_r_0_adj_886 ), 
    .F1(\u_speaker/n129_adj_883 ), .FCO(\u_speaker/u_DDS_3/n15749 ));
  u_speaker_u_DDS_3_SLICE_113 \u_speaker/u_DDS_3/SLICE_113 ( .B0(n19846), 
    .A0(yinjie_2), .DI1(\u_speaker/u_DDS_3/n8392 ), 
    .DI0(\u_speaker/u_DDS_3/n8383 ), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_3/n15498 ), .F0(\u_speaker/u_DDS_3/n8383 ), 
    .Q0(\u_speaker/u_DDS_3/n6847 ), .F1(\u_speaker/u_DDS_3/n8392 ), 
    .Q1(\u_speaker/u_DDS_3/n6846 ));
  u_speaker_u_DDS_3_SLICE_114 \u_speaker/u_DDS_3/SLICE_114 ( .A1(n18784), 
    .A0(n18785), .DI1(\u_speaker/u_DDS_3/n8384 ), 
    .DI0(\u_speaker/u_DDS_3/n8385 ), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_3/n15497 ), .F0(\u_speaker/u_DDS_3/n8385 ), 
    .Q0(\u_speaker/u_DDS_3/fcw_r_6 ), .F1(\u_speaker/u_DDS_3/n8384 ), 
    .Q1(\u_speaker/u_DDS_3/n6848 ), .FCO(\u_speaker/u_DDS_3/n15498 ));
  u_speaker_u_DDS_3_SLICE_115 \u_speaker/u_DDS_3/SLICE_115 ( 
    .C1(fcw_r_15_N_495_11), .B1(n19846), .A1(yinjie_2), .D0(n19846), 
    .C0(fcw_r_15_N_495_11), .B0(yinjie_2), .A0(n18784), 
    .DI1(\u_speaker/u_DDS_3/n8386 ), .DI0(\u_speaker/u_DDS_3/n8387 ), 
    .CLK(clk), .FCI(\u_speaker/u_DDS_3/n15496 ), 
    .F0(\u_speaker/u_DDS_3/n8387 ), .Q0(\u_speaker/u_DDS_3/fcw_r_4 ), 
    .F1(\u_speaker/u_DDS_3/n8386 ), .Q1(\u_speaker/u_DDS_3/fcw_r_5 ), 
    .FCO(\u_speaker/u_DDS_3/n15497 ));
  u_speaker_u_DDS_3_SLICE_116 \u_speaker/u_DDS_3/SLICE_116 ( .D1(yinjie_0), 
    .C1(\u_speaker/fcw_r_15_N_527_0 ), .B1(n19846), .A1(fcw_r_15_N_495_9), 
    .DI1(\u_speaker/u_DDS_3/n8388 ), .M0(n18785), .CLK(clk), 
    .Q0(\u_speaker/fcw_r_0_adj_886 ), .F1(\u_speaker/u_DDS_3/n8388 ), 
    .Q1(\u_speaker/u_DDS_3/fcw_r_3 ), .FCO(\u_speaker/u_DDS_3/n15496 ));
  u_speaker_u_DDS_2_SLICE_117 \u_speaker/u_DDS_2/SLICE_117 ( 
    .A1(\u_speaker/count2_24 ), .A0(\u_speaker/count2_23 ), 
    .FCI(\u_speaker/u_DDS_2/n15494 ), 
    .F0(\u_speaker/count_24_N_543_23_adj_936 ), 
    .F1(\u_speaker/count_24_N_543_24 ));
  u_speaker_u_DDS_2_SLICE_118 \u_speaker/u_DDS_2/SLICE_118 ( 
    .A1(\u_speaker/count2_22 ), .A0(\u_speaker/count2_21 ), 
    .FCI(\u_speaker/u_DDS_2/n15493 ), 
    .F0(\u_speaker/count_24_N_543_21_adj_928 ), 
    .F1(\u_speaker/count_24_N_543_22_adj_934 ), 
    .FCO(\u_speaker/u_DDS_2/n15494 ));
  u_speaker_u_DDS_2_SLICE_119 \u_speaker/u_DDS_2/SLICE_119 ( 
    .A1(\u_speaker/count2_20 ), .A0(\u_speaker/count2_19 ), 
    .FCI(\u_speaker/u_DDS_2/n15492 ), .F0(\u_speaker/count_24_N_543_19 ), 
    .F1(\u_speaker/count_24_N_543_20 ), .FCO(\u_speaker/u_DDS_2/n15493 ));
  u_speaker_u_DDS_2_SLICE_120 \u_speaker/u_DDS_2/SLICE_120 ( 
    .A1(\u_speaker/count2_18 ), .A0(\u_speaker/count2_17 ), 
    .FCI(\u_speaker/u_DDS_2/n15491 ), 
    .F0(\u_speaker/count_24_N_543_17_adj_1170 ), 
    .F1(\u_speaker/count_24_N_543_18_adj_1174 ), 
    .FCO(\u_speaker/u_DDS_2/n15492 ));
  u_speaker_u_DDS_2_SLICE_121 \u_speaker/u_DDS_2/SLICE_121 ( 
    .A1(\u_speaker/count2_16 ), .A0(\u_speaker/count2_15 ), 
    .FCI(\u_speaker/u_DDS_2/n15490 ), 
    .F0(\u_speaker/count_24_N_543_15_adj_1168 ), 
    .F1(\u_speaker/count_24_N_543_16_adj_1176 ), 
    .FCO(\u_speaker/u_DDS_2/n15491 ));
  u_speaker_u_DDS_2_SLICE_122 \u_speaker/u_DDS_2/SLICE_122 ( 
    .A1(\u_speaker/count2_14 ), .A0(\u_speaker/u_DDS_2/count2_13 ), 
    .FCI(\u_speaker/u_DDS_2/n15489 ), 
    .F0(\u_speaker/count_24_N_543_13_adj_1150 ), 
    .F1(\u_speaker/count_24_N_543_14_adj_1144 ), 
    .FCO(\u_speaker/u_DDS_2/n15490 ));
  u_speaker_u_DDS_2_SLICE_123 \u_speaker/u_DDS_2/SLICE_123 ( 
    .A1(\u_speaker/u_DDS_2/count2_12 ), .A0(\u_speaker/u_DDS_2/count2_11 ), 
    .FCI(\u_speaker/u_DDS_2/n15488 ), 
    .F0(\u_speaker/count_24_N_543_11_adj_847 ), 
    .F1(\u_speaker/count_24_N_543_12_adj_1166 ), 
    .FCO(\u_speaker/u_DDS_2/n15489 ));
  u_speaker_u_DDS_2_SLICE_124 \u_speaker/u_DDS_2/SLICE_124 ( 
    .B1(\u_speaker/u_DDS_2/fcw_r_10 ), .A1(\u_speaker/u_DDS_2/count2_10 ), 
    .B0(\u_speaker/u_DDS_2/fcw_r_9 ), .A0(\u_speaker/u_DDS_2/count2_9 ), 
    .FCI(\u_speaker/u_DDS_2/n15487 ), .F0(\u_speaker/count_24_N_543_9 ), 
    .F1(\u_speaker/count_24_N_543_10_adj_1164 ), 
    .FCO(\u_speaker/u_DDS_2/n15488 ));
  u_speaker_u_DDS_2_SLICE_125 \u_speaker/u_DDS_2/SLICE_125 ( 
    .B1(\u_speaker/u_DDS_2/fcw_r_8 ), .A1(\u_speaker/u_DDS_2/count2_8 ), 
    .B0(\u_speaker/u_DDS_2/fcw_r_7 ), .A0(\u_speaker/u_DDS_2/count2_7 ), 
    .FCI(\u_speaker/u_DDS_2/n15486 ), 
    .F0(\u_speaker/count_24_N_543_7_adj_1088 ), 
    .F1(\u_speaker/count_24_N_543_8_adj_1181 ), 
    .FCO(\u_speaker/u_DDS_2/n15487 ));
  u_speaker_u_DDS_2_SLICE_126 \u_speaker/u_DDS_2/SLICE_126 ( 
    .B1(\u_speaker/fcw_r_6 ), .A1(\u_speaker/u_DDS_2/count2_6 ), 
    .A0(\u_speaker/u_DDS_2/count2_5 ), .FCI(\u_speaker/u_DDS_2/n15485 ), 
    .F0(\u_speaker/count_24_N_543_5 ), .F1(\u_speaker/count_24_N_543_6 ), 
    .FCO(\u_speaker/u_DDS_2/n15486 ));
  u_speaker_u_DDS_2_SLICE_127 \u_speaker/u_DDS_2/SLICE_127 ( 
    .A1(\u_speaker/u_DDS_2/count2_4 ), .B0(\u_speaker/u_DDS_2/fcw_r_3 ), 
    .A0(\u_speaker/u_DDS_2/count2_3 ), .FCI(\u_speaker/u_DDS_2/n15484 ), 
    .F0(\u_speaker/count_24_N_543_3_adj_1193 ), 
    .F1(\u_speaker/count_24_N_543_4 ), .FCO(\u_speaker/u_DDS_2/n15485 ));
  u_speaker_u_DDS_2_SLICE_128 \u_speaker/u_DDS_2/SLICE_128 ( 
    .B1(\u_speaker/u_DDS_2/fcw_r_2 ), .A1(\u_speaker/u_DDS_2/count2_2 ), 
    .B0(\u_speaker/fcw_r_6 ), .A0(\u_speaker/count2_1 ), 
    .F1(\u_speaker/count_24_N_543_2_adj_1154 ), 
    .FCO(\u_speaker/u_DDS_2/n15484 ));
  u_speaker_u_DDS_1_SLICE_129 \u_speaker/u_DDS_1/SLICE_129 ( 
    .A0(\u_speaker/count1_24 ), .FCI(\u_speaker/u_DDS_1/n15773 ), 
    .F0(\u_speaker/n106 ));
  u_speaker_u_DDS_1_SLICE_130 \u_speaker/u_DDS_1/SLICE_130 ( 
    .A1(\u_speaker/count1_23 ), .A0(\u_speaker/count1_22 ), 
    .FCI(\u_speaker/u_DDS_1/n15772 ), .F0(\u_speaker/n108 ), 
    .F1(\u_speaker/n107 ), .FCO(\u_speaker/u_DDS_1/n15773 ));
  u_speaker_u_DDS_1_SLICE_131 \u_speaker/u_DDS_1/SLICE_131 ( 
    .A1(\u_speaker/count1_21 ), .A0(\u_speaker/count1_20 ), 
    .FCI(\u_speaker/u_DDS_1/n15771 ), .F0(\u_speaker/n110 ), 
    .F1(\u_speaker/n109 ), .FCO(\u_speaker/u_DDS_1/n15772 ));
  u_speaker_u_DDS_1_SLICE_132 \u_speaker/u_DDS_1/SLICE_132 ( 
    .A1(\u_speaker/count1_19 ), .A0(\u_speaker/count1_18 ), 
    .FCI(\u_speaker/u_DDS_1/n15770 ), .F0(\u_speaker/n112 ), 
    .F1(\u_speaker/n111 ), .FCO(\u_speaker/u_DDS_1/n15771 ));
  u_speaker_u_DDS_1_SLICE_133 \u_speaker/u_DDS_1/SLICE_133 ( 
    .A1(\u_speaker/count1_17 ), .A0(\u_speaker/count1_16 ), 
    .FCI(\u_speaker/u_DDS_1/n15769 ), .F0(\u_speaker/n114 ), 
    .F1(\u_speaker/n113 ), .FCO(\u_speaker/u_DDS_1/n15770 ));
  u_speaker_u_DDS_1_SLICE_134 \u_speaker/u_DDS_1/SLICE_134 ( 
    .A1(\u_speaker/count1_15 ), .A0(\u_speaker/count1_14 ), 
    .FCI(\u_speaker/u_DDS_1/n15768 ), .F0(\u_speaker/n116 ), 
    .F1(\u_speaker/n115 ), .FCO(\u_speaker/u_DDS_1/n15769 ));
  u_speaker_u_DDS_1_SLICE_135 \u_speaker/u_DDS_1/SLICE_135 ( 
    .A1(\u_speaker/u_DDS_1/n12 ), .A0(\u_speaker/u_DDS_1/n13 ), 
    .FCI(\u_speaker/u_DDS_1/n15767 ), .F0(\u_speaker/n118 ), 
    .F1(\u_speaker/n117 ), .FCO(\u_speaker/u_DDS_1/n15768 ));
  u_speaker_u_DDS_1_SLICE_136 \u_speaker/u_DDS_1/SLICE_136 ( 
    .A1(\u_speaker/u_DDS_1/n14 ), .B0(\u_speaker/u_DDS_1/n15 ), 
    .A0(\u_speaker/fcw_r_10 ), .FCI(\u_speaker/u_DDS_1/n15766 ), 
    .F0(\u_speaker/n120 ), .F1(\u_speaker/n119 ), 
    .FCO(\u_speaker/u_DDS_1/n15767 ));
  u_speaker_u_DDS_1_SLICE_137 \u_speaker/u_DDS_1/SLICE_137 ( 
    .B1(\u_speaker/u_DDS_1/n16 ), .A1(\u_speaker/fcw_r_9 ), 
    .B0(\u_speaker/u_DDS_1/n17 ), .A0(\u_speaker/fcw_r_8_adj_1394 ), 
    .FCI(\u_speaker/u_DDS_1/n15765 ), .F0(\u_speaker/n122 ), 
    .F1(\u_speaker/n121 ), .FCO(\u_speaker/u_DDS_1/n15766 ));
  u_speaker_u_DDS_1_SLICE_138 \u_speaker/u_DDS_1/SLICE_138 ( 
    .B1(\u_speaker/u_DDS_1/n18 ), .A1(\u_speaker/fcw_r_7 ), 
    .B0(\u_speaker/u_DDS_1/n19 ), .A0(\u_speaker/fcw_r_6_adj_1395 ), 
    .FCI(\u_speaker/u_DDS_1/n15764 ), .F0(\u_speaker/n124 ), 
    .F1(\u_speaker/n123 ), .FCO(\u_speaker/u_DDS_1/n15765 ));
  u_speaker_u_DDS_1_SLICE_139 \u_speaker/u_DDS_1/SLICE_139 ( 
    .B1(\u_speaker/u_DDS_1/n20 ), .A1(\u_speaker/fcw_r_5 ), 
    .B0(\u_speaker/u_DDS_1/n21 ), .A0(\u_speaker/fcw_r_4_adj_1396 ), 
    .FCI(\u_speaker/u_DDS_1/n15763 ), .F0(\u_speaker/n126 ), 
    .F1(\u_speaker/n125 ), .FCO(\u_speaker/u_DDS_1/n15764 ));
  u_speaker_u_DDS_1_SLICE_140 \u_speaker/u_DDS_1/SLICE_140 ( 
    .B1(\u_speaker/u_DDS_1/n22 ), .A1(\u_speaker/fcw_r_3 ), 
    .B0(\u_speaker/u_DDS_1/n23 ), .A0(\u_speaker/fcw_r_2_adj_1397 ), 
    .FCI(\u_speaker/u_DDS_1/n15762 ), .F0(\u_speaker/n128 ), 
    .F1(\u_speaker/n127 ), .FCO(\u_speaker/u_DDS_1/n15763 ));
  u_speaker_u_DDS_1_SLICE_141 \u_speaker/u_DDS_1/SLICE_141 ( 
    .B1(\u_speaker/u_DDS_1/n24 ), .A1(\u_speaker/fcw_r_1_adj_1398 ), 
    .B0(\u_speaker/n25_adj_860 ), .A0(\u_speaker/fcw_r_0 ), 
    .F1(\u_speaker/n129 ), .FCO(\u_speaker/u_DDS_1/n15762 ));
  u_speaker_u_DDS_1_SLICE_142 \u_speaker/u_DDS_1/SLICE_142 ( .A0(yinjie_2), 
    .FCI(\u_speaker/u_DDS_1/n15512 ), .F1(\u_speaker/u_DDS_1/n7621 ));
  u_speaker_u_DDS_1_SLICE_143 \u_speaker/u_DDS_1/SLICE_143 ( .A1(yinjie_1), 
    .A0(yinjie_0), .FCI(\u_speaker/u_DDS_1/n15511 ), 
    .FCO(\u_speaker/u_DDS_1/n15512 ));
  u_speaker_u_DDS_1_SLICE_144 \u_speaker/u_DDS_1/SLICE_144 ( 
    .B0(\u_speaker/u_DDS_1/n8 ), .A0(yinjie_2), 
    .FCI(\u_speaker/u_DDS_1/n15510 ), .F0(\u_speaker/u_DDS_1/n7615 ), 
    .F1(\u_speaker/u_DDS_1/n7614 ), .FCO(\u_speaker/u_DDS_1/n15511 ));
  u_speaker_u_DDS_1_SLICE_145 \u_speaker/u_DDS_1/SLICE_145 ( 
    .B1(\u_speaker/u_DDS_1/n8 ), .A1(yinjie_2), .B0(\u_speaker/u_DDS_1/n9471 ), 
    .A0(yinjie_2), .FCI(\u_speaker/u_DDS_1/n15509 ), 
    .F0(\u_speaker/u_DDS_1/n7617 ), .F1(\u_speaker/u_DDS_1/n7616 ), 
    .FCO(\u_speaker/u_DDS_1/n15510 ));
  u_speaker_u_DDS_1_SLICE_146 \u_speaker/u_DDS_1/SLICE_146 ( .C1(yinjie_2), 
    .B1(yinjie_0), .A1(yinjie_1), .B0(yinjie_0), .A0(yinjie_1), 
    .F1(\u_speaker/u_DDS_1/n7618 ), .FCO(\u_speaker/u_DDS_1/n15509 ));
  u_speaker_u_DDS_1_SLICE_147 \u_speaker/u_DDS_1/SLICE_147 ( 
    .A0(\u_speaker/u_DDS_1/n7621 ), .DI0(\u_speaker/u_DDS_1/n7598 ), 
    .LSR(stat), .CLK(clk), .FCI(\u_speaker/u_DDS_1/n15802 ), 
    .F0(\u_speaker/u_DDS_1/n7598 ), .Q0(\u_speaker/fcw_r_10 ));
  u_speaker_u_DDS_1_SLICE_148 \u_speaker/u_DDS_1/SLICE_148 ( .A1(yinjie_2), 
    .C0(yinjie_1), .B0(\u_speaker/u_DDS_1/n8 ), .A0(yinjie_2), 
    .FCI(\u_speaker/u_DDS_1/n15801 ), .F0(\u_speaker/u_DDS_1/n7600 ), 
    .F1(\u_speaker/u_DDS_1/n7599 ), .FCO(\u_speaker/u_DDS_1/n15802 ));
  u_speaker_u_DDS_1_SLICE_149 \u_speaker/u_DDS_1/SLICE_149 ( .C1(yinjie_0), 
    .B1(\u_speaker/u_DDS_1/n8 ), .A1(yinjie_2), .D0(yinjie_0), .C0(yinjie_2), 
    .B0(yinjie_1), .A0(\u_speaker/u_DDS_1/n7614 ), 
    .FCI(\u_speaker/u_DDS_1/n15800 ), .F0(\u_speaker/u_DDS_1/n7602 ), 
    .F1(\u_speaker/u_DDS_1/n7601 ), .FCO(\u_speaker/u_DDS_1/n15801 ));
  u_speaker_u_DDS_1_SLICE_150 \u_speaker/u_DDS_1/SLICE_150 ( 
    .C1(\u_speaker/u_DDS_1/n7615 ), .B1(yinjie_0), .A1(yinjie_1), 
    .B0(yinjie_0), .A0(\u_speaker/u_DDS_1/n7616 ), 
    .F1(\u_speaker/u_DDS_1/n7603 ), .FCO(\u_speaker/u_DDS_1/n15800 ));
  u_speaker_u_DDS_13_SLICE_151 \u_speaker/u_DDS_13/SLICE_151 ( 
    .A1(\u_speaker/count13_24 ), .A0(\u_speaker/count13_23 ), 
    .FCI(\u_speaker/u_DDS_13/n15474 ), 
    .F0(\u_speaker/count_24_N_543_23_adj_1215 ), 
    .F1(\u_speaker/count_24_N_543_24_adj_1217 ));
  u_speaker_u_DDS_13_SLICE_152 \u_speaker/u_DDS_13/SLICE_152 ( 
    .A1(\u_speaker/count13_22 ), .A0(\u_speaker/count13_21 ), 
    .FCI(\u_speaker/u_DDS_13/n15473 ), 
    .F0(\u_speaker/count_24_N_543_21_adj_1211 ), 
    .F1(\u_speaker/count_24_N_543_22_adj_1213 ), 
    .FCO(\u_speaker/u_DDS_13/n15474 ));
  u_speaker_u_DDS_13_SLICE_153 \u_speaker/u_DDS_13/SLICE_153 ( 
    .A1(\u_speaker/count13_20 ), .A0(\u_speaker/count13_19 ), 
    .FCI(\u_speaker/u_DDS_13/n15472 ), 
    .F0(\u_speaker/count_24_N_543_19_adj_1207 ), 
    .F1(\u_speaker/count_24_N_543_20_adj_1209 ), 
    .FCO(\u_speaker/u_DDS_13/n15473 ));
  u_speaker_u_DDS_13_SLICE_154 \u_speaker/u_DDS_13/SLICE_154 ( 
    .A1(\u_speaker/count13_18 ), .A0(\u_speaker/count13_17 ), 
    .FCI(\u_speaker/u_DDS_13/n15471 ), 
    .F0(\u_speaker/count_24_N_543_17_adj_1203 ), 
    .F1(\u_speaker/count_24_N_543_18_adj_1205 ), 
    .FCO(\u_speaker/u_DDS_13/n15472 ));
  u_speaker_u_DDS_13_SLICE_155 \u_speaker/u_DDS_13/SLICE_155 ( 
    .A1(\u_speaker/count13_16 ), .A0(\u_speaker/count13_15 ), 
    .FCI(\u_speaker/u_DDS_13/n15470 ), 
    .F0(\u_speaker/count_24_N_543_15_adj_1199 ), 
    .F1(\u_speaker/count_24_N_543_16_adj_1201 ), 
    .FCO(\u_speaker/u_DDS_13/n15471 ));
  u_speaker_u_DDS_13_SLICE_156 \u_speaker/u_DDS_13/SLICE_156 ( 
    .A1(\u_speaker/count13_14 ), .A0(\u_speaker/u_DDS_13/count13_13 ), 
    .FCI(\u_speaker/u_DDS_13/n15469 ), .F0(\u_speaker/count_24_N_543_13 ), 
    .F1(\u_speaker/count_24_N_543_14_adj_1197 ), 
    .FCO(\u_speaker/u_DDS_13/n15470 ));
  u_speaker_u_DDS_13_SLICE_157 \u_speaker/u_DDS_13/SLICE_157 ( 
    .A1(\u_speaker/u_DDS_13/count13_12 ), .B0(\u_speaker/fcw_r_10 ), 
    .A0(\u_speaker/u_DDS_13/count13_11 ), .FCI(\u_speaker/u_DDS_13/n15468 ), 
    .F0(\u_speaker/count_24_N_543_11_adj_1038 ), 
    .F1(\u_speaker/count_24_N_543_12_adj_1022 ), 
    .FCO(\u_speaker/u_DDS_13/n15469 ));
  u_speaker_u_DDS_13_SLICE_158 \u_speaker/u_DDS_13/SLICE_158 ( 
    .B1(\u_speaker/fcw_r_9 ), .A1(\u_speaker/u_DDS_13/count13_10 ), 
    .B0(\u_speaker/fcw_r_8_adj_1394 ), .A0(\u_speaker/u_DDS_13/count13_9 ), 
    .FCI(\u_speaker/u_DDS_13/n15467 ), 
    .F0(\u_speaker/count_24_N_543_9_adj_1079 ), 
    .F1(\u_speaker/count_24_N_543_10_adj_1077 ), 
    .FCO(\u_speaker/u_DDS_13/n15468 ));
  u_speaker_u_DDS_13_SLICE_159 \u_speaker/u_DDS_13/SLICE_159 ( 
    .B1(\u_speaker/fcw_r_7 ), .A1(\u_speaker/u_DDS_13/count13_8 ), 
    .B0(\u_speaker/fcw_r_6_adj_1395 ), .A0(\u_speaker/u_DDS_13/count13_7 ), 
    .FCI(\u_speaker/u_DDS_13/n15466 ), 
    .F0(\u_speaker/count_24_N_543_7_adj_841 ), 
    .F1(\u_speaker/count_24_N_543_8_adj_1097 ), 
    .FCO(\u_speaker/u_DDS_13/n15467 ));
  u_speaker_u_DDS_13_SLICE_160 \u_speaker/u_DDS_13/SLICE_160 ( 
    .B1(\u_speaker/fcw_r_5 ), .A1(\u_speaker/u_DDS_13/count13_6 ), 
    .B0(\u_speaker/fcw_r_4_adj_1396 ), .A0(\u_speaker/u_DDS_13/count13_5 ), 
    .FCI(\u_speaker/u_DDS_13/n15465 ), 
    .F0(\u_speaker/count_24_N_543_5_adj_1162 ), 
    .F1(\u_speaker/count_24_N_543_6_adj_1100 ), 
    .FCO(\u_speaker/u_DDS_13/n15466 ));
  u_speaker_u_DDS_13_SLICE_161 \u_speaker/u_DDS_13/SLICE_161 ( 
    .B1(\u_speaker/fcw_r_3 ), .A1(\u_speaker/u_DDS_13/count13_4 ), 
    .B0(\u_speaker/fcw_r_2_adj_1397 ), .A0(\u_speaker/u_DDS_13/count13_3 ), 
    .FCI(\u_speaker/u_DDS_13/n15464 ), .F0(\u_speaker/count_24_N_543_3 ), 
    .F1(\u_speaker/count_24_N_543_4_adj_1142 ), 
    .FCO(\u_speaker/u_DDS_13/n15465 ));
  u_speaker_u_DDS_13_SLICE_162 \u_speaker/u_DDS_13/SLICE_162 ( 
    .B1(\u_speaker/fcw_r_1_adj_1398 ), .A1(\u_speaker/u_DDS_13/count13_2 ), 
    .B0(\u_speaker/fcw_r_0 ), .A0(\u_speaker/count13_1 ), 
    .F1(\u_speaker/count_24_N_543_2 ), .FCO(\u_speaker/u_DDS_13/n15464 ));
  u_speaker_u_DDS_12_SLICE_163 \u_speaker/u_DDS_12/SLICE_163 ( 
    .A0(\u_speaker/count12_24 ), .FCI(\u_speaker/u_DDS_12/n15721 ), 
    .F0(\u_speaker/n106_adj_1075 ));
  u_speaker_u_DDS_12_SLICE_164 \u_speaker/u_DDS_12/SLICE_164 ( 
    .A1(\u_speaker/count12_23 ), .A0(\u_speaker/count12_22 ), 
    .FCI(\u_speaker/u_DDS_12/n15720 ), .F0(\u_speaker/n108_adj_1071 ), 
    .F1(\u_speaker/n107_adj_1073 ), .FCO(\u_speaker/u_DDS_12/n15721 ));
  u_speaker_u_DDS_12_SLICE_165 \u_speaker/u_DDS_12/SLICE_165 ( 
    .A1(\u_speaker/count12_21 ), .A0(\u_speaker/count12_20 ), 
    .FCI(\u_speaker/u_DDS_12/n15719 ), .F0(\u_speaker/n110_adj_1067 ), 
    .F1(\u_speaker/n109_adj_1069 ), .FCO(\u_speaker/u_DDS_12/n15720 ));
  u_speaker_u_DDS_12_SLICE_166 \u_speaker/u_DDS_12/SLICE_166 ( 
    .A1(\u_speaker/count12_19 ), .A0(\u_speaker/count12_18 ), 
    .FCI(\u_speaker/u_DDS_12/n15718 ), .F0(\u_speaker/n112_adj_1063 ), 
    .F1(\u_speaker/n111_adj_1065 ), .FCO(\u_speaker/u_DDS_12/n15719 ));
  u_speaker_u_DDS_12_SLICE_167 \u_speaker/u_DDS_12/SLICE_167 ( 
    .A1(\u_speaker/count12_17 ), .A0(\u_speaker/count12_16 ), 
    .FCI(\u_speaker/u_DDS_12/n15717 ), .F0(\u_speaker/n114_adj_1059 ), 
    .F1(\u_speaker/n113_adj_1061 ), .FCO(\u_speaker/u_DDS_12/n15718 ));
  u_speaker_u_DDS_12_SLICE_168 \u_speaker/u_DDS_12/SLICE_168 ( 
    .A1(\u_speaker/count12_15 ), .A0(\u_speaker/count12_14 ), 
    .FCI(\u_speaker/u_DDS_12/n15716 ), .F0(\u_speaker/n116_adj_1055 ), 
    .F1(\u_speaker/n115_adj_1057 ), .FCO(\u_speaker/u_DDS_12/n15717 ));
  u_speaker_u_DDS_12_SLICE_169 \u_speaker/u_DDS_12/SLICE_169 ( 
    .A1(\u_speaker/u_DDS_12/n12 ), .A0(\u_speaker/u_DDS_12/n13 ), 
    .FCI(\u_speaker/u_DDS_12/n15715 ), .F0(\u_speaker/n118_adj_1051 ), 
    .F1(\u_speaker/n117_adj_1053 ), .FCO(\u_speaker/u_DDS_12/n15716 ));
  u_speaker_SLICE_170 \u_speaker/SLICE_170 ( .D1(\u_speaker/u_DDS_12/n6816 ), 
    .C1(\u_speaker/fcw_r_2_adj_1393 ), .B1(\u_speaker/u_DDS_12/n18701 ), 
    .A1(\u_speaker/u_DDS_12/n14 ), .C0(\u_speaker/u_DDS_12/n15 ), 
    .B0(\u_speaker/u_DDS_12/n4 ), .A0(\u_speaker/fcw_r_2_adj_1393 ), 
    .M1(fcw_r_15_N_495_10), .M0(fcw_r_15_N_495_9), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_12/n15714 ), .F0(\u_speaker/n120_adj_1026 ), 
    .Q0(\u_speaker/u_DDS_11/fcw_r_9 ), .F1(\u_speaker/n119_adj_1024 ), 
    .Q1(\u_speaker/u_DDS_11/fcw_r_10 ), .FCO(\u_speaker/u_DDS_12/n15715 ));
  u_speaker_SLICE_171 \u_speaker/SLICE_171 ( .C1(\u_speaker/u_DDS_12/n16 ), 
    .B1(\u_speaker/u_DDS_12/n4_adj_832 ), .A1(\u_speaker/fcw_r_1 ), 
    .C0(\u_speaker/u_DDS_12/n17 ), .B0(\u_speaker/fcw_r_0_adj_886 ), 
    .A0(\u_speaker/u_DDS_12/n6818 ), .M1(\u_speaker/fcw_r_15_N_495_8 ), 
    .M0(n18784), .CLK(clk), .FCI(\u_speaker/u_DDS_12/n15713 ), 
    .F0(\u_speaker/n122_adj_1030 ), .Q0(\u_speaker/u_DDS_11/fcw_r_7 ), 
    .F1(\u_speaker/n121_adj_1028 ), .Q1(\u_speaker/u_DDS_11/fcw_r_8 ), 
    .FCO(\u_speaker/u_DDS_12/n15714 ));
  u_speaker_u_DDS_12_SLICE_172 \u_speaker/u_DDS_12/SLICE_172 ( 
    .B1(\u_speaker/u_DDS_12/n18 ), .A1(\u_speaker/u_DDS_12/fcw_r_7 ), 
    .B0(\u_speaker/u_DDS_12/n19 ), .A0(\u_speaker/u_DDS_12/fcw_r_6 ), 
    .FCI(\u_speaker/u_DDS_12/n15712 ), .F0(\u_speaker/n124_adj_1034 ), 
    .F1(\u_speaker/n123_adj_1032 ), .FCO(\u_speaker/u_DDS_12/n15713 ));
  u_speaker_u_DDS_12_SLICE_173 \u_speaker/u_DDS_12/SLICE_173 ( 
    .B1(\u_speaker/u_DDS_12/n20 ), .A1(\u_speaker/u_DDS_12/fcw_r_5 ), 
    .B0(\u_speaker/u_DDS_12/n21 ), .A0(\u_speaker/u_DDS_12/fcw_r_4 ), 
    .FCI(\u_speaker/u_DDS_12/n15711 ), .F0(\u_speaker/n126_adj_1040 ), 
    .F1(\u_speaker/n125_adj_1036 ), .FCO(\u_speaker/u_DDS_12/n15712 ));
  u_speaker_u_DDS_12_SLICE_174 \u_speaker/u_DDS_12/SLICE_174 ( 
    .B1(\u_speaker/u_DDS_12/n22 ), .A1(\u_speaker/fcw_r_0_adj_886 ), 
    .B0(\u_speaker/u_DDS_12/n23 ), .A0(\u_speaker/fcw_r_2_adj_1393 ), 
    .FCI(\u_speaker/u_DDS_12/n15710 ), .F0(\u_speaker/n128_adj_1044 ), 
    .F1(\u_speaker/n127_adj_1042 ), .FCO(\u_speaker/u_DDS_12/n15711 ));
  u_speaker_u_DDS_12_SLICE_175 \u_speaker/u_DDS_12/SLICE_175 ( 
    .B1(\u_speaker/u_DDS_12/n24 ), .A1(\u_speaker/fcw_r_1 ), 
    .B0(\u_speaker/n25_adj_1049 ), .A0(\u_speaker/fcw_r_0_adj_886 ), 
    .F1(\u_speaker/n129_adj_1046 ), .FCO(\u_speaker/u_DDS_12/n15710 ));
  u_speaker_u_DDS_12_SLICE_176 \u_speaker/u_DDS_12/SLICE_176 ( 
    .B0(fcw_r_15_N_495_11), .A0(n18757), .DI1(\u_speaker/u_DDS_12/n8503 ), 
    .DI0(\u_speaker/u_DDS_12/n8493 ), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_12/n15805 ), .F0(\u_speaker/u_DDS_12/n8493 ), 
    .Q0(\u_speaker/u_DDS_12/n6817 ), .F1(\u_speaker/u_DDS_12/n8503 ), 
    .Q1(\u_speaker/u_DDS_12/n6816 ));
  u_speaker_u_DDS_12_SLICE_177 \u_speaker/u_DDS_12/SLICE_177 ( 
    .B1(fcw_r_15_N_495_11), .A1(n18757), .D0(n19846), .C0(n18784), .B0(n18785), 
    .A0(yinjie_2), .DI1(\u_speaker/u_DDS_12/n8494 ), 
    .DI0(\u_speaker/u_DDS_12/n8495 ), .CLK(clk), 
    .FCI(\u_speaker/u_DDS_12/n15804 ), .F0(\u_speaker/u_DDS_12/n8495 ), 
    .Q0(\u_speaker/u_DDS_12/fcw_r_7 ), .F1(\u_speaker/u_DDS_12/n8494 ), 
    .Q1(\u_speaker/u_DDS_12/n6818 ), .FCO(\u_speaker/u_DDS_12/n15805 ));
  u_speaker_u_DDS_12_SLICE_178 \u_speaker/u_DDS_12/SLICE_178 ( .D1(n19846), 
    .C1(\u_speaker/fcw_r_15_N_527_0 ), .B1(yinjie_0), .A1(yinjie_2), 
    .D0(yinjie_1), .C0(\u_speaker/yinjie_box_1 ), .B0(n19846), .A0(yinjie_2), 
    .DI1(\u_speaker/u_DDS_12/n8496 ), .DI0(\u_speaker/u_DDS_12/n8497 ), 
    .CLK(clk), .FCI(\u_speaker/u_DDS_12/n15803 ), 
    .F0(\u_speaker/u_DDS_12/n8497 ), .Q0(\u_speaker/u_DDS_12/fcw_r_5 ), 
    .F1(\u_speaker/u_DDS_12/n8496 ), .Q1(\u_speaker/u_DDS_12/fcw_r_6 ), 
    .FCO(\u_speaker/u_DDS_12/n15804 ));
  u_speaker_u_DDS_12_SLICE_179 \u_speaker/u_DDS_12/SLICE_179 ( .D1(yinjie_0), 
    .C1(\u_speaker/fcw_r_15_N_527_0 ), .B1(n19846), .A1(n18784), 
    .DI1(\u_speaker/u_DDS_12/n8498 ), .CLK(clk), 
    .F1(\u_speaker/u_DDS_12/n8498 ), .Q1(\u_speaker/u_DDS_12/fcw_r_4 ), 
    .FCO(\u_speaker/u_DDS_12/n15803 ));
  u_speaker_u_DDS_11_SLICE_180 \u_speaker/u_DDS_11/SLICE_180 ( 
    .A1(\u_speaker/count11_24 ), .A0(\u_speaker/count11_23 ), 
    .FCI(\u_speaker/u_DDS_11/n15454 ), 
    .F0(\u_speaker/count_24_N_543_23_adj_1134 ), 
    .F1(\u_speaker/count_24_N_543_24_adj_1136 ));
  u_speaker_u_DDS_11_SLICE_181 \u_speaker/u_DDS_11/SLICE_181 ( 
    .A1(\u_speaker/count11_22 ), .A0(\u_speaker/count11_21 ), 
    .FCI(\u_speaker/u_DDS_11/n15453 ), 
    .F0(\u_speaker/count_24_N_543_21_adj_1130 ), 
    .F1(\u_speaker/count_24_N_543_22_adj_1132 ), 
    .FCO(\u_speaker/u_DDS_11/n15454 ));
  u_speaker_u_DDS_11_SLICE_182 \u_speaker/u_DDS_11/SLICE_182 ( 
    .A1(\u_speaker/count11_20 ), .A0(\u_speaker/count11_19 ), 
    .FCI(\u_speaker/u_DDS_11/n15452 ), 
    .F0(\u_speaker/count_24_N_543_19_adj_1124 ), 
    .F1(\u_speaker/count_24_N_543_20_adj_1128 ), 
    .FCO(\u_speaker/u_DDS_11/n15453 ));
  u_speaker_u_DDS_11_SLICE_183 \u_speaker/u_DDS_11/SLICE_183 ( 
    .A1(\u_speaker/count11_18 ), .A0(\u_speaker/count11_17 ), 
    .FCI(\u_speaker/u_DDS_11/n15451 ), .F0(\u_speaker/count_24_N_543_17 ), 
    .F1(\u_speaker/count_24_N_543_18_adj_1122 ), 
    .FCO(\u_speaker/u_DDS_11/n15452 ));
  u_speaker_u_DDS_11_SLICE_184 \u_speaker/u_DDS_11/SLICE_184 ( 
    .A1(\u_speaker/count11_16 ), .A0(\u_speaker/count11_15 ), 
    .FCI(\u_speaker/u_DDS_11/n15450 ), 
    .F0(\u_speaker/count_24_N_543_15_adj_1119 ), 
    .F1(\u_speaker/count_24_N_543_16 ), .FCO(\u_speaker/u_DDS_11/n15451 ));
  u_speaker_u_DDS_11_SLICE_185 \u_speaker/u_DDS_11/SLICE_185 ( 
    .A1(\u_speaker/count11_14 ), .A0(\u_speaker/u_DDS_11/count11_13 ), 
    .FCI(\u_speaker/u_DDS_11/n15449 ), 
    .F0(\u_speaker/count_24_N_543_13_adj_1113 ), 
    .F1(\u_speaker/count_24_N_543_14_adj_1117 ), 
    .FCO(\u_speaker/u_DDS_11/n15450 ));
  u_speaker_SLICE_186 \u_speaker/SLICE_186 ( 
    .A1(\u_speaker/u_DDS_11/count11_12 ), .B0(\u_speaker/u_DDS_11/fcw_r_11 ), 
    .A0(\u_speaker/u_DDS_11/count11_11 ), .M0(\u_speaker/fcw_r_15_N_495_8 ), 
    .CLK(clk), .FCI(\u_speaker/u_DDS_11/n15448 ), 
    .F0(\u_speaker/count_24_N_543_11_adj_1106 ), 
    .Q0(\u_speaker/u_DDS_10/fcw_r_4 ), 
    .F1(\u_speaker/count_24_N_543_12_adj_1108 ), 
    .FCO(\u_speaker/u_DDS_11/n15449 ));
  u_speaker_SLICE_187 \u_speaker/SLICE_187 ( 
    .B1(\u_speaker/u_DDS_11/fcw_r_10 ), .A1(\u_speaker/u_DDS_11/count11_10 ), 
    .B0(\u_speaker/u_DDS_11/fcw_r_9 ), .A0(\u_speaker/u_DDS_11/count11_9 ), 
    .M1(n18784), .M0(n18785), .CLK(clk), .FCI(\u_speaker/u_DDS_11/n15447 ), 
    .F0(\u_speaker/count_24_N_543_9_adj_1102 ), .Q0(\u_speaker/fcw_r_2 ), 
    .F1(\u_speaker/count_24_N_543_10_adj_1104 ), 
    .Q1(\u_speaker/u_DDS_10/fcw_r_3 ), .FCO(\u_speaker/u_DDS_11/n15448 ));
  u_speaker_u_DDS_11_SLICE_188 \u_speaker/u_DDS_11/SLICE_188 ( 
    .B1(\u_speaker/u_DDS_11/fcw_r_8 ), .A1(\u_speaker/u_DDS_11/count11_8 ), 
    .B0(\u_speaker/u_DDS_11/fcw_r_7 ), .A0(\u_speaker/u_DDS_11/count11_7 ), 
    .FCI(\u_speaker/u_DDS_11/n15446 ), .F0(\u_speaker/count_24_N_543_7 ), 
    .F1(\u_speaker/count_24_N_543_8 ), .FCO(\u_speaker/u_DDS_11/n15447 ));
  u_speaker_u_DDS_11_SLICE_189 \u_speaker/u_DDS_11/SLICE_189 ( 
    .B1(\u_speaker/fcw_r_6_adj_1219 ), .A1(\u_speaker/u_DDS_11/count11_6 ), 
    .B0(\u_speaker/u_DDS_11/fcw_r_5 ), .A0(\u_speaker/u_DDS_11/count11_5 ), 
    .FCI(\u_speaker/u_DDS_11/n15445 ), 
    .F0(\u_speaker/count_24_N_543_5_adj_1247 ), 
    .F1(\u_speaker/count_24_N_543_6_adj_1233 ), 
    .FCO(\u_speaker/u_DDS_11/n15446 ));
  u_speaker_u_DDS_11_SLICE_190 \u_speaker/u_DDS_11/SLICE_190 ( 
    .B1(\u_speaker/u_DDS_11/fcw_r_4 ), .A1(\u_speaker/u_DDS_11/count11_4 ), 
    .B0(\u_speaker/u_DDS_11/fcw_r_3 ), .A0(\u_speaker/u_DDS_11/count11_3 ), 
    .FCI(\u_speaker/u_DDS_11/n15444 ), 
    .F0(\u_speaker/count_24_N_543_3_adj_1223 ), 
    .F1(\u_speaker/count_24_N_543_4_adj_1225 ), 
    .FCO(\u_speaker/u_DDS_11/n15445 ));
  u_speaker_u_DDS_11_SLICE_191 \u_speaker/u_DDS_11/SLICE_191 ( 
    .B1(\u_speaker/u_DDS_11/fcw_r_2 ), .A1(\u_speaker/u_DDS_11/count11_2 ), 
    .B0(\u_speaker/fcw_r_6_adj_1219 ), .A0(\u_speaker/count11_1 ), 
    .F1(\u_speaker/count_24_N_543_2_adj_1221 ), 
    .FCO(\u_speaker/u_DDS_11/n15444 ));
  u_speaker_u_DDS_10_SLICE_192 \u_speaker/u_DDS_10/SLICE_192 ( 
    .A0(\u_speaker/count10_24 ), .FCI(\u_speaker/u_DDS_10/n15442 ), 
    .F0(\u_speaker/count_24_N_543_24_adj_1276 ));
  u_speaker_u_DDS_10_SLICE_193 \u_speaker/u_DDS_10/SLICE_193 ( 
    .A1(\u_speaker/count10_23 ), .A0(\u_speaker/count10_22 ), 
    .FCI(\u_speaker/u_DDS_10/n15441 ), 
    .F0(\u_speaker/count_24_N_543_22_adj_1272 ), 
    .F1(\u_speaker/count_24_N_543_23_adj_1274 ), 
    .FCO(\u_speaker/u_DDS_10/n15442 ));
  u_speaker_u_DDS_10_SLICE_194 \u_speaker/u_DDS_10/SLICE_194 ( 
    .A1(\u_speaker/count10_21 ), .A0(\u_speaker/count10_20 ), 
    .FCI(\u_speaker/u_DDS_10/n15440 ), 
    .F0(\u_speaker/count_24_N_543_20_adj_1268 ), 
    .F1(\u_speaker/count_24_N_543_21_adj_1270 ), 
    .FCO(\u_speaker/u_DDS_10/n15441 ));
  u_speaker_u_DDS_10_SLICE_195 \u_speaker/u_DDS_10/SLICE_195 ( 
    .A1(\u_speaker/count10_19 ), .A0(\u_speaker/count10_18 ), 
    .FCI(\u_speaker/u_DDS_10/n15439 ), 
    .F0(\u_speaker/count_24_N_543_18_adj_1264 ), 
    .F1(\u_speaker/count_24_N_543_19_adj_1266 ), 
    .FCO(\u_speaker/u_DDS_10/n15440 ));
  u_speaker_u_DDS_10_SLICE_196 \u_speaker/u_DDS_10/SLICE_196 ( 
    .A1(\u_speaker/count10_17 ), .A0(\u_speaker/count10_16 ), 
    .FCI(\u_speaker/u_DDS_10/n15438 ), 
    .F0(\u_speaker/count_24_N_543_16_adj_1260 ), 
    .F1(\u_speaker/count_24_N_543_17_adj_1262 ), 
    .FCO(\u_speaker/u_DDS_10/n15439 ));
  u_speaker_u_DDS_10_SLICE_197 \u_speaker/u_DDS_10/SLICE_197 ( 
    .A1(\u_speaker/count10_15 ), .A0(\u_speaker/count10_14 ), 
    .FCI(\u_speaker/u_DDS_10/n15437 ), 
    .F0(\u_speaker/count_24_N_543_14_adj_1256 ), 
    .F1(\u_speaker/count_24_N_543_15_adj_1258 ), 
    .FCO(\u_speaker/u_DDS_10/n15438 ));
  u_speaker_u_DDS_10_SLICE_198 \u_speaker/u_DDS_10/SLICE_198 ( 
    .A1(\u_speaker/u_DDS_10/count10_13 ), .A0(\u_speaker/u_DDS_10/count10_12 ), 
    .FCI(\u_speaker/u_DDS_10/n15436 ), 
    .F0(\u_speaker/count_24_N_543_12_adj_1140 ), 
    .F1(\u_speaker/count_24_N_543_13_adj_1138 ), 
    .FCO(\u_speaker/u_DDS_10/n15437 ));
  u_speaker_u_DDS_10_SLICE_199 \u_speaker/u_DDS_10/SLICE_199 ( 
    .B1(\u_speaker/u_DDS_10/fcw_r_11 ), .A1(\u_speaker/u_DDS_10/count10_11 ), 
    .B0(\u_speaker/u_DDS_10/fcw_r_10 ), .A0(\u_speaker/u_DDS_10/count10_10 ), 
    .FCI(\u_speaker/u_DDS_10/n15435 ), 
    .F0(\u_speaker/count_24_N_543_10_adj_1235 ), 
    .F1(\u_speaker/count_24_N_543_11_adj_1160 ), 
    .FCO(\u_speaker/u_DDS_10/n15436 ));
  u_speaker_u_DDS_10_SLICE_200 \u_speaker/u_DDS_10/SLICE_200 ( 
    .B1(\u_speaker/u_DDS_10/fcw_r_9 ), .A1(\u_speaker/u_DDS_10/count10_9 ), 
    .B0(\u_speaker/u_DDS_10/fcw_r_8 ), .A0(\u_speaker/u_DDS_10/count10_8 ), 
    .FCI(\u_speaker/u_DDS_10/n15434 ), 
    .F0(\u_speaker/count_24_N_543_8_adj_1241 ), 
    .F1(\u_speaker/count_24_N_543_9_adj_1237 ), 
    .FCO(\u_speaker/u_DDS_10/n15435 ));
  u_speaker_u_DDS_10_SLICE_201 \u_speaker/u_DDS_10/SLICE_201 ( 
    .B1(\u_speaker/u_DDS_10/fcw_r_7 ), .A1(\u_speaker/u_DDS_10/count10_7 ), 
    .B0(\u_speaker/u_DDS_10/fcw_r_6 ), .A0(\u_speaker/u_DDS_10/count10_6 ), 
    .FCI(\u_speaker/u_DDS_10/n15433 ), 
    .F0(\u_speaker/count_24_N_543_6_adj_1245 ), 
    .F1(\u_speaker/count_24_N_543_7_adj_1243 ), 
    .FCO(\u_speaker/u_DDS_10/n15434 ));
  u_speaker_u_DDS_10_SLICE_202 \u_speaker/u_DDS_10/SLICE_202 ( 
    .B1(\u_speaker/u_DDS_10/fcw_r_5 ), .A1(\u_speaker/u_DDS_10/count10_5 ), 
    .B0(\u_speaker/u_DDS_10/fcw_r_4 ), .A0(\u_speaker/u_DDS_10/count10_4 ), 
    .FCI(\u_speaker/u_DDS_10/n15432 ), 
    .F0(\u_speaker/count_24_N_543_4_adj_1251 ), 
    .F1(\u_speaker/count_24_N_543_5_adj_1249 ), 
    .FCO(\u_speaker/u_DDS_10/n15433 ));
  u_speaker_u_DDS_10_SLICE_203 \u_speaker/u_DDS_10/SLICE_203 ( 
    .B1(\u_speaker/u_DDS_10/fcw_r_3 ), .A1(\u_speaker/u_DDS_10/count10_3 ), 
    .B0(\u_speaker/fcw_r_2 ), .A0(\u_speaker/count10_2 ), 
    .F1(\u_speaker/count_24_N_543_3_adj_1253 ), 
    .FCO(\u_speaker/u_DDS_10/n15432 ));
  u_key_state_SLICE_204 \u_key_state/SLICE_204 ( 
    .A0(\u_key_state/delay_cnt_31 ), .DI0(\u_key_state/n10 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15528 ), .F0(\u_key_state/n10 ), 
    .Q0(\u_key_state/delay_cnt_31 ));
  u_key_state_SLICE_205 \u_key_state/SLICE_205 ( 
    .A1(\u_key_state/delay_cnt_30 ), .A0(\u_key_state/delay_cnt_29 ), 
    .DI1(\u_key_state/n11 ), .DI0(\u_key_state/n12 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15527 ), .F0(\u_key_state/n12 ), 
    .Q0(\u_key_state/delay_cnt_29 ), .F1(\u_key_state/n11 ), 
    .Q1(\u_key_state/delay_cnt_30 ), .FCO(\u_key_state/n15528 ));
  u_key_state_SLICE_206 \u_key_state/SLICE_206 ( 
    .A1(\u_key_state/delay_cnt_28 ), .A0(\u_key_state/delay_cnt_27 ), 
    .DI1(\u_key_state/n13 ), .DI0(\u_key_state/n14 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15526 ), .F0(\u_key_state/n14 ), 
    .Q0(\u_key_state/delay_cnt_27 ), .F1(\u_key_state/n13 ), 
    .Q1(\u_key_state/delay_cnt_28 ), .FCO(\u_key_state/n15527 ));
  u_key_state_SLICE_207 \u_key_state/SLICE_207 ( 
    .A1(\u_key_state/delay_cnt_26 ), .A0(\u_key_state/delay_cnt_25 ), 
    .DI1(\u_key_state/n15 ), .DI0(\u_key_state/n16 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15525 ), .F0(\u_key_state/n16 ), 
    .Q0(\u_key_state/delay_cnt_25 ), .F1(\u_key_state/n15 ), 
    .Q1(\u_key_state/delay_cnt_26 ), .FCO(\u_key_state/n15526 ));
  u_key_state_SLICE_208 \u_key_state/SLICE_208 ( 
    .A1(\u_key_state/delay_cnt_24 ), .A0(\u_key_state/delay_cnt_23 ), 
    .DI1(\u_key_state/n17 ), .DI0(\u_key_state/n18 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15524 ), .F0(\u_key_state/n18 ), 
    .Q0(\u_key_state/delay_cnt_23 ), .F1(\u_key_state/n17 ), 
    .Q1(\u_key_state/delay_cnt_24 ), .FCO(\u_key_state/n15525 ));
  u_key_state_SLICE_209 \u_key_state/SLICE_209 ( 
    .A1(\u_key_state/delay_cnt_22 ), .A0(\u_key_state/delay_cnt_21 ), 
    .DI1(\u_key_state/n19 ), .DI0(\u_key_state/n20 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15523 ), .F0(\u_key_state/n20 ), 
    .Q0(\u_key_state/delay_cnt_21 ), .F1(\u_key_state/n19 ), 
    .Q1(\u_key_state/delay_cnt_22 ), .FCO(\u_key_state/n15524 ));
  u_key_state_SLICE_210 \u_key_state/SLICE_210 ( 
    .A1(\u_key_state/delay_cnt_20 ), .A0(\u_key_state/delay_cnt_19 ), 
    .DI1(\u_key_state/n21 ), .CE(\u_key_state/clk_N_168_enable_505 ), 
    .LSR(\u_key_state/n18788 ), .CLK(clk), .FCI(\u_key_state/n15522 ), 
    .F0(\u_key_state/n22 ), .F1(\u_key_state/n21 ), 
    .Q1(\u_key_state/delay_cnt_20 ), .FCO(\u_key_state/n15523 ));
  u_key_state_SLICE_211 \u_key_state/SLICE_211 ( 
    .A1(\u_key_state/delay_cnt_18 ), .A0(\u_key_state/delay_cnt_17 ), 
    .M0(key_state_c), .CLK(clk), .FCI(\u_key_state/n15521 ), 
    .F0(\u_key_state/n24 ), .Q0(\u_key_state/key_reg ), .F1(\u_key_state/n23 ), 
    .FCO(\u_key_state/n15522 ));
  u_key_state_SLICE_212 \u_key_state/SLICE_212 ( 
    .A1(\u_key_state/delay_cnt_16 ), .A0(\u_key_state/delay_cnt_15 ), 
    .DI0(\u_key_state/n26 ), .CE(\u_key_state/clk_N_168_enable_505 ), 
    .LSR(\u_key_state/n18788 ), .CLK(clk), .FCI(\u_key_state/n15520 ), 
    .F0(\u_key_state/n26 ), .Q0(\u_key_state/delay_cnt_15 ), 
    .F1(\u_key_state/n25 ), .FCO(\u_key_state/n15521 ));
  u_key_state_SLICE_213 \u_key_state/SLICE_213 ( 
    .A1(\u_key_state/delay_cnt_14 ), .A0(\u_key_state/delay_cnt_13 ), 
    .DI0(\u_key_state/n28 ), .CE(\u_key_state/clk_N_168_enable_505 ), 
    .LSR(\u_key_state/n18788 ), .CLK(clk), .FCI(\u_key_state/n15519 ), 
    .F0(\u_key_state/n28 ), .Q0(\u_key_state/delay_cnt_13 ), 
    .F1(\u_key_state/n27 ), .FCO(\u_key_state/n15520 ));
  u_key_state_SLICE_214 \u_key_state/SLICE_214 ( 
    .A1(\u_key_state/delay_cnt_12 ), .A0(\u_key_state/delay_cnt_11 ), 
    .DI1(\u_key_state/n29 ), .DI0(\u_key_state/n30 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15518 ), .F0(\u_key_state/n30 ), 
    .Q0(\u_key_state/delay_cnt_11 ), .F1(\u_key_state/n29 ), 
    .Q1(\u_key_state/delay_cnt_12 ), .FCO(\u_key_state/n15519 ));
  u_key_state_SLICE_215 \u_key_state/SLICE_215 ( 
    .A1(\u_key_state/delay_cnt_10 ), .A0(\u_key_state/delay_cnt_9 ), 
    .DI1(\u_key_state/n31 ), .CE(\u_key_state/clk_N_168_enable_505 ), 
    .LSR(\u_key_state/n18788 ), .CLK(clk), .FCI(\u_key_state/n15517 ), 
    .F0(\u_key_state/n32 ), .F1(\u_key_state/n31 ), 
    .Q1(\u_key_state/delay_cnt_10 ), .FCO(\u_key_state/n15518 ));
  u_key_state_SLICE_216 \u_key_state/SLICE_216 ( 
    .A1(\u_key_state/delay_cnt_8 ), .A0(\u_key_state/delay_cnt_7 ), 
    .DI1(\u_key_state/n33 ), .DI0(\u_key_state/n34 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15516 ), .F0(\u_key_state/n34 ), 
    .Q0(\u_key_state/delay_cnt_7 ), .F1(\u_key_state/n33 ), 
    .Q1(\u_key_state/delay_cnt_8 ), .FCO(\u_key_state/n15517 ));
  u_key_state_SLICE_217 \u_key_state/SLICE_217 ( 
    .A1(\u_key_state/delay_cnt_6 ), .A0(\u_key_state/delay_cnt_5 ), 
    .DI0(\u_key_state/n36 ), .CE(\u_key_state/clk_N_168_enable_505 ), 
    .LSR(\u_key_state/n18788 ), .CLK(clk), .FCI(\u_key_state/n15515 ), 
    .F0(\u_key_state/n36 ), .Q0(\u_key_state/delay_cnt_5 ), 
    .F1(\u_key_state/n35 ), .FCO(\u_key_state/n15516 ));
  u_key_state_SLICE_218 \u_key_state/SLICE_218 ( 
    .A1(\u_key_state/delay_cnt_4 ), .A0(\u_key_state/delay_cnt_3 ), 
    .DI1(\u_key_state/n37 ), .DI0(\u_key_state/n38 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15514 ), .F0(\u_key_state/n38 ), 
    .Q0(\u_key_state/delay_cnt_3 ), .F1(\u_key_state/n37 ), 
    .Q1(\u_key_state/delay_cnt_4 ), .FCO(\u_key_state/n15515 ));
  u_key_state_SLICE_219 \u_key_state/SLICE_219 ( 
    .A1(\u_key_state/delay_cnt_2 ), .A0(\u_key_state/delay_cnt_1 ), 
    .DI1(\u_key_state/n39 ), .DI0(\u_key_state/n40 ), 
    .CE(\u_key_state/clk_N_168_enable_505 ), .LSR(\u_key_state/n18788 ), 
    .CLK(clk), .FCI(\u_key_state/n15513 ), .F0(\u_key_state/n40 ), 
    .Q0(\u_key_state/delay_cnt_1 ), .F1(\u_key_state/n39 ), 
    .Q1(\u_key_state/delay_cnt_2 ), .FCO(\u_key_state/n15514 ));
  u_key_state_SLICE_220 \u_key_state/SLICE_220 ( 
    .A1(\u_key_state/delay_cnt_0 ), .M0(key_state_c), 
    .CE(\u_key_state/key_flag_N_639 ), .CLK(clk), .Q0(key_state_value), 
    .F1(\u_key_state/n41 ), .FCO(\u_key_state/n15513 ));
  SLICE_221 SLICE_221( .A1(cnt_6), .A0(cnt_5), .DI1(n127), .DI0(n128), 
    .LSR(n10969), .CLK(clk), .FCI(n15785), .F0(n128), .Q0(cnt_5), .F1(n127), 
    .Q1(cnt_6), .FCO(n15786));
  SLICE_222 SLICE_222( .A1(cnt_4), .A0(cnt_3), .DI1(n129), .DI0(n130), 
    .LSR(n10969), .CLK(clk), .FCI(n15784), .F0(n130), .Q0(cnt_3), .F1(n129), 
    .Q1(cnt_4), .FCO(n15785));
  SLICE_223 SLICE_223( .A1(cnt_2), .A0(cnt_1), .DI1(n131), .DI0(n132), 
    .LSR(n10969), .CLK(clk), .FCI(n15783), .F0(n132), .Q0(cnt_1), .F1(n131), 
    .Q1(cnt_2), .FCO(n15784));
  SLICE_224 SLICE_224( .A1(cnt_0), .DI1(n133), .LSR(n10969), .CLK(clk), 
    .F1(n133), .Q1(cnt_0), .FCO(n15783));
  SLICE_225 SLICE_225( .A0(count_note_7), .DI0(n38_adj_1457), 
    .CE(clk_N_168_enable_533), .LSR(n10968), .CLK(clk), .FCI(n15708), 
    .F0(n38_adj_1457), .Q0(count_note_7));
  SLICE_226 SLICE_226( .A1(count_note_6), .A0(count_note_5), .DI1(n39), 
    .DI0(n40_adj_1456), .CE(clk_N_168_enable_533), .LSR(n10968), .CLK(clk), 
    .FCI(n15707), .F0(n40_adj_1456), .Q0(count_note_5), .F1(n39), 
    .Q1(count_note_6), .FCO(n15708));
  SLICE_227 SLICE_227( .A1(count_note_4), .A0(count_note_3), 
    .DI1(n41_adj_1455), .DI0(n42_adj_1454), .CE(clk_N_168_enable_533), 
    .LSR(n10968), .CLK(clk), .FCI(n15706), .F0(n42_adj_1454), 
    .Q0(count_note_3), .F1(n41_adj_1455), .Q1(count_note_4), .FCO(n15707));
  SLICE_228 SLICE_228( .A1(count_note_2), .A0(count_note_1), .DI1(n43), 
    .DI0(n44_adj_1453), .CE(clk_N_168_enable_533), .LSR(n10968), .CLK(clk), 
    .FCI(n15705), .F0(n44_adj_1453), .Q0(count_note_1), .F1(n43), 
    .Q1(count_note_2), .FCO(n15706));
  SLICE_229 SLICE_229( .A1(count_note_0), .DI1(n45), .CE(clk_N_168_enable_533), 
    .LSR(n10968), .CLK(clk), .F1(n45), .Q1(count_note_0), .FCO(n15705));
  SLICE_230 SLICE_230( .B0(CNT_17_N_703_17), .A0(CNT_17), .FCI(n15507), 
    .F1(n3759));
  SLICE_231 SLICE_231( .B1(CNT_17_N_703_16), .A1(CNT_16), .B0(CNT_17_N_703_15), 
    .A0(CNT_15), .FCI(n15506), .FCO(n15507));
  SLICE_232 SLICE_232( .B1(CNT_17_N_703_14), .A1(CNT_14), .B0(CNT_17_N_703_13), 
    .A0(CNT_13), .FCI(n15505), .FCO(n15506));
  SLICE_233 SLICE_233( .B1(CNT_17_N_703_12), .A1(CNT_12), .B0(CNT_17_N_703_11), 
    .A0(CNT_11), .FCI(n15504), .FCO(n15505));
  SLICE_234 SLICE_234( .B1(CNT_17_N_703_10), .A1(CNT_10), .B0(CNT_17_N_703_9), 
    .A0(CNT_9), .FCI(n15503), .FCO(n15504));
  SLICE_235 SLICE_235( .B1(CNT_17_N_703_8), .A1(CNT_8), .B0(CNT_17_N_703_7), 
    .A0(CNT_7), .FCI(n15502), .FCO(n15503));
  SLICE_236 SLICE_236( .B1(CNT_17_N_703_6), .A1(CNT_6), .B0(CNT_17_N_703_5), 
    .A0(CNT_5), .FCI(n15501), .FCO(n15502));
  SLICE_237 SLICE_237( .B1(CNT_17_N_703_4), .A1(CNT_4), .B0(CNT_17_N_703_3), 
    .A0(CNT_3), .FCI(n15500), .FCO(n15501));
  SLICE_238 SLICE_238( .B1(CNT_17_N_703_2), .A1(CNT_2), .B0(CNT_17_N_703_1), 
    .A0(CNT_1), .FCI(n15499), .FCO(n15500));
  SLICE_239 SLICE_239( .B1(CNT_17_N_703_0), .A1(CNT_0), .FCO(n15499));
  u_buzzer_SLICE_240 \u_buzzer/SLICE_240 ( .A1(\u_buzzer/cycle_4 ), 
    .A0(\u_buzzer/cycle_3 ), .FCI(\u_buzzer/n15307 ), .F0(CNT_17_N_703_3), 
    .F1(CNT_17_N_703_4), .FCO(\u_buzzer/n15308 ));
  u_buzzer_SLICE_241 \u_buzzer/SLICE_241 ( .A0(CNT_17), 
    .FCI(\u_buzzer/n15782 ), .F0(n78));
  u_buzzer_SLICE_242 \u_buzzer/SLICE_242 ( .A1(CNT_16), .A0(CNT_15), 
    .FCI(\u_buzzer/n15781 ), .F0(n80), .F1(n79), .FCO(\u_buzzer/n15782 ));
  u_buzzer_SLICE_243 \u_buzzer/SLICE_243 ( .A1(CNT_14), .A0(CNT_13), 
    .FCI(\u_buzzer/n15780 ), .F0(n82), .F1(n81), .FCO(\u_buzzer/n15781 ));
  u_buzzer_SLICE_244 \u_buzzer/SLICE_244 ( .A1(CNT_12), .A0(CNT_11), 
    .FCI(\u_buzzer/n15779 ), .F0(n84), .F1(n83), .FCO(\u_buzzer/n15780 ));
  u_buzzer_SLICE_245 \u_buzzer/SLICE_245 ( .A1(CNT_10), .A0(CNT_9), 
    .FCI(\u_buzzer/n15778 ), .F0(n86), .F1(n85), .FCO(\u_buzzer/n15779 ));
  u_buzzer_SLICE_246 \u_buzzer/SLICE_246 ( .A1(CNT_8), .A0(CNT_7), 
    .FCI(\u_buzzer/n15777 ), .F0(n88), .F1(n87), .FCO(\u_buzzer/n15778 ));
  u_buzzer_SLICE_247 \u_buzzer/SLICE_247 ( .A1(CNT_6), .A0(CNT_5), 
    .FCI(\u_buzzer/n15776 ), .F0(n90), .F1(n89), .FCO(\u_buzzer/n15777 ));
  u_buzzer_SLICE_248 \u_buzzer/SLICE_248 ( .A1(CNT_4), .A0(CNT_3), 
    .FCI(\u_buzzer/n15775 ), .F0(n92_adj_1476), .F1(n91_adj_1475), 
    .FCO(\u_buzzer/n15776 ));
  u_buzzer_SLICE_249 \u_buzzer/SLICE_249 ( .C1(CNT_2), .B1(n19846), 
    .A1(yinjie_2), .D0(yinjie_1), .C0(\u_buzzer/yinjie_box_1 ), .B0(n19846), 
    .A0(CNT_1), .FCI(\u_buzzer/n15774 ), .F0(n94_adj_1477), .F1(n93), 
    .FCO(\u_buzzer/n15775 ));
  u_buzzer_SLICE_250 \u_buzzer/SLICE_250 ( .D1(yinjie_0), 
    .C1(\u_buzzer/yinjie_box_0 ), .B1(n19846), .A1(CNT_0), .F1(n95), 
    .FCO(\u_buzzer/n15774 ));
  u_buzzer_SLICE_251 \u_buzzer/SLICE_251 ( .A1(\u_buzzer/cycle_2 ), 
    .A0(\u_buzzer/cycle_1 ), .FCI(\u_buzzer/n15306 ), .F0(CNT_17_N_703_1), 
    .F1(CNT_17_N_703_2), .FCO(\u_buzzer/n15307 ));
  u_buzzer_SLICE_252 \u_buzzer/SLICE_252 ( .A1(\u_buzzer/cycle_0 ), 
    .F1(CNT_17_N_703_0), .FCO(\u_buzzer/n15306 ));
  u_buzzer_SLICE_253 \u_buzzer/SLICE_253 ( .A0(\u_buzzer/cycle_17 ), 
    .FCI(\u_buzzer/n15314 ), .F0(CNT_17_N_703_17), .F1(CNT_17_N_703_18));
  u_buzzer_SLICE_254 \u_buzzer/SLICE_254 ( .A1(\u_buzzer/cycle_16 ), 
    .A0(\u_buzzer/cycle_15 ), .FCI(\u_buzzer/n15313 ), .F0(CNT_17_N_703_15), 
    .F1(CNT_17_N_703_16), .FCO(\u_buzzer/n15314 ));
  u_buzzer_SLICE_255 \u_buzzer/SLICE_255 ( .A1(\u_buzzer/cycle_14 ), 
    .A0(\u_buzzer/cycle_13 ), .FCI(\u_buzzer/n15312 ), .F0(CNT_17_N_703_13), 
    .F1(CNT_17_N_703_14), .FCO(\u_buzzer/n15313 ));
  u_buzzer_SLICE_256 \u_buzzer/SLICE_256 ( .A1(\u_buzzer/cycle_12 ), 
    .A0(\u_buzzer/cycle_11 ), .FCI(\u_buzzer/n15311 ), .F0(CNT_17_N_703_11), 
    .F1(CNT_17_N_703_12), .FCO(\u_buzzer/n15312 ));
  u_buzzer_SLICE_257 \u_buzzer/SLICE_257 ( .A1(\u_buzzer/cycle_10 ), 
    .A0(\u_buzzer/cycle_9 ), .FCI(\u_buzzer/n15310 ), .F0(CNT_17_N_703_9), 
    .F1(CNT_17_N_703_10), .FCO(\u_buzzer/n15311 ));
  u_buzzer_SLICE_258 \u_buzzer/SLICE_258 ( .A1(\u_buzzer/cycle_8 ), 
    .A0(\u_buzzer/cycle_7 ), .FCI(\u_buzzer/n15309 ), .F0(CNT_17_N_703_7), 
    .F1(CNT_17_N_703_8), .FCO(\u_buzzer/n15310 ));
  u_buzzer_SLICE_259 \u_buzzer/SLICE_259 ( .A1(\u_buzzer/cycle_6 ), 
    .A0(\u_buzzer/cycle_5 ), .FCI(\u_buzzer/n15308 ), .F0(CNT_17_N_703_5), 
    .F1(CNT_17_N_703_6), .FCO(\u_buzzer/n15309 ));
  u_key_5_SLICE_260 \u_key_5/SLICE_260 ( .A0(\u_key_5/delay_cnt_31 ), 
    .DI0(\u_key_5/n10 ), .CE(\u_key_5/clk_N_168_enable_325 ), 
    .LSR(\u_key_5/n18798 ), .CLK(clk), .FCI(\u_key_5/n15704 ), 
    .F0(\u_key_5/n10 ), .Q0(\u_key_5/delay_cnt_31 ));
  u_key_5_SLICE_261 \u_key_5/SLICE_261 ( .A1(\u_key_5/delay_cnt_30 ), 
    .A0(\u_key_5/delay_cnt_29 ), .DI1(\u_key_5/n11 ), .DI0(\u_key_5/n12 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15703 ), .F0(\u_key_5/n12 ), .Q0(\u_key_5/delay_cnt_29 ), 
    .F1(\u_key_5/n11 ), .Q1(\u_key_5/delay_cnt_30 ), .FCO(\u_key_5/n15704 ));
  u_key_5_SLICE_262 \u_key_5/SLICE_262 ( .A1(\u_key_5/delay_cnt_28 ), 
    .A0(\u_key_5/delay_cnt_27 ), .DI1(\u_key_5/n13 ), .DI0(\u_key_5/n14 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15702 ), .F0(\u_key_5/n14 ), .Q0(\u_key_5/delay_cnt_27 ), 
    .F1(\u_key_5/n13 ), .Q1(\u_key_5/delay_cnt_28 ), .FCO(\u_key_5/n15703 ));
  u_key_5_SLICE_263 \u_key_5/SLICE_263 ( .A1(\u_key_5/delay_cnt_26 ), 
    .A0(\u_key_5/delay_cnt_25 ), .DI1(\u_key_5/n15 ), .DI0(\u_key_5/n16 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15701 ), .F0(\u_key_5/n16 ), .Q0(\u_key_5/delay_cnt_25 ), 
    .F1(\u_key_5/n15 ), .Q1(\u_key_5/delay_cnt_26 ), .FCO(\u_key_5/n15702 ));
  u_key_5_SLICE_264 \u_key_5/SLICE_264 ( .A1(\u_key_5/delay_cnt_24 ), 
    .A0(\u_key_5/delay_cnt_23 ), .DI1(\u_key_5/n17 ), .DI0(\u_key_5/n18 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15700 ), .F0(\u_key_5/n18 ), .Q0(\u_key_5/delay_cnt_23 ), 
    .F1(\u_key_5/n17 ), .Q1(\u_key_5/delay_cnt_24 ), .FCO(\u_key_5/n15701 ));
  u_key_5_SLICE_265 \u_key_5/SLICE_265 ( .A1(\u_key_5/delay_cnt_22 ), 
    .A0(\u_key_5/delay_cnt_21 ), .DI1(\u_key_5/n19 ), .DI0(\u_key_5/n20 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15699 ), .F0(\u_key_5/n20 ), .Q0(\u_key_5/delay_cnt_21 ), 
    .F1(\u_key_5/n19 ), .Q1(\u_key_5/delay_cnt_22 ), .FCO(\u_key_5/n15700 ));
  u_key_5_SLICE_266 \u_key_5/SLICE_266 ( .A1(\u_key_5/delay_cnt_20 ), 
    .A0(\u_key_5/delay_cnt_19 ), .DI1(\u_key_5/n21 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15698 ), .F0(\u_key_5/n22 ), .F1(\u_key_5/n21 ), 
    .Q1(\u_key_5/delay_cnt_20 ), .FCO(\u_key_5/n15699 ));
  u_key_5_SLICE_267 \u_key_5/SLICE_267 ( .A1(\u_key_5/delay_cnt_18 ), 
    .A0(\u_key_5/delay_cnt_17 ), .M0(key_c_4), .CLK(clk), 
    .FCI(\u_key_5/n15697 ), .F0(\u_key_5/n24 ), .Q0(\u_key_5/key_reg ), 
    .F1(\u_key_5/n23 ), .FCO(\u_key_5/n15698 ));
  u_key_5_SLICE_268 \u_key_5/SLICE_268 ( .A1(\u_key_5/delay_cnt_16 ), 
    .A0(\u_key_5/delay_cnt_15 ), .DI0(\u_key_5/n26 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15696 ), .F0(\u_key_5/n26 ), .Q0(\u_key_5/delay_cnt_15 ), 
    .F1(\u_key_5/n25 ), .FCO(\u_key_5/n15697 ));
  u_key_5_SLICE_269 \u_key_5/SLICE_269 ( .A1(\u_key_5/delay_cnt_14 ), 
    .A0(\u_key_5/delay_cnt_13 ), .DI0(\u_key_5/n28 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15695 ), .F0(\u_key_5/n28 ), .Q0(\u_key_5/delay_cnt_13 ), 
    .F1(\u_key_5/n27 ), .FCO(\u_key_5/n15696 ));
  u_key_5_SLICE_270 \u_key_5/SLICE_270 ( .A1(\u_key_5/delay_cnt_12 ), 
    .A0(\u_key_5/delay_cnt_11 ), .DI1(\u_key_5/n29 ), .DI0(\u_key_5/n30 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15694 ), .F0(\u_key_5/n30 ), .Q0(\u_key_5/delay_cnt_11 ), 
    .F1(\u_key_5/n29 ), .Q1(\u_key_5/delay_cnt_12 ), .FCO(\u_key_5/n15695 ));
  u_key_5_SLICE_271 \u_key_5/SLICE_271 ( .A1(\u_key_5/delay_cnt_10 ), 
    .A0(\u_key_5/delay_cnt_9 ), .DI1(\u_key_5/n31 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15693 ), .F0(\u_key_5/n32 ), .F1(\u_key_5/n31 ), 
    .Q1(\u_key_5/delay_cnt_10 ), .FCO(\u_key_5/n15694 ));
  u_key_5_SLICE_272 \u_key_5/SLICE_272 ( .A1(\u_key_5/delay_cnt_8 ), 
    .A0(\u_key_5/delay_cnt_7 ), .DI1(\u_key_5/n33 ), .DI0(\u_key_5/n34 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15692 ), .F0(\u_key_5/n34 ), .Q0(\u_key_5/delay_cnt_7 ), 
    .F1(\u_key_5/n33 ), .Q1(\u_key_5/delay_cnt_8 ), .FCO(\u_key_5/n15693 ));
  u_key_5_SLICE_273 \u_key_5/SLICE_273 ( .A1(\u_key_5/delay_cnt_6 ), 
    .A0(\u_key_5/delay_cnt_5 ), .DI0(\u_key_5/n36 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15691 ), .F0(\u_key_5/n36 ), .Q0(\u_key_5/delay_cnt_5 ), 
    .F1(\u_key_5/n35 ), .FCO(\u_key_5/n15692 ));
  u_key_5_SLICE_274 \u_key_5/SLICE_274 ( .A1(\u_key_5/delay_cnt_4 ), 
    .A0(\u_key_5/delay_cnt_3 ), .DI1(\u_key_5/n37 ), .DI0(\u_key_5/n38 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15690 ), .F0(\u_key_5/n38 ), .Q0(\u_key_5/delay_cnt_3 ), 
    .F1(\u_key_5/n37 ), .Q1(\u_key_5/delay_cnt_4 ), .FCO(\u_key_5/n15691 ));
  u_key_5_SLICE_275 \u_key_5/SLICE_275 ( .A1(\u_key_5/delay_cnt_2 ), 
    .A0(\u_key_5/delay_cnt_1 ), .DI1(\u_key_5/n39 ), .DI0(\u_key_5/n40 ), 
    .CE(\u_key_5/clk_N_168_enable_325 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .FCI(\u_key_5/n15689 ), .F0(\u_key_5/n40 ), .Q0(\u_key_5/delay_cnt_1 ), 
    .F1(\u_key_5/n39 ), .Q1(\u_key_5/delay_cnt_2 ), .FCO(\u_key_5/n15690 ));
  u_key_5_SLICE_276 \u_key_5/SLICE_276 ( .A1(\u_key_5/delay_cnt_0 ), 
    .M0(key_c_4), .CE(\u_key_5/key_flag_N_639 ), .CLK(clk), .Q0(key_value_4), 
    .F1(\u_key_5/n41 ), .FCO(\u_key_5/n15689 ));
  u_key_8_SLICE_277 \u_key_8/SLICE_277 ( .A0(\u_key_8/delay_cnt_31 ), 
    .DI0(\u_key_8/n10 ), .CE(\u_key_8/clk_N_168_enable_232 ), 
    .LSR(\u_key_8/n18795 ), .CLK(clk), .FCI(\u_key_8/n15656 ), 
    .F0(\u_key_8/n10 ), .Q0(\u_key_8/delay_cnt_31 ));
  u_key_8_SLICE_278 \u_key_8/SLICE_278 ( .A1(\u_key_8/delay_cnt_30 ), 
    .A0(\u_key_8/delay_cnt_29 ), .DI1(\u_key_8/n11 ), .DI0(\u_key_8/n12 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15655 ), .F0(\u_key_8/n12 ), .Q0(\u_key_8/delay_cnt_29 ), 
    .F1(\u_key_8/n11 ), .Q1(\u_key_8/delay_cnt_30 ), .FCO(\u_key_8/n15656 ));
  u_key_8_SLICE_279 \u_key_8/SLICE_279 ( .A1(\u_key_8/delay_cnt_28 ), 
    .A0(\u_key_8/delay_cnt_27 ), .DI1(\u_key_8/n13 ), .DI0(\u_key_8/n14 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15654 ), .F0(\u_key_8/n14 ), .Q0(\u_key_8/delay_cnt_27 ), 
    .F1(\u_key_8/n13 ), .Q1(\u_key_8/delay_cnt_28 ), .FCO(\u_key_8/n15655 ));
  u_key_8_SLICE_280 \u_key_8/SLICE_280 ( .A1(\u_key_8/delay_cnt_26 ), 
    .A0(\u_key_8/delay_cnt_25 ), .DI1(\u_key_8/n15 ), .DI0(\u_key_8/n16 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15653 ), .F0(\u_key_8/n16 ), .Q0(\u_key_8/delay_cnt_25 ), 
    .F1(\u_key_8/n15 ), .Q1(\u_key_8/delay_cnt_26 ), .FCO(\u_key_8/n15654 ));
  u_key_8_SLICE_281 \u_key_8/SLICE_281 ( .A1(\u_key_8/delay_cnt_24 ), 
    .A0(\u_key_8/delay_cnt_23 ), .DI1(\u_key_8/n17 ), .DI0(\u_key_8/n18 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15652 ), .F0(\u_key_8/n18 ), .Q0(\u_key_8/delay_cnt_23 ), 
    .F1(\u_key_8/n17 ), .Q1(\u_key_8/delay_cnt_24 ), .FCO(\u_key_8/n15653 ));
  u_key_8_SLICE_282 \u_key_8/SLICE_282 ( .A1(\u_key_8/delay_cnt_22 ), 
    .A0(\u_key_8/delay_cnt_21 ), .DI1(\u_key_8/n19 ), .DI0(\u_key_8/n20 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15651 ), .F0(\u_key_8/n20 ), .Q0(\u_key_8/delay_cnt_21 ), 
    .F1(\u_key_8/n19 ), .Q1(\u_key_8/delay_cnt_22 ), .FCO(\u_key_8/n15652 ));
  u_key_8_SLICE_283 \u_key_8/SLICE_283 ( .A1(\u_key_8/delay_cnt_20 ), 
    .A0(\u_key_8/delay_cnt_19 ), .DI1(\u_key_8/n21 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15650 ), .F0(\u_key_8/n22 ), .F1(\u_key_8/n21 ), 
    .Q1(\u_key_8/delay_cnt_20 ), .FCO(\u_key_8/n15651 ));
  u_key_8_SLICE_284 \u_key_8/SLICE_284 ( .A1(\u_key_8/delay_cnt_18 ), 
    .A0(\u_key_8/delay_cnt_17 ), .M0(key_c_7), .CLK(clk), 
    .FCI(\u_key_8/n15649 ), .F0(\u_key_8/n24 ), .Q0(\u_key_8/key_reg ), 
    .F1(\u_key_8/n23 ), .FCO(\u_key_8/n15650 ));
  u_key_8_SLICE_285 \u_key_8/SLICE_285 ( .A1(\u_key_8/delay_cnt_16 ), 
    .A0(\u_key_8/delay_cnt_15 ), .DI0(\u_key_8/n26 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15648 ), .F0(\u_key_8/n26 ), .Q0(\u_key_8/delay_cnt_15 ), 
    .F1(\u_key_8/n25 ), .FCO(\u_key_8/n15649 ));
  u_key_8_SLICE_286 \u_key_8/SLICE_286 ( .A1(\u_key_8/delay_cnt_14 ), 
    .A0(\u_key_8/delay_cnt_13 ), .DI0(\u_key_8/n28 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15647 ), .F0(\u_key_8/n28 ), .Q0(\u_key_8/delay_cnt_13 ), 
    .F1(\u_key_8/n27 ), .FCO(\u_key_8/n15648 ));
  u_key_8_SLICE_287 \u_key_8/SLICE_287 ( .A1(\u_key_8/delay_cnt_12 ), 
    .A0(\u_key_8/delay_cnt_11 ), .DI1(\u_key_8/n29 ), .DI0(\u_key_8/n30 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15646 ), .F0(\u_key_8/n30 ), .Q0(\u_key_8/delay_cnt_11 ), 
    .F1(\u_key_8/n29 ), .Q1(\u_key_8/delay_cnt_12 ), .FCO(\u_key_8/n15647 ));
  u_key_8_SLICE_288 \u_key_8/SLICE_288 ( .A1(\u_key_8/delay_cnt_10 ), 
    .A0(\u_key_8/delay_cnt_9 ), .DI1(\u_key_8/n31 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15645 ), .F0(\u_key_8/n32 ), .F1(\u_key_8/n31 ), 
    .Q1(\u_key_8/delay_cnt_10 ), .FCO(\u_key_8/n15646 ));
  u_key_8_SLICE_289 \u_key_8/SLICE_289 ( .A1(\u_key_8/delay_cnt_8 ), 
    .A0(\u_key_8/delay_cnt_7 ), .DI1(\u_key_8/n33 ), .DI0(\u_key_8/n34 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15644 ), .F0(\u_key_8/n34 ), .Q0(\u_key_8/delay_cnt_7 ), 
    .F1(\u_key_8/n33 ), .Q1(\u_key_8/delay_cnt_8 ), .FCO(\u_key_8/n15645 ));
  u_key_8_SLICE_290 \u_key_8/SLICE_290 ( .A1(\u_key_8/delay_cnt_6 ), 
    .A0(\u_key_8/delay_cnt_5 ), .DI0(\u_key_8/n36 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15643 ), .F0(\u_key_8/n36 ), .Q0(\u_key_8/delay_cnt_5 ), 
    .F1(\u_key_8/n35 ), .FCO(\u_key_8/n15644 ));
  u_key_8_SLICE_291 \u_key_8/SLICE_291 ( .A1(\u_key_8/delay_cnt_4 ), 
    .A0(\u_key_8/delay_cnt_3 ), .DI1(\u_key_8/n37 ), .DI0(\u_key_8/n38 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15642 ), .F0(\u_key_8/n38 ), .Q0(\u_key_8/delay_cnt_3 ), 
    .F1(\u_key_8/n37 ), .Q1(\u_key_8/delay_cnt_4 ), .FCO(\u_key_8/n15643 ));
  u_key_8_SLICE_292 \u_key_8/SLICE_292 ( .A1(\u_key_8/delay_cnt_2 ), 
    .A0(\u_key_8/delay_cnt_1 ), .DI1(\u_key_8/n39 ), .DI0(\u_key_8/n40 ), 
    .CE(\u_key_8/clk_N_168_enable_232 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .FCI(\u_key_8/n15641 ), .F0(\u_key_8/n40 ), .Q0(\u_key_8/delay_cnt_1 ), 
    .F1(\u_key_8/n39 ), .Q1(\u_key_8/delay_cnt_2 ), .FCO(\u_key_8/n15642 ));
  u_key_8_SLICE_293 \u_key_8/SLICE_293 ( .A1(\u_key_8/delay_cnt_0 ), 
    .M0(key_c_7), .CE(\u_key_8/key_flag_N_639 ), .CLK(clk), .Q0(key_value_7), 
    .F1(\u_key_8/n41 ), .FCO(\u_key_8/n15641 ));
  u_key_10_SLICE_294 \u_key_10/SLICE_294 ( .A1(\u_key_10/delay_cnt_12 ), 
    .A0(\u_key_10/delay_cnt_11 ), .DI1(\u_key_10/n29 ), .DI0(\u_key_10/n30 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15614 ), .F0(\u_key_10/n30 ), .Q0(\u_key_10/delay_cnt_11 ), 
    .F1(\u_key_10/n29 ), .Q1(\u_key_10/delay_cnt_12 ), .FCO(\u_key_10/n15615 ));
  u_key_10_SLICE_295 \u_key_10/SLICE_295 ( .A1(\u_key_10/delay_cnt_10 ), 
    .A0(\u_key_10/delay_cnt_9 ), .DI1(\u_key_10/n31 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15613 ), .F0(\u_key_10/n32 ), .F1(\u_key_10/n31 ), 
    .Q1(\u_key_10/delay_cnt_10 ), .FCO(\u_key_10/n15614 ));
  u_key_10_SLICE_296 \u_key_10/SLICE_296 ( .A1(\u_key_10/delay_cnt_8 ), 
    .A0(\u_key_10/delay_cnt_7 ), .DI1(\u_key_10/n33 ), .DI0(\u_key_10/n34 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15612 ), .F0(\u_key_10/n34 ), .Q0(\u_key_10/delay_cnt_7 ), 
    .F1(\u_key_10/n33 ), .Q1(\u_key_10/delay_cnt_8 ), .FCO(\u_key_10/n15613 ));
  u_key_10_SLICE_297 \u_key_10/SLICE_297 ( .A1(\u_key_10/delay_cnt_6 ), 
    .A0(\u_key_10/delay_cnt_5 ), .DI0(\u_key_10/n36 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15611 ), .F0(\u_key_10/n36 ), .Q0(\u_key_10/delay_cnt_5 ), 
    .F1(\u_key_10/n35 ), .FCO(\u_key_10/n15612 ));
  u_key_10_SLICE_298 \u_key_10/SLICE_298 ( .A1(\u_key_10/delay_cnt_4 ), 
    .A0(\u_key_10/delay_cnt_3 ), .DI1(\u_key_10/n37 ), .DI0(\u_key_10/n38 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15610 ), .F0(\u_key_10/n38 ), .Q0(\u_key_10/delay_cnt_3 ), 
    .F1(\u_key_10/n37 ), .Q1(\u_key_10/delay_cnt_4 ), .FCO(\u_key_10/n15611 ));
  u_key_10_SLICE_299 \u_key_10/SLICE_299 ( .A1(\u_key_10/delay_cnt_2 ), 
    .A0(\u_key_10/delay_cnt_1 ), .DI1(\u_key_10/n39 ), .DI0(\u_key_10/n40 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15609 ), .F0(\u_key_10/n40 ), .Q0(\u_key_10/delay_cnt_1 ), 
    .F1(\u_key_10/n39 ), .Q1(\u_key_10/delay_cnt_2 ), .FCO(\u_key_10/n15610 ));
  u_key_10_SLICE_300 \u_key_10/SLICE_300 ( .A1(\u_key_10/delay_cnt_0 ), 
    .M0(key_c_9), .CE(\u_key_10/key_flag_N_639 ), .CLK(clk), .Q0(key_value_9), 
    .F1(\u_key_10/n41 ), .FCO(\u_key_10/n15609 ));
  u_key_10_SLICE_301 \u_key_10/SLICE_301 ( .A0(\u_key_10/delay_cnt_31 ), 
    .DI0(\u_key_10/n10 ), .CE(\u_key_10/clk_N_168_enable_170 ), 
    .LSR(\u_key_10/n18793 ), .CLK(clk), .FCI(\u_key_10/n15624 ), 
    .F0(\u_key_10/n10 ), .Q0(\u_key_10/delay_cnt_31 ));
  u_key_10_SLICE_302 \u_key_10/SLICE_302 ( .A1(\u_key_10/delay_cnt_30 ), 
    .A0(\u_key_10/delay_cnt_29 ), .DI1(\u_key_10/n11 ), .DI0(\u_key_10/n12 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15623 ), .F0(\u_key_10/n12 ), .Q0(\u_key_10/delay_cnt_29 ), 
    .F1(\u_key_10/n11 ), .Q1(\u_key_10/delay_cnt_30 ), .FCO(\u_key_10/n15624 ));
  u_key_10_SLICE_303 \u_key_10/SLICE_303 ( .A1(\u_key_10/delay_cnt_28 ), 
    .A0(\u_key_10/delay_cnt_27 ), .DI1(\u_key_10/n13 ), .DI0(\u_key_10/n14 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15622 ), .F0(\u_key_10/n14 ), .Q0(\u_key_10/delay_cnt_27 ), 
    .F1(\u_key_10/n13 ), .Q1(\u_key_10/delay_cnt_28 ), .FCO(\u_key_10/n15623 ));
  u_key_10_SLICE_304 \u_key_10/SLICE_304 ( .A1(\u_key_10/delay_cnt_26 ), 
    .A0(\u_key_10/delay_cnt_25 ), .DI1(\u_key_10/n15 ), .DI0(\u_key_10/n16 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15621 ), .F0(\u_key_10/n16 ), .Q0(\u_key_10/delay_cnt_25 ), 
    .F1(\u_key_10/n15 ), .Q1(\u_key_10/delay_cnt_26 ), .FCO(\u_key_10/n15622 ));
  u_key_10_SLICE_305 \u_key_10/SLICE_305 ( .A1(\u_key_10/delay_cnt_24 ), 
    .A0(\u_key_10/delay_cnt_23 ), .DI1(\u_key_10/n17 ), .DI0(\u_key_10/n18 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15620 ), .F0(\u_key_10/n18 ), .Q0(\u_key_10/delay_cnt_23 ), 
    .F1(\u_key_10/n17 ), .Q1(\u_key_10/delay_cnt_24 ), .FCO(\u_key_10/n15621 ));
  u_key_10_SLICE_306 \u_key_10/SLICE_306 ( .A1(\u_key_10/delay_cnt_22 ), 
    .A0(\u_key_10/delay_cnt_21 ), .DI1(\u_key_10/n19 ), .DI0(\u_key_10/n20 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15619 ), .F0(\u_key_10/n20 ), .Q0(\u_key_10/delay_cnt_21 ), 
    .F1(\u_key_10/n19 ), .Q1(\u_key_10/delay_cnt_22 ), .FCO(\u_key_10/n15620 ));
  u_key_10_SLICE_307 \u_key_10/SLICE_307 ( .A1(\u_key_10/delay_cnt_20 ), 
    .A0(\u_key_10/delay_cnt_19 ), .DI1(\u_key_10/n21 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15618 ), .F0(\u_key_10/n22 ), .F1(\u_key_10/n21 ), 
    .Q1(\u_key_10/delay_cnt_20 ), .FCO(\u_key_10/n15619 ));
  u_key_10_SLICE_308 \u_key_10/SLICE_308 ( .A1(\u_key_10/delay_cnt_18 ), 
    .A0(\u_key_10/delay_cnt_17 ), .M0(key_c_9), .CLK(clk), 
    .FCI(\u_key_10/n15617 ), .F0(\u_key_10/n24 ), .Q0(\u_key_10/key_reg ), 
    .F1(\u_key_10/n23 ), .FCO(\u_key_10/n15618 ));
  u_key_10_SLICE_309 \u_key_10/SLICE_309 ( .A1(\u_key_10/delay_cnt_16 ), 
    .A0(\u_key_10/delay_cnt_15 ), .DI0(\u_key_10/n26 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15616 ), .F0(\u_key_10/n26 ), .Q0(\u_key_10/delay_cnt_15 ), 
    .F1(\u_key_10/n25 ), .FCO(\u_key_10/n15617 ));
  u_key_10_SLICE_310 \u_key_10/SLICE_310 ( .A1(\u_key_10/delay_cnt_14 ), 
    .A0(\u_key_10/delay_cnt_13 ), .DI0(\u_key_10/n28 ), 
    .CE(\u_key_10/clk_N_168_enable_170 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .FCI(\u_key_10/n15615 ), .F0(\u_key_10/n28 ), .Q0(\u_key_10/delay_cnt_13 ), 
    .F1(\u_key_10/n27 ), .FCO(\u_key_10/n15616 ));
  u_key_11_SLICE_311 \u_key_11/SLICE_311 ( .A0(\u_key_11/delay_cnt_31 ), 
    .DI0(\u_key_11/n10 ), .CE(\u_key_11/clk_N_168_enable_139 ), 
    .LSR(\u_key_11/n18792 ), .CLK(clk), .FCI(\u_key_11/n15608 ), 
    .F0(\u_key_11/n10 ), .Q0(\u_key_11/delay_cnt_31 ));
  u_key_11_SLICE_312 \u_key_11/SLICE_312 ( .A1(\u_key_11/delay_cnt_30 ), 
    .A0(\u_key_11/delay_cnt_29 ), .DI1(\u_key_11/n11 ), .DI0(\u_key_11/n12 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15607 ), .F0(\u_key_11/n12 ), .Q0(\u_key_11/delay_cnt_29 ), 
    .F1(\u_key_11/n11 ), .Q1(\u_key_11/delay_cnt_30 ), .FCO(\u_key_11/n15608 ));
  u_key_11_SLICE_313 \u_key_11/SLICE_313 ( .A1(\u_key_11/delay_cnt_28 ), 
    .A0(\u_key_11/delay_cnt_27 ), .DI1(\u_key_11/n13 ), .DI0(\u_key_11/n14 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15606 ), .F0(\u_key_11/n14 ), .Q0(\u_key_11/delay_cnt_27 ), 
    .F1(\u_key_11/n13 ), .Q1(\u_key_11/delay_cnt_28 ), .FCO(\u_key_11/n15607 ));
  u_key_11_SLICE_314 \u_key_11/SLICE_314 ( .A1(\u_key_11/delay_cnt_26 ), 
    .A0(\u_key_11/delay_cnt_25 ), .DI1(\u_key_11/n15 ), .DI0(\u_key_11/n16 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15605 ), .F0(\u_key_11/n16 ), .Q0(\u_key_11/delay_cnt_25 ), 
    .F1(\u_key_11/n15 ), .Q1(\u_key_11/delay_cnt_26 ), .FCO(\u_key_11/n15606 ));
  u_key_11_SLICE_315 \u_key_11/SLICE_315 ( .A1(\u_key_11/delay_cnt_24 ), 
    .A0(\u_key_11/delay_cnt_23 ), .DI1(\u_key_11/n17 ), .DI0(\u_key_11/n18 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15604 ), .F0(\u_key_11/n18 ), .Q0(\u_key_11/delay_cnt_23 ), 
    .F1(\u_key_11/n17 ), .Q1(\u_key_11/delay_cnt_24 ), .FCO(\u_key_11/n15605 ));
  u_key_11_SLICE_316 \u_key_11/SLICE_316 ( .A1(\u_key_11/delay_cnt_22 ), 
    .A0(\u_key_11/delay_cnt_21 ), .DI1(\u_key_11/n19 ), .DI0(\u_key_11/n20 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15603 ), .F0(\u_key_11/n20 ), .Q0(\u_key_11/delay_cnt_21 ), 
    .F1(\u_key_11/n19 ), .Q1(\u_key_11/delay_cnt_22 ), .FCO(\u_key_11/n15604 ));
  u_key_11_SLICE_317 \u_key_11/SLICE_317 ( .A1(\u_key_11/delay_cnt_20 ), 
    .A0(\u_key_11/delay_cnt_19 ), .DI1(\u_key_11/n21 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15602 ), .F0(\u_key_11/n22 ), .F1(\u_key_11/n21 ), 
    .Q1(\u_key_11/delay_cnt_20 ), .FCO(\u_key_11/n15603 ));
  u_key_11_SLICE_318 \u_key_11/SLICE_318 ( .A1(\u_key_11/delay_cnt_18 ), 
    .A0(\u_key_11/delay_cnt_17 ), .M0(key_c_10), .CLK(clk), 
    .FCI(\u_key_11/n15601 ), .F0(\u_key_11/n24 ), .Q0(\u_key_11/key_reg ), 
    .F1(\u_key_11/n23 ), .FCO(\u_key_11/n15602 ));
  u_key_11_SLICE_319 \u_key_11/SLICE_319 ( .A1(\u_key_11/delay_cnt_16 ), 
    .A0(\u_key_11/delay_cnt_15 ), .DI0(\u_key_11/n26 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15600 ), .F0(\u_key_11/n26 ), .Q0(\u_key_11/delay_cnt_15 ), 
    .F1(\u_key_11/n25 ), .FCO(\u_key_11/n15601 ));
  u_key_11_SLICE_320 \u_key_11/SLICE_320 ( .A1(\u_key_11/delay_cnt_14 ), 
    .A0(\u_key_11/delay_cnt_13 ), .DI0(\u_key_11/n28 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15599 ), .F0(\u_key_11/n28 ), .Q0(\u_key_11/delay_cnt_13 ), 
    .F1(\u_key_11/n27 ), .FCO(\u_key_11/n15600 ));
  u_key_11_SLICE_321 \u_key_11/SLICE_321 ( .A1(\u_key_11/delay_cnt_12 ), 
    .A0(\u_key_11/delay_cnt_11 ), .DI1(\u_key_11/n29 ), .DI0(\u_key_11/n30 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15598 ), .F0(\u_key_11/n30 ), .Q0(\u_key_11/delay_cnt_11 ), 
    .F1(\u_key_11/n29 ), .Q1(\u_key_11/delay_cnt_12 ), .FCO(\u_key_11/n15599 ));
  u_key_11_SLICE_322 \u_key_11/SLICE_322 ( .A1(\u_key_11/delay_cnt_10 ), 
    .A0(\u_key_11/delay_cnt_9 ), .DI1(\u_key_11/n31 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15597 ), .F0(\u_key_11/n32 ), .F1(\u_key_11/n31 ), 
    .Q1(\u_key_11/delay_cnt_10 ), .FCO(\u_key_11/n15598 ));
  u_key_11_SLICE_323 \u_key_11/SLICE_323 ( .A1(\u_key_11/delay_cnt_8 ), 
    .A0(\u_key_11/delay_cnt_7 ), .DI1(\u_key_11/n33 ), .DI0(\u_key_11/n34 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15596 ), .F0(\u_key_11/n34 ), .Q0(\u_key_11/delay_cnt_7 ), 
    .F1(\u_key_11/n33 ), .Q1(\u_key_11/delay_cnt_8 ), .FCO(\u_key_11/n15597 ));
  u_key_11_SLICE_324 \u_key_11/SLICE_324 ( .A1(\u_key_11/delay_cnt_6 ), 
    .A0(\u_key_11/delay_cnt_5 ), .DI0(\u_key_11/n36 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15595 ), .F0(\u_key_11/n36 ), .Q0(\u_key_11/delay_cnt_5 ), 
    .F1(\u_key_11/n35 ), .FCO(\u_key_11/n15596 ));
  u_key_11_SLICE_325 \u_key_11/SLICE_325 ( .A1(\u_key_11/delay_cnt_4 ), 
    .A0(\u_key_11/delay_cnt_3 ), .DI1(\u_key_11/n37 ), .DI0(\u_key_11/n38 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15594 ), .F0(\u_key_11/n38 ), .Q0(\u_key_11/delay_cnt_3 ), 
    .F1(\u_key_11/n37 ), .Q1(\u_key_11/delay_cnt_4 ), .FCO(\u_key_11/n15595 ));
  u_key_11_SLICE_326 \u_key_11/SLICE_326 ( .A1(\u_key_11/delay_cnt_2 ), 
    .A0(\u_key_11/delay_cnt_1 ), .DI1(\u_key_11/n39 ), .DI0(\u_key_11/n40 ), 
    .CE(\u_key_11/clk_N_168_enable_139 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .FCI(\u_key_11/n15593 ), .F0(\u_key_11/n40 ), .Q0(\u_key_11/delay_cnt_1 ), 
    .F1(\u_key_11/n39 ), .Q1(\u_key_11/delay_cnt_2 ), .FCO(\u_key_11/n15594 ));
  u_key_11_SLICE_327 \u_key_11/SLICE_327 ( .A1(\u_key_11/delay_cnt_0 ), 
    .M0(key_c_10), .CE(\u_key_11/key_flag_N_639 ), .CLK(clk), 
    .Q0(key_value_10), .F1(\u_key_11/n41 ), .FCO(\u_key_11/n15593 ));
  u_key_12_SLICE_328 \u_key_12/SLICE_328 ( .A0(\u_key_12/delay_cnt_31 ), 
    .DI0(\u_key_12/n10 ), .CE(\u_key_12/clk_N_168_enable_108 ), 
    .LSR(\u_key_12/n18791 ), .CLK(clk), .FCI(\u_key_12/n15592 ), 
    .F0(\u_key_12/n10 ), .Q0(\u_key_12/delay_cnt_31 ));
  u_key_12_SLICE_329 \u_key_12/SLICE_329 ( .A1(\u_key_12/delay_cnt_30 ), 
    .A0(\u_key_12/delay_cnt_29 ), .DI1(\u_key_12/n11 ), .DI0(\u_key_12/n12 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15591 ), .F0(\u_key_12/n12 ), .Q0(\u_key_12/delay_cnt_29 ), 
    .F1(\u_key_12/n11 ), .Q1(\u_key_12/delay_cnt_30 ), .FCO(\u_key_12/n15592 ));
  u_key_12_SLICE_330 \u_key_12/SLICE_330 ( .A1(\u_key_12/delay_cnt_28 ), 
    .A0(\u_key_12/delay_cnt_27 ), .DI1(\u_key_12/n13 ), .DI0(\u_key_12/n14 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15590 ), .F0(\u_key_12/n14 ), .Q0(\u_key_12/delay_cnt_27 ), 
    .F1(\u_key_12/n13 ), .Q1(\u_key_12/delay_cnt_28 ), .FCO(\u_key_12/n15591 ));
  u_key_12_SLICE_331 \u_key_12/SLICE_331 ( .A1(\u_key_12/delay_cnt_26 ), 
    .A0(\u_key_12/delay_cnt_25 ), .DI1(\u_key_12/n15 ), .DI0(\u_key_12/n16 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15589 ), .F0(\u_key_12/n16 ), .Q0(\u_key_12/delay_cnt_25 ), 
    .F1(\u_key_12/n15 ), .Q1(\u_key_12/delay_cnt_26 ), .FCO(\u_key_12/n15590 ));
  u_key_12_SLICE_332 \u_key_12/SLICE_332 ( .A1(\u_key_12/delay_cnt_24 ), 
    .A0(\u_key_12/delay_cnt_23 ), .DI1(\u_key_12/n17 ), .DI0(\u_key_12/n18 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15588 ), .F0(\u_key_12/n18 ), .Q0(\u_key_12/delay_cnt_23 ), 
    .F1(\u_key_12/n17 ), .Q1(\u_key_12/delay_cnt_24 ), .FCO(\u_key_12/n15589 ));
  u_key_12_SLICE_333 \u_key_12/SLICE_333 ( .A1(\u_key_12/delay_cnt_22 ), 
    .A0(\u_key_12/delay_cnt_21 ), .DI1(\u_key_12/n19 ), .DI0(\u_key_12/n20 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15587 ), .F0(\u_key_12/n20 ), .Q0(\u_key_12/delay_cnt_21 ), 
    .F1(\u_key_12/n19 ), .Q1(\u_key_12/delay_cnt_22 ), .FCO(\u_key_12/n15588 ));
  u_key_12_SLICE_334 \u_key_12/SLICE_334 ( .A1(\u_key_12/delay_cnt_20 ), 
    .A0(\u_key_12/delay_cnt_19 ), .DI1(\u_key_12/n21 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15586 ), .F0(\u_key_12/n22 ), .F1(\u_key_12/n21 ), 
    .Q1(\u_key_12/delay_cnt_20 ), .FCO(\u_key_12/n15587 ));
  u_key_12_SLICE_335 \u_key_12/SLICE_335 ( .A1(\u_key_12/delay_cnt_18 ), 
    .A0(\u_key_12/delay_cnt_17 ), .M0(key_c_11), .CLK(clk), 
    .FCI(\u_key_12/n15585 ), .F0(\u_key_12/n24 ), .Q0(\u_key_12/key_reg ), 
    .F1(\u_key_12/n23 ), .FCO(\u_key_12/n15586 ));
  u_key_12_SLICE_336 \u_key_12/SLICE_336 ( .A1(\u_key_12/delay_cnt_16 ), 
    .A0(\u_key_12/delay_cnt_15 ), .DI0(\u_key_12/n26 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15584 ), .F0(\u_key_12/n26 ), .Q0(\u_key_12/delay_cnt_15 ), 
    .F1(\u_key_12/n25 ), .FCO(\u_key_12/n15585 ));
  u_key_12_SLICE_337 \u_key_12/SLICE_337 ( .A1(\u_key_12/delay_cnt_14 ), 
    .A0(\u_key_12/delay_cnt_13 ), .DI0(\u_key_12/n28 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15583 ), .F0(\u_key_12/n28 ), .Q0(\u_key_12/delay_cnt_13 ), 
    .F1(\u_key_12/n27 ), .FCO(\u_key_12/n15584 ));
  u_key_12_SLICE_338 \u_key_12/SLICE_338 ( .A1(\u_key_12/delay_cnt_12 ), 
    .A0(\u_key_12/delay_cnt_11 ), .DI1(\u_key_12/n29 ), .DI0(\u_key_12/n30 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15582 ), .F0(\u_key_12/n30 ), .Q0(\u_key_12/delay_cnt_11 ), 
    .F1(\u_key_12/n29 ), .Q1(\u_key_12/delay_cnt_12 ), .FCO(\u_key_12/n15583 ));
  u_key_12_SLICE_339 \u_key_12/SLICE_339 ( .A1(\u_key_12/delay_cnt_10 ), 
    .A0(\u_key_12/delay_cnt_9 ), .DI1(\u_key_12/n31 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15581 ), .F0(\u_key_12/n32 ), .F1(\u_key_12/n31 ), 
    .Q1(\u_key_12/delay_cnt_10 ), .FCO(\u_key_12/n15582 ));
  u_key_12_SLICE_340 \u_key_12/SLICE_340 ( .A1(\u_key_12/delay_cnt_8 ), 
    .A0(\u_key_12/delay_cnt_7 ), .DI1(\u_key_12/n33 ), .DI0(\u_key_12/n34 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15580 ), .F0(\u_key_12/n34 ), .Q0(\u_key_12/delay_cnt_7 ), 
    .F1(\u_key_12/n33 ), .Q1(\u_key_12/delay_cnt_8 ), .FCO(\u_key_12/n15581 ));
  u_key_12_SLICE_341 \u_key_12/SLICE_341 ( .A1(\u_key_12/delay_cnt_6 ), 
    .A0(\u_key_12/delay_cnt_5 ), .DI0(\u_key_12/n36 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15579 ), .F0(\u_key_12/n36 ), .Q0(\u_key_12/delay_cnt_5 ), 
    .F1(\u_key_12/n35 ), .FCO(\u_key_12/n15580 ));
  u_key_12_SLICE_342 \u_key_12/SLICE_342 ( .A1(\u_key_12/delay_cnt_4 ), 
    .A0(\u_key_12/delay_cnt_3 ), .DI1(\u_key_12/n37 ), .DI0(\u_key_12/n38 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15578 ), .F0(\u_key_12/n38 ), .Q0(\u_key_12/delay_cnt_3 ), 
    .F1(\u_key_12/n37 ), .Q1(\u_key_12/delay_cnt_4 ), .FCO(\u_key_12/n15579 ));
  u_key_12_SLICE_343 \u_key_12/SLICE_343 ( .A1(\u_key_12/delay_cnt_2 ), 
    .A0(\u_key_12/delay_cnt_1 ), .DI1(\u_key_12/n39 ), .DI0(\u_key_12/n40 ), 
    .CE(\u_key_12/clk_N_168_enable_108 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .FCI(\u_key_12/n15577 ), .F0(\u_key_12/n40 ), .Q0(\u_key_12/delay_cnt_1 ), 
    .F1(\u_key_12/n39 ), .Q1(\u_key_12/delay_cnt_2 ), .FCO(\u_key_12/n15578 ));
  u_key_12_SLICE_344 \u_key_12/SLICE_344 ( .A1(\u_key_12/delay_cnt_0 ), 
    .M0(key_c_11), .CE(\u_key_12/key_flag_N_639 ), .CLK(clk), 
    .Q0(key_value_11), .F1(\u_key_12/n41 ), .FCO(\u_key_12/n15577 ));
  u_key_2_SLICE_345 \u_key_2/SLICE_345 ( .A0(\u_key_2/delay_cnt_31 ), 
    .DI0(\u_key_2/n10 ), .CE(\u_key_2/clk_N_168_enable_419 ), 
    .LSR(\u_key_2/n18801 ), .CLK(clk), .FCI(\u_key_2/n15363 ), 
    .F0(\u_key_2/n10 ), .Q0(\u_key_2/delay_cnt_31 ));
  u_key_2_SLICE_346 \u_key_2/SLICE_346 ( .A1(\u_key_2/delay_cnt_30 ), 
    .A0(\u_key_2/delay_cnt_29 ), .DI1(\u_key_2/n11 ), .DI0(\u_key_2/n12 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15362 ), .F0(\u_key_2/n12 ), .Q0(\u_key_2/delay_cnt_29 ), 
    .F1(\u_key_2/n11 ), .Q1(\u_key_2/delay_cnt_30 ), .FCO(\u_key_2/n15363 ));
  u_key_2_SLICE_347 \u_key_2/SLICE_347 ( .A1(\u_key_2/delay_cnt_28 ), 
    .A0(\u_key_2/delay_cnt_27 ), .DI1(\u_key_2/n13 ), .DI0(\u_key_2/n14 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15361 ), .F0(\u_key_2/n14 ), .Q0(\u_key_2/delay_cnt_27 ), 
    .F1(\u_key_2/n13 ), .Q1(\u_key_2/delay_cnt_28 ), .FCO(\u_key_2/n15362 ));
  u_key_2_SLICE_348 \u_key_2/SLICE_348 ( .A1(\u_key_2/delay_cnt_26 ), 
    .A0(\u_key_2/delay_cnt_25 ), .DI1(\u_key_2/n15 ), .DI0(\u_key_2/n16 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15360 ), .F0(\u_key_2/n16 ), .Q0(\u_key_2/delay_cnt_25 ), 
    .F1(\u_key_2/n15 ), .Q1(\u_key_2/delay_cnt_26 ), .FCO(\u_key_2/n15361 ));
  u_key_2_SLICE_349 \u_key_2/SLICE_349 ( .A1(\u_key_2/delay_cnt_24 ), 
    .A0(\u_key_2/delay_cnt_23 ), .DI1(\u_key_2/n17 ), .DI0(\u_key_2/n18 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15359 ), .F0(\u_key_2/n18 ), .Q0(\u_key_2/delay_cnt_23 ), 
    .F1(\u_key_2/n17 ), .Q1(\u_key_2/delay_cnt_24 ), .FCO(\u_key_2/n15360 ));
  u_key_2_SLICE_350 \u_key_2/SLICE_350 ( .A1(\u_key_2/delay_cnt_22 ), 
    .A0(\u_key_2/delay_cnt_21 ), .DI1(\u_key_2/n19 ), .DI0(\u_key_2/n20 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15358 ), .F0(\u_key_2/n20 ), .Q0(\u_key_2/delay_cnt_21 ), 
    .F1(\u_key_2/n19 ), .Q1(\u_key_2/delay_cnt_22 ), .FCO(\u_key_2/n15359 ));
  u_key_2_SLICE_351 \u_key_2/SLICE_351 ( .A1(\u_key_2/delay_cnt_20 ), 
    .A0(\u_key_2/delay_cnt_19 ), .DI1(\u_key_2/n21 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15357 ), .F0(\u_key_2/n22 ), .F1(\u_key_2/n21 ), 
    .Q1(\u_key_2/delay_cnt_20 ), .FCO(\u_key_2/n15358 ));
  u_key_2_SLICE_352 \u_key_2/SLICE_352 ( .A1(\u_key_2/delay_cnt_18 ), 
    .A0(\u_key_2/delay_cnt_17 ), .M0(key_c_1), .CLK(clk), 
    .FCI(\u_key_2/n15356 ), .F0(\u_key_2/n24 ), .Q0(\u_key_2/key_reg ), 
    .F1(\u_key_2/n23 ), .FCO(\u_key_2/n15357 ));
  u_key_2_SLICE_353 \u_key_2/SLICE_353 ( .A1(\u_key_2/delay_cnt_16 ), 
    .A0(\u_key_2/delay_cnt_15 ), .DI0(\u_key_2/n26 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15355 ), .F0(\u_key_2/n26 ), .Q0(\u_key_2/delay_cnt_15 ), 
    .F1(\u_key_2/n25 ), .FCO(\u_key_2/n15356 ));
  u_key_2_SLICE_354 \u_key_2/SLICE_354 ( .A1(\u_key_2/delay_cnt_14 ), 
    .A0(\u_key_2/delay_cnt_13 ), .DI0(\u_key_2/n28 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15354 ), .F0(\u_key_2/n28 ), .Q0(\u_key_2/delay_cnt_13 ), 
    .F1(\u_key_2/n27 ), .FCO(\u_key_2/n15355 ));
  u_key_2_SLICE_355 \u_key_2/SLICE_355 ( .A1(\u_key_2/delay_cnt_12 ), 
    .A0(\u_key_2/delay_cnt_11 ), .DI1(\u_key_2/n29 ), .DI0(\u_key_2/n30 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15353 ), .F0(\u_key_2/n30 ), .Q0(\u_key_2/delay_cnt_11 ), 
    .F1(\u_key_2/n29 ), .Q1(\u_key_2/delay_cnt_12 ), .FCO(\u_key_2/n15354 ));
  u_key_2_SLICE_356 \u_key_2/SLICE_356 ( .A1(\u_key_2/delay_cnt_10 ), 
    .A0(\u_key_2/delay_cnt_9 ), .DI1(\u_key_2/n31 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15352 ), .F0(\u_key_2/n32 ), .F1(\u_key_2/n31 ), 
    .Q1(\u_key_2/delay_cnt_10 ), .FCO(\u_key_2/n15353 ));
  u_key_2_SLICE_357 \u_key_2/SLICE_357 ( .A1(\u_key_2/delay_cnt_8 ), 
    .A0(\u_key_2/delay_cnt_7 ), .DI1(\u_key_2/n33 ), .DI0(\u_key_2/n34 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15351 ), .F0(\u_key_2/n34 ), .Q0(\u_key_2/delay_cnt_7 ), 
    .F1(\u_key_2/n33 ), .Q1(\u_key_2/delay_cnt_8 ), .FCO(\u_key_2/n15352 ));
  u_key_2_SLICE_358 \u_key_2/SLICE_358 ( .A1(\u_key_2/delay_cnt_6 ), 
    .A0(\u_key_2/delay_cnt_5 ), .DI0(\u_key_2/n36 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15350 ), .F0(\u_key_2/n36 ), .Q0(\u_key_2/delay_cnt_5 ), 
    .F1(\u_key_2/n35 ), .FCO(\u_key_2/n15351 ));
  u_key_2_SLICE_359 \u_key_2/SLICE_359 ( .A1(\u_key_2/delay_cnt_4 ), 
    .A0(\u_key_2/delay_cnt_3 ), .DI1(\u_key_2/n37 ), .DI0(\u_key_2/n38 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15349 ), .F0(\u_key_2/n38 ), .Q0(\u_key_2/delay_cnt_3 ), 
    .F1(\u_key_2/n37 ), .Q1(\u_key_2/delay_cnt_4 ), .FCO(\u_key_2/n15350 ));
  u_key_2_SLICE_360 \u_key_2/SLICE_360 ( .A1(\u_key_2/delay_cnt_2 ), 
    .A0(\u_key_2/delay_cnt_1 ), .DI1(\u_key_2/n39 ), .DI0(\u_key_2/n40 ), 
    .CE(\u_key_2/clk_N_168_enable_419 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .FCI(\u_key_2/n15348 ), .F0(\u_key_2/n40 ), .Q0(\u_key_2/delay_cnt_1 ), 
    .F1(\u_key_2/n39 ), .Q1(\u_key_2/delay_cnt_2 ), .FCO(\u_key_2/n15349 ));
  u_key_2_SLICE_361 \u_key_2/SLICE_361 ( .A1(\u_key_2/delay_cnt_0 ), 
    .M0(key_c_1), .CE(\u_key_2/key_flag_N_639 ), .CLK(clk), .Q0(key_value_1), 
    .F1(\u_key_2/n41 ), .FCO(\u_key_2/n15348 ));
  u_key_13_SLICE_362 \u_key_13/SLICE_362 ( .A0(\u_key_13/delay_cnt_31 ), 
    .DI0(\u_key_13/n10 ), .CE(\u_key_13/clk_N_168_enable_77 ), 
    .LSR(\u_key_13/n18790 ), .CLK(clk), .FCI(\u_key_13/n15576 ), 
    .F0(\u_key_13/n10 ), .Q0(\u_key_13/delay_cnt_31 ));
  u_key_13_SLICE_363 \u_key_13/SLICE_363 ( .A1(\u_key_13/delay_cnt_30 ), 
    .A0(\u_key_13/delay_cnt_29 ), .DI1(\u_key_13/n11 ), .DI0(\u_key_13/n12 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15575 ), .F0(\u_key_13/n12 ), .Q0(\u_key_13/delay_cnt_29 ), 
    .F1(\u_key_13/n11 ), .Q1(\u_key_13/delay_cnt_30 ), .FCO(\u_key_13/n15576 ));
  u_key_13_SLICE_364 \u_key_13/SLICE_364 ( .A1(\u_key_13/delay_cnt_28 ), 
    .A0(\u_key_13/delay_cnt_27 ), .DI1(\u_key_13/n13 ), .DI0(\u_key_13/n14 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15574 ), .F0(\u_key_13/n14 ), .Q0(\u_key_13/delay_cnt_27 ), 
    .F1(\u_key_13/n13 ), .Q1(\u_key_13/delay_cnt_28 ), .FCO(\u_key_13/n15575 ));
  u_key_13_SLICE_365 \u_key_13/SLICE_365 ( .A1(\u_key_13/delay_cnt_26 ), 
    .A0(\u_key_13/delay_cnt_25 ), .DI1(\u_key_13/n15 ), .DI0(\u_key_13/n16 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15573 ), .F0(\u_key_13/n16 ), .Q0(\u_key_13/delay_cnt_25 ), 
    .F1(\u_key_13/n15 ), .Q1(\u_key_13/delay_cnt_26 ), .FCO(\u_key_13/n15574 ));
  u_key_13_SLICE_366 \u_key_13/SLICE_366 ( .A1(\u_key_13/delay_cnt_24 ), 
    .A0(\u_key_13/delay_cnt_23 ), .DI1(\u_key_13/n17 ), .DI0(\u_key_13/n18 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15572 ), .F0(\u_key_13/n18 ), .Q0(\u_key_13/delay_cnt_23 ), 
    .F1(\u_key_13/n17 ), .Q1(\u_key_13/delay_cnt_24 ), .FCO(\u_key_13/n15573 ));
  u_key_13_SLICE_367 \u_key_13/SLICE_367 ( .A1(\u_key_13/delay_cnt_22 ), 
    .A0(\u_key_13/delay_cnt_21 ), .DI1(\u_key_13/n19 ), .DI0(\u_key_13/n20 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15571 ), .F0(\u_key_13/n20 ), .Q0(\u_key_13/delay_cnt_21 ), 
    .F1(\u_key_13/n19 ), .Q1(\u_key_13/delay_cnt_22 ), .FCO(\u_key_13/n15572 ));
  u_key_13_SLICE_368 \u_key_13/SLICE_368 ( .A1(\u_key_13/delay_cnt_20 ), 
    .A0(\u_key_13/delay_cnt_19 ), .DI1(\u_key_13/n21 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15570 ), .F0(\u_key_13/n22 ), .F1(\u_key_13/n21 ), 
    .Q1(\u_key_13/delay_cnt_20 ), .FCO(\u_key_13/n15571 ));
  u_key_13_SLICE_369 \u_key_13/SLICE_369 ( .A1(\u_key_13/delay_cnt_18 ), 
    .A0(\u_key_13/delay_cnt_17 ), .M0(key_c_12), .CLK(clk), 
    .FCI(\u_key_13/n15569 ), .F0(\u_key_13/n24 ), .Q0(\u_key_13/key_reg ), 
    .F1(\u_key_13/n23 ), .FCO(\u_key_13/n15570 ));
  u_key_13_SLICE_370 \u_key_13/SLICE_370 ( .A1(\u_key_13/delay_cnt_16 ), 
    .A0(\u_key_13/delay_cnt_15 ), .DI0(\u_key_13/n26 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15568 ), .F0(\u_key_13/n26 ), .Q0(\u_key_13/delay_cnt_15 ), 
    .F1(\u_key_13/n25 ), .FCO(\u_key_13/n15569 ));
  u_key_13_SLICE_371 \u_key_13/SLICE_371 ( .A1(\u_key_13/delay_cnt_14 ), 
    .A0(\u_key_13/delay_cnt_13 ), .DI0(\u_key_13/n28 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15567 ), .F0(\u_key_13/n28 ), .Q0(\u_key_13/delay_cnt_13 ), 
    .F1(\u_key_13/n27 ), .FCO(\u_key_13/n15568 ));
  u_key_13_SLICE_372 \u_key_13/SLICE_372 ( .A1(\u_key_13/delay_cnt_12 ), 
    .A0(\u_key_13/delay_cnt_11 ), .DI1(\u_key_13/n29 ), .DI0(\u_key_13/n30 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15566 ), .F0(\u_key_13/n30 ), .Q0(\u_key_13/delay_cnt_11 ), 
    .F1(\u_key_13/n29 ), .Q1(\u_key_13/delay_cnt_12 ), .FCO(\u_key_13/n15567 ));
  u_key_13_SLICE_373 \u_key_13/SLICE_373 ( .A1(\u_key_13/delay_cnt_10 ), 
    .A0(\u_key_13/delay_cnt_9 ), .DI1(\u_key_13/n31 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15565 ), .F0(\u_key_13/n32 ), .F1(\u_key_13/n31 ), 
    .Q1(\u_key_13/delay_cnt_10 ), .FCO(\u_key_13/n15566 ));
  u_key_13_SLICE_374 \u_key_13/SLICE_374 ( .A1(\u_key_13/delay_cnt_8 ), 
    .A0(\u_key_13/delay_cnt_7 ), .DI1(\u_key_13/n33 ), .DI0(\u_key_13/n34 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15564 ), .F0(\u_key_13/n34 ), .Q0(\u_key_13/delay_cnt_7 ), 
    .F1(\u_key_13/n33 ), .Q1(\u_key_13/delay_cnt_8 ), .FCO(\u_key_13/n15565 ));
  u_key_13_SLICE_375 \u_key_13/SLICE_375 ( .A1(\u_key_13/delay_cnt_6 ), 
    .A0(\u_key_13/delay_cnt_5 ), .DI0(\u_key_13/n36 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15563 ), .F0(\u_key_13/n36 ), .Q0(\u_key_13/delay_cnt_5 ), 
    .F1(\u_key_13/n35 ), .FCO(\u_key_13/n15564 ));
  u_key_13_SLICE_376 \u_key_13/SLICE_376 ( .A1(\u_key_13/delay_cnt_4 ), 
    .A0(\u_key_13/delay_cnt_3 ), .DI1(\u_key_13/n37 ), .DI0(\u_key_13/n38 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15562 ), .F0(\u_key_13/n38 ), .Q0(\u_key_13/delay_cnt_3 ), 
    .F1(\u_key_13/n37 ), .Q1(\u_key_13/delay_cnt_4 ), .FCO(\u_key_13/n15563 ));
  u_key_13_SLICE_377 \u_key_13/SLICE_377 ( .A1(\u_key_13/delay_cnt_2 ), 
    .A0(\u_key_13/delay_cnt_1 ), .DI1(\u_key_13/n39 ), .DI0(\u_key_13/n40 ), 
    .CE(\u_key_13/clk_N_168_enable_77 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .FCI(\u_key_13/n15561 ), .F0(\u_key_13/n40 ), .Q0(\u_key_13/delay_cnt_1 ), 
    .F1(\u_key_13/n39 ), .Q1(\u_key_13/delay_cnt_2 ), .FCO(\u_key_13/n15562 ));
  u_key_13_SLICE_378 \u_key_13/SLICE_378 ( .A1(\u_key_13/delay_cnt_0 ), 
    .M0(key_c_12), .CE(\u_key_13/key_flag_N_639 ), .CLK(clk), 
    .Q0(key_value_12), .F1(\u_key_13/n41 ), .FCO(\u_key_13/n15561 ));
  u_key_9_SLICE_379 \u_key_9/SLICE_379 ( .A0(\u_key_9/delay_cnt_31 ), 
    .DI0(\u_key_9/n10 ), .CE(\u_key_9/clk_N_168_enable_201 ), 
    .LSR(\u_key_9/n18794 ), .CLK(clk), .FCI(\u_key_9/n15640 ), 
    .F0(\u_key_9/n10 ), .Q0(\u_key_9/delay_cnt_31 ));
  u_key_9_SLICE_380 \u_key_9/SLICE_380 ( .A1(\u_key_9/delay_cnt_30 ), 
    .A0(\u_key_9/delay_cnt_29 ), .DI1(\u_key_9/n11 ), .DI0(\u_key_9/n12 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15639 ), .F0(\u_key_9/n12 ), .Q0(\u_key_9/delay_cnt_29 ), 
    .F1(\u_key_9/n11 ), .Q1(\u_key_9/delay_cnt_30 ), .FCO(\u_key_9/n15640 ));
  u_key_9_SLICE_381 \u_key_9/SLICE_381 ( .A1(\u_key_9/delay_cnt_28 ), 
    .A0(\u_key_9/delay_cnt_27 ), .DI1(\u_key_9/n13 ), .DI0(\u_key_9/n14 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15638 ), .F0(\u_key_9/n14 ), .Q0(\u_key_9/delay_cnt_27 ), 
    .F1(\u_key_9/n13 ), .Q1(\u_key_9/delay_cnt_28 ), .FCO(\u_key_9/n15639 ));
  u_key_9_SLICE_382 \u_key_9/SLICE_382 ( .A1(\u_key_9/delay_cnt_26 ), 
    .A0(\u_key_9/delay_cnt_25 ), .DI1(\u_key_9/n15 ), .DI0(\u_key_9/n16 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15637 ), .F0(\u_key_9/n16 ), .Q0(\u_key_9/delay_cnt_25 ), 
    .F1(\u_key_9/n15 ), .Q1(\u_key_9/delay_cnt_26 ), .FCO(\u_key_9/n15638 ));
  u_key_9_SLICE_383 \u_key_9/SLICE_383 ( .A1(\u_key_9/delay_cnt_24 ), 
    .A0(\u_key_9/delay_cnt_23 ), .DI1(\u_key_9/n17 ), .DI0(\u_key_9/n18 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15636 ), .F0(\u_key_9/n18 ), .Q0(\u_key_9/delay_cnt_23 ), 
    .F1(\u_key_9/n17 ), .Q1(\u_key_9/delay_cnt_24 ), .FCO(\u_key_9/n15637 ));
  u_key_9_SLICE_384 \u_key_9/SLICE_384 ( .A1(\u_key_9/delay_cnt_22 ), 
    .A0(\u_key_9/delay_cnt_21 ), .DI1(\u_key_9/n19 ), .DI0(\u_key_9/n20 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15635 ), .F0(\u_key_9/n20 ), .Q0(\u_key_9/delay_cnt_21 ), 
    .F1(\u_key_9/n19 ), .Q1(\u_key_9/delay_cnt_22 ), .FCO(\u_key_9/n15636 ));
  u_key_9_SLICE_385 \u_key_9/SLICE_385 ( .A1(\u_key_9/delay_cnt_20 ), 
    .A0(\u_key_9/delay_cnt_19 ), .DI1(\u_key_9/n21 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15634 ), .F0(\u_key_9/n22 ), .F1(\u_key_9/n21 ), 
    .Q1(\u_key_9/delay_cnt_20 ), .FCO(\u_key_9/n15635 ));
  u_key_9_SLICE_386 \u_key_9/SLICE_386 ( .A1(\u_key_9/delay_cnt_18 ), 
    .A0(\u_key_9/delay_cnt_17 ), .M0(key_c_8), .CLK(clk), 
    .FCI(\u_key_9/n15633 ), .F0(\u_key_9/n24 ), .Q0(\u_key_9/key_reg ), 
    .F1(\u_key_9/n23 ), .FCO(\u_key_9/n15634 ));
  u_key_9_SLICE_387 \u_key_9/SLICE_387 ( .A1(\u_key_9/delay_cnt_16 ), 
    .A0(\u_key_9/delay_cnt_15 ), .DI0(\u_key_9/n26 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15632 ), .F0(\u_key_9/n26 ), .Q0(\u_key_9/delay_cnt_15 ), 
    .F1(\u_key_9/n25 ), .FCO(\u_key_9/n15633 ));
  u_key_9_SLICE_388 \u_key_9/SLICE_388 ( .A1(\u_key_9/delay_cnt_14 ), 
    .A0(\u_key_9/delay_cnt_13 ), .DI0(\u_key_9/n28 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15631 ), .F0(\u_key_9/n28 ), .Q0(\u_key_9/delay_cnt_13 ), 
    .F1(\u_key_9/n27 ), .FCO(\u_key_9/n15632 ));
  u_key_9_SLICE_389 \u_key_9/SLICE_389 ( .A1(\u_key_9/delay_cnt_12 ), 
    .A0(\u_key_9/delay_cnt_11 ), .DI1(\u_key_9/n29 ), .DI0(\u_key_9/n30 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15630 ), .F0(\u_key_9/n30 ), .Q0(\u_key_9/delay_cnt_11 ), 
    .F1(\u_key_9/n29 ), .Q1(\u_key_9/delay_cnt_12 ), .FCO(\u_key_9/n15631 ));
  u_key_9_SLICE_390 \u_key_9/SLICE_390 ( .A1(\u_key_9/delay_cnt_10 ), 
    .A0(\u_key_9/delay_cnt_9 ), .DI1(\u_key_9/n31 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15629 ), .F0(\u_key_9/n32 ), .F1(\u_key_9/n31 ), 
    .Q1(\u_key_9/delay_cnt_10 ), .FCO(\u_key_9/n15630 ));
  u_key_9_SLICE_391 \u_key_9/SLICE_391 ( .A1(\u_key_9/delay_cnt_8 ), 
    .A0(\u_key_9/delay_cnt_7 ), .DI1(\u_key_9/n33 ), .DI0(\u_key_9/n34 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15628 ), .F0(\u_key_9/n34 ), .Q0(\u_key_9/delay_cnt_7 ), 
    .F1(\u_key_9/n33 ), .Q1(\u_key_9/delay_cnt_8 ), .FCO(\u_key_9/n15629 ));
  u_key_9_SLICE_392 \u_key_9/SLICE_392 ( .A1(\u_key_9/delay_cnt_6 ), 
    .A0(\u_key_9/delay_cnt_5 ), .DI0(\u_key_9/n36 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15627 ), .F0(\u_key_9/n36 ), .Q0(\u_key_9/delay_cnt_5 ), 
    .F1(\u_key_9/n35 ), .FCO(\u_key_9/n15628 ));
  u_key_9_SLICE_393 \u_key_9/SLICE_393 ( .A1(\u_key_9/delay_cnt_4 ), 
    .A0(\u_key_9/delay_cnt_3 ), .DI1(\u_key_9/n37 ), .DI0(\u_key_9/n38 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15626 ), .F0(\u_key_9/n38 ), .Q0(\u_key_9/delay_cnt_3 ), 
    .F1(\u_key_9/n37 ), .Q1(\u_key_9/delay_cnt_4 ), .FCO(\u_key_9/n15627 ));
  u_key_9_SLICE_394 \u_key_9/SLICE_394 ( .A1(\u_key_9/delay_cnt_2 ), 
    .A0(\u_key_9/delay_cnt_1 ), .DI1(\u_key_9/n39 ), .DI0(\u_key_9/n40 ), 
    .CE(\u_key_9/clk_N_168_enable_201 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .FCI(\u_key_9/n15625 ), .F0(\u_key_9/n40 ), .Q0(\u_key_9/delay_cnt_1 ), 
    .F1(\u_key_9/n39 ), .Q1(\u_key_9/delay_cnt_2 ), .FCO(\u_key_9/n15626 ));
  u_key_9_SLICE_395 \u_key_9/SLICE_395 ( .A1(\u_key_9/delay_cnt_0 ), 
    .M0(key_c_8), .CE(\u_key_9/key_flag_N_639 ), .CLK(clk), .Q0(key_value_8), 
    .F1(\u_key_9/n41 ), .FCO(\u_key_9/n15625 ));
  u_key_1_SLICE_396 \u_key_1/SLICE_396 ( .A1(\u_key_1/delay_cnt_16 ), 
    .A0(\u_key_1/delay_cnt_15 ), .DI0(\u_key_1/n26 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15371 ), .F0(\u_key_1/n26 ), .Q0(\u_key_1/delay_cnt_15 ), 
    .F1(\u_key_1/n25 ), .FCO(\u_key_1/n15372 ));
  u_key_1_SLICE_397 \u_key_1/SLICE_397 ( .A1(\u_key_1/delay_cnt_14 ), 
    .A0(\u_key_1/delay_cnt_13 ), .DI0(\u_key_1/n28 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15370 ), .F0(\u_key_1/n28 ), .Q0(\u_key_1/delay_cnt_13 ), 
    .F1(\u_key_1/n27 ), .FCO(\u_key_1/n15371 ));
  u_key_1_SLICE_398 \u_key_1/SLICE_398 ( .A1(\u_key_1/delay_cnt_12 ), 
    .A0(\u_key_1/delay_cnt_11 ), .DI1(\u_key_1/n29 ), .DI0(\u_key_1/n30 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15369 ), .F0(\u_key_1/n30 ), .Q0(\u_key_1/delay_cnt_11 ), 
    .F1(\u_key_1/n29 ), .Q1(\u_key_1/delay_cnt_12 ), .FCO(\u_key_1/n15370 ));
  u_key_1_SLICE_399 \u_key_1/SLICE_399 ( .A1(\u_key_1/delay_cnt_10 ), 
    .A0(\u_key_1/delay_cnt_9 ), .DI1(\u_key_1/n31 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15368 ), .F0(\u_key_1/n32 ), .F1(\u_key_1/n31 ), 
    .Q1(\u_key_1/delay_cnt_10 ), .FCO(\u_key_1/n15369 ));
  u_key_1_SLICE_400 \u_key_1/SLICE_400 ( .A1(\u_key_1/delay_cnt_8 ), 
    .A0(\u_key_1/delay_cnt_7 ), .DI1(\u_key_1/n33 ), .DI0(\u_key_1/n34 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15367 ), .F0(\u_key_1/n34 ), .Q0(\u_key_1/delay_cnt_7 ), 
    .F1(\u_key_1/n33 ), .Q1(\u_key_1/delay_cnt_8 ), .FCO(\u_key_1/n15368 ));
  u_key_1_SLICE_401 \u_key_1/SLICE_401 ( .A1(\u_key_1/delay_cnt_6 ), 
    .A0(\u_key_1/delay_cnt_5 ), .DI0(\u_key_1/n36 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15366 ), .F0(\u_key_1/n36 ), .Q0(\u_key_1/delay_cnt_5 ), 
    .F1(\u_key_1/n35 ), .FCO(\u_key_1/n15367 ));
  u_key_1_SLICE_402 \u_key_1/SLICE_402 ( .A1(\u_key_1/delay_cnt_4 ), 
    .A0(\u_key_1/delay_cnt_3 ), .DI1(\u_key_1/n37 ), .DI0(\u_key_1/n38 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15365 ), .F0(\u_key_1/n38 ), .Q0(\u_key_1/delay_cnt_3 ), 
    .F1(\u_key_1/n37 ), .Q1(\u_key_1/delay_cnt_4 ), .FCO(\u_key_1/n15366 ));
  u_key_1_SLICE_403 \u_key_1/SLICE_403 ( .A1(\u_key_1/delay_cnt_2 ), 
    .A0(\u_key_1/delay_cnt_1 ), .DI1(\u_key_1/n39 ), .DI0(\u_key_1/n40 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15364 ), .F0(\u_key_1/n40 ), .Q0(\u_key_1/delay_cnt_1 ), 
    .F1(\u_key_1/n39 ), .Q1(\u_key_1/delay_cnt_2 ), .FCO(\u_key_1/n15365 ));
  u_key_1_SLICE_404 \u_key_1/SLICE_404 ( .A1(\u_key_1/delay_cnt_0 ), 
    .M0(key_c_0), .CE(\u_key_1/key_flag_N_639 ), .CLK(clk), .Q0(key_value_0), 
    .F1(\u_key_1/n41 ), .FCO(\u_key_1/n15364 ));
  u_key_1_SLICE_405 \u_key_1/SLICE_405 ( .A0(\u_key_1/delay_cnt_31 ), 
    .DI0(\u_key_1/n10 ), .CE(\u_key_1/clk_N_168_enable_450 ), 
    .LSR(\u_key_1/n18802 ), .CLK(clk), .FCI(\u_key_1/n15379 ), 
    .F0(\u_key_1/n10 ), .Q0(\u_key_1/delay_cnt_31 ));
  u_key_1_SLICE_406 \u_key_1/SLICE_406 ( .A1(\u_key_1/delay_cnt_30 ), 
    .A0(\u_key_1/delay_cnt_29 ), .DI1(\u_key_1/n11 ), .DI0(\u_key_1/n12 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15378 ), .F0(\u_key_1/n12 ), .Q0(\u_key_1/delay_cnt_29 ), 
    .F1(\u_key_1/n11 ), .Q1(\u_key_1/delay_cnt_30 ), .FCO(\u_key_1/n15379 ));
  u_key_1_SLICE_407 \u_key_1/SLICE_407 ( .A1(\u_key_1/delay_cnt_28 ), 
    .A0(\u_key_1/delay_cnt_27 ), .DI1(\u_key_1/n13 ), .DI0(\u_key_1/n14 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15377 ), .F0(\u_key_1/n14 ), .Q0(\u_key_1/delay_cnt_27 ), 
    .F1(\u_key_1/n13 ), .Q1(\u_key_1/delay_cnt_28 ), .FCO(\u_key_1/n15378 ));
  u_key_1_SLICE_408 \u_key_1/SLICE_408 ( .A1(\u_key_1/delay_cnt_26 ), 
    .A0(\u_key_1/delay_cnt_25 ), .DI1(\u_key_1/n15 ), .DI0(\u_key_1/n16 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15376 ), .F0(\u_key_1/n16 ), .Q0(\u_key_1/delay_cnt_25 ), 
    .F1(\u_key_1/n15 ), .Q1(\u_key_1/delay_cnt_26 ), .FCO(\u_key_1/n15377 ));
  u_key_1_SLICE_409 \u_key_1/SLICE_409 ( .A1(\u_key_1/delay_cnt_24 ), 
    .A0(\u_key_1/delay_cnt_23 ), .DI1(\u_key_1/n17 ), .DI0(\u_key_1/n18 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15375 ), .F0(\u_key_1/n18 ), .Q0(\u_key_1/delay_cnt_23 ), 
    .F1(\u_key_1/n17 ), .Q1(\u_key_1/delay_cnt_24 ), .FCO(\u_key_1/n15376 ));
  u_key_1_SLICE_410 \u_key_1/SLICE_410 ( .A1(\u_key_1/delay_cnt_22 ), 
    .A0(\u_key_1/delay_cnt_21 ), .DI1(\u_key_1/n19 ), .DI0(\u_key_1/n20 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15374 ), .F0(\u_key_1/n20 ), .Q0(\u_key_1/delay_cnt_21 ), 
    .F1(\u_key_1/n19 ), .Q1(\u_key_1/delay_cnt_22 ), .FCO(\u_key_1/n15375 ));
  u_key_1_SLICE_411 \u_key_1/SLICE_411 ( .A1(\u_key_1/delay_cnt_20 ), 
    .A0(\u_key_1/delay_cnt_19 ), .DI1(\u_key_1/n21 ), 
    .CE(\u_key_1/clk_N_168_enable_450 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .FCI(\u_key_1/n15373 ), .F0(\u_key_1/n22 ), .F1(\u_key_1/n21 ), 
    .Q1(\u_key_1/delay_cnt_20 ), .FCO(\u_key_1/n15374 ));
  u_key_1_SLICE_412 \u_key_1/SLICE_412 ( .A1(\u_key_1/delay_cnt_18 ), 
    .A0(\u_key_1/delay_cnt_17 ), .M0(key_c_0), .CLK(clk), 
    .FCI(\u_key_1/n15372 ), .F0(\u_key_1/n24 ), .Q0(\u_key_1/key_reg ), 
    .F1(\u_key_1/n23 ), .FCO(\u_key_1/n15373 ));
  u_key_7_SLICE_413 \u_key_7/SLICE_413 ( .A0(\u_key_7/delay_cnt_31 ), 
    .DI0(\u_key_7/n10 ), .CE(\u_key_7/clk_N_168_enable_263 ), 
    .LSR(\u_key_7/n18796 ), .CLK(clk), .FCI(\u_key_7/n15672 ), 
    .F0(\u_key_7/n10 ), .Q0(\u_key_7/delay_cnt_31 ));
  u_key_7_SLICE_414 \u_key_7/SLICE_414 ( .A1(\u_key_7/delay_cnt_30 ), 
    .A0(\u_key_7/delay_cnt_29 ), .DI1(\u_key_7/n11 ), .DI0(\u_key_7/n12 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15671 ), .F0(\u_key_7/n12 ), .Q0(\u_key_7/delay_cnt_29 ), 
    .F1(\u_key_7/n11 ), .Q1(\u_key_7/delay_cnt_30 ), .FCO(\u_key_7/n15672 ));
  u_key_7_SLICE_415 \u_key_7/SLICE_415 ( .A1(\u_key_7/delay_cnt_28 ), 
    .A0(\u_key_7/delay_cnt_27 ), .DI1(\u_key_7/n13 ), .DI0(\u_key_7/n14 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15670 ), .F0(\u_key_7/n14 ), .Q0(\u_key_7/delay_cnt_27 ), 
    .F1(\u_key_7/n13 ), .Q1(\u_key_7/delay_cnt_28 ), .FCO(\u_key_7/n15671 ));
  u_key_7_SLICE_416 \u_key_7/SLICE_416 ( .A1(\u_key_7/delay_cnt_26 ), 
    .A0(\u_key_7/delay_cnt_25 ), .DI1(\u_key_7/n15 ), .DI0(\u_key_7/n16 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15669 ), .F0(\u_key_7/n16 ), .Q0(\u_key_7/delay_cnt_25 ), 
    .F1(\u_key_7/n15 ), .Q1(\u_key_7/delay_cnt_26 ), .FCO(\u_key_7/n15670 ));
  u_key_7_SLICE_417 \u_key_7/SLICE_417 ( .A1(\u_key_7/delay_cnt_24 ), 
    .A0(\u_key_7/delay_cnt_23 ), .DI1(\u_key_7/n17 ), .DI0(\u_key_7/n18 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15668 ), .F0(\u_key_7/n18 ), .Q0(\u_key_7/delay_cnt_23 ), 
    .F1(\u_key_7/n17 ), .Q1(\u_key_7/delay_cnt_24 ), .FCO(\u_key_7/n15669 ));
  u_key_7_SLICE_418 \u_key_7/SLICE_418 ( .A1(\u_key_7/delay_cnt_22 ), 
    .A0(\u_key_7/delay_cnt_21 ), .DI1(\u_key_7/n19 ), .DI0(\u_key_7/n20 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15667 ), .F0(\u_key_7/n20 ), .Q0(\u_key_7/delay_cnt_21 ), 
    .F1(\u_key_7/n19 ), .Q1(\u_key_7/delay_cnt_22 ), .FCO(\u_key_7/n15668 ));
  u_key_7_SLICE_419 \u_key_7/SLICE_419 ( .A1(\u_key_7/delay_cnt_20 ), 
    .A0(\u_key_7/delay_cnt_19 ), .DI1(\u_key_7/n21 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15666 ), .F0(\u_key_7/n22 ), .F1(\u_key_7/n21 ), 
    .Q1(\u_key_7/delay_cnt_20 ), .FCO(\u_key_7/n15667 ));
  u_key_7_SLICE_420 \u_key_7/SLICE_420 ( .A1(\u_key_7/delay_cnt_18 ), 
    .A0(\u_key_7/delay_cnt_17 ), .M0(key_c_6), .CLK(clk), 
    .FCI(\u_key_7/n15665 ), .F0(\u_key_7/n24 ), .Q0(\u_key_7/key_reg ), 
    .F1(\u_key_7/n23 ), .FCO(\u_key_7/n15666 ));
  u_key_7_SLICE_421 \u_key_7/SLICE_421 ( .A1(\u_key_7/delay_cnt_16 ), 
    .A0(\u_key_7/delay_cnt_15 ), .DI0(\u_key_7/n26 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15664 ), .F0(\u_key_7/n26 ), .Q0(\u_key_7/delay_cnt_15 ), 
    .F1(\u_key_7/n25 ), .FCO(\u_key_7/n15665 ));
  u_key_7_SLICE_422 \u_key_7/SLICE_422 ( .A1(\u_key_7/delay_cnt_14 ), 
    .A0(\u_key_7/delay_cnt_13 ), .DI0(\u_key_7/n28 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15663 ), .F0(\u_key_7/n28 ), .Q0(\u_key_7/delay_cnt_13 ), 
    .F1(\u_key_7/n27 ), .FCO(\u_key_7/n15664 ));
  u_key_7_SLICE_423 \u_key_7/SLICE_423 ( .A1(\u_key_7/delay_cnt_12 ), 
    .A0(\u_key_7/delay_cnt_11 ), .DI1(\u_key_7/n29 ), .DI0(\u_key_7/n30 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15662 ), .F0(\u_key_7/n30 ), .Q0(\u_key_7/delay_cnt_11 ), 
    .F1(\u_key_7/n29 ), .Q1(\u_key_7/delay_cnt_12 ), .FCO(\u_key_7/n15663 ));
  u_key_7_SLICE_424 \u_key_7/SLICE_424 ( .A1(\u_key_7/delay_cnt_10 ), 
    .A0(\u_key_7/delay_cnt_9 ), .DI1(\u_key_7/n31 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15661 ), .F0(\u_key_7/n32 ), .F1(\u_key_7/n31 ), 
    .Q1(\u_key_7/delay_cnt_10 ), .FCO(\u_key_7/n15662 ));
  u_key_7_SLICE_425 \u_key_7/SLICE_425 ( .A1(\u_key_7/delay_cnt_8 ), 
    .A0(\u_key_7/delay_cnt_7 ), .DI1(\u_key_7/n33 ), .DI0(\u_key_7/n34 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15660 ), .F0(\u_key_7/n34 ), .Q0(\u_key_7/delay_cnt_7 ), 
    .F1(\u_key_7/n33 ), .Q1(\u_key_7/delay_cnt_8 ), .FCO(\u_key_7/n15661 ));
  u_key_7_SLICE_426 \u_key_7/SLICE_426 ( .A1(\u_key_7/delay_cnt_6 ), 
    .A0(\u_key_7/delay_cnt_5 ), .DI0(\u_key_7/n36 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15659 ), .F0(\u_key_7/n36 ), .Q0(\u_key_7/delay_cnt_5 ), 
    .F1(\u_key_7/n35 ), .FCO(\u_key_7/n15660 ));
  u_key_7_SLICE_427 \u_key_7/SLICE_427 ( .A1(\u_key_7/delay_cnt_4 ), 
    .A0(\u_key_7/delay_cnt_3 ), .DI1(\u_key_7/n37 ), .DI0(\u_key_7/n38 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15658 ), .F0(\u_key_7/n38 ), .Q0(\u_key_7/delay_cnt_3 ), 
    .F1(\u_key_7/n37 ), .Q1(\u_key_7/delay_cnt_4 ), .FCO(\u_key_7/n15659 ));
  u_key_7_SLICE_428 \u_key_7/SLICE_428 ( .A1(\u_key_7/delay_cnt_2 ), 
    .A0(\u_key_7/delay_cnt_1 ), .DI1(\u_key_7/n39 ), .DI0(\u_key_7/n40 ), 
    .CE(\u_key_7/clk_N_168_enable_263 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .FCI(\u_key_7/n15657 ), .F0(\u_key_7/n40 ), .Q0(\u_key_7/delay_cnt_1 ), 
    .F1(\u_key_7/n39 ), .Q1(\u_key_7/delay_cnt_2 ), .FCO(\u_key_7/n15658 ));
  u_key_7_SLICE_429 \u_key_7/SLICE_429 ( .A1(\u_key_7/delay_cnt_0 ), 
    .M0(key_c_6), .CE(\u_key_7/key_flag_N_639 ), .CLK(clk), .Q0(key_value_6), 
    .F1(\u_key_7/n41 ), .FCO(\u_key_7/n15657 ));
  u_key_6_SLICE_430 \u_key_6/SLICE_430 ( .A0(\u_key_6/delay_cnt_31 ), 
    .DI0(\u_key_6/n10 ), .CE(\u_key_6/clk_N_168_enable_294 ), 
    .LSR(\u_key_6/n18797 ), .CLK(clk), .FCI(\u_key_6/n15688 ), 
    .F0(\u_key_6/n10 ), .Q0(\u_key_6/delay_cnt_31 ));
  u_key_6_SLICE_431 \u_key_6/SLICE_431 ( .A1(\u_key_6/delay_cnt_30 ), 
    .A0(\u_key_6/delay_cnt_29 ), .DI1(\u_key_6/n11 ), .DI0(\u_key_6/n12 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15687 ), .F0(\u_key_6/n12 ), .Q0(\u_key_6/delay_cnt_29 ), 
    .F1(\u_key_6/n11 ), .Q1(\u_key_6/delay_cnt_30 ), .FCO(\u_key_6/n15688 ));
  u_key_6_SLICE_432 \u_key_6/SLICE_432 ( .A1(\u_key_6/delay_cnt_28 ), 
    .A0(\u_key_6/delay_cnt_27 ), .DI1(\u_key_6/n13 ), .DI0(\u_key_6/n14 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15686 ), .F0(\u_key_6/n14 ), .Q0(\u_key_6/delay_cnt_27 ), 
    .F1(\u_key_6/n13 ), .Q1(\u_key_6/delay_cnt_28 ), .FCO(\u_key_6/n15687 ));
  u_key_6_SLICE_433 \u_key_6/SLICE_433 ( .A1(\u_key_6/delay_cnt_26 ), 
    .A0(\u_key_6/delay_cnt_25 ), .DI1(\u_key_6/n15 ), .DI0(\u_key_6/n16 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15685 ), .F0(\u_key_6/n16 ), .Q0(\u_key_6/delay_cnt_25 ), 
    .F1(\u_key_6/n15 ), .Q1(\u_key_6/delay_cnt_26 ), .FCO(\u_key_6/n15686 ));
  u_key_6_SLICE_434 \u_key_6/SLICE_434 ( .A1(\u_key_6/delay_cnt_24 ), 
    .A0(\u_key_6/delay_cnt_23 ), .DI1(\u_key_6/n17 ), .DI0(\u_key_6/n18 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15684 ), .F0(\u_key_6/n18 ), .Q0(\u_key_6/delay_cnt_23 ), 
    .F1(\u_key_6/n17 ), .Q1(\u_key_6/delay_cnt_24 ), .FCO(\u_key_6/n15685 ));
  u_key_6_SLICE_435 \u_key_6/SLICE_435 ( .A1(\u_key_6/delay_cnt_22 ), 
    .A0(\u_key_6/delay_cnt_21 ), .DI1(\u_key_6/n19 ), .DI0(\u_key_6/n20 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15683 ), .F0(\u_key_6/n20 ), .Q0(\u_key_6/delay_cnt_21 ), 
    .F1(\u_key_6/n19 ), .Q1(\u_key_6/delay_cnt_22 ), .FCO(\u_key_6/n15684 ));
  u_key_6_SLICE_436 \u_key_6/SLICE_436 ( .A1(\u_key_6/delay_cnt_20 ), 
    .A0(\u_key_6/delay_cnt_19 ), .DI1(\u_key_6/n21 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15682 ), .F0(\u_key_6/n22 ), .F1(\u_key_6/n21 ), 
    .Q1(\u_key_6/delay_cnt_20 ), .FCO(\u_key_6/n15683 ));
  u_key_6_SLICE_437 \u_key_6/SLICE_437 ( .A1(\u_key_6/delay_cnt_18 ), 
    .A0(\u_key_6/delay_cnt_17 ), .M0(key_c_5), .CLK(clk), 
    .FCI(\u_key_6/n15681 ), .F0(\u_key_6/n24 ), .Q0(\u_key_6/key_reg ), 
    .F1(\u_key_6/n23 ), .FCO(\u_key_6/n15682 ));
  u_key_6_SLICE_438 \u_key_6/SLICE_438 ( .A1(\u_key_6/delay_cnt_16 ), 
    .A0(\u_key_6/delay_cnt_15 ), .DI0(\u_key_6/n26 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15680 ), .F0(\u_key_6/n26 ), .Q0(\u_key_6/delay_cnt_15 ), 
    .F1(\u_key_6/n25 ), .FCO(\u_key_6/n15681 ));
  u_key_6_SLICE_439 \u_key_6/SLICE_439 ( .A1(\u_key_6/delay_cnt_14 ), 
    .A0(\u_key_6/delay_cnt_13 ), .DI0(\u_key_6/n28 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15679 ), .F0(\u_key_6/n28 ), .Q0(\u_key_6/delay_cnt_13 ), 
    .F1(\u_key_6/n27 ), .FCO(\u_key_6/n15680 ));
  u_key_6_SLICE_440 \u_key_6/SLICE_440 ( .A1(\u_key_6/delay_cnt_12 ), 
    .A0(\u_key_6/delay_cnt_11 ), .DI1(\u_key_6/n29 ), .DI0(\u_key_6/n30 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15678 ), .F0(\u_key_6/n30 ), .Q0(\u_key_6/delay_cnt_11 ), 
    .F1(\u_key_6/n29 ), .Q1(\u_key_6/delay_cnt_12 ), .FCO(\u_key_6/n15679 ));
  u_key_6_SLICE_441 \u_key_6/SLICE_441 ( .A1(\u_key_6/delay_cnt_10 ), 
    .A0(\u_key_6/delay_cnt_9 ), .DI1(\u_key_6/n31 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15677 ), .F0(\u_key_6/n32 ), .F1(\u_key_6/n31 ), 
    .Q1(\u_key_6/delay_cnt_10 ), .FCO(\u_key_6/n15678 ));
  u_key_6_SLICE_442 \u_key_6/SLICE_442 ( .A1(\u_key_6/delay_cnt_8 ), 
    .A0(\u_key_6/delay_cnt_7 ), .DI1(\u_key_6/n33 ), .DI0(\u_key_6/n34 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15676 ), .F0(\u_key_6/n34 ), .Q0(\u_key_6/delay_cnt_7 ), 
    .F1(\u_key_6/n33 ), .Q1(\u_key_6/delay_cnt_8 ), .FCO(\u_key_6/n15677 ));
  u_key_6_SLICE_443 \u_key_6/SLICE_443 ( .A1(\u_key_6/delay_cnt_6 ), 
    .A0(\u_key_6/delay_cnt_5 ), .DI0(\u_key_6/n36 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15675 ), .F0(\u_key_6/n36 ), .Q0(\u_key_6/delay_cnt_5 ), 
    .F1(\u_key_6/n35 ), .FCO(\u_key_6/n15676 ));
  u_key_6_SLICE_444 \u_key_6/SLICE_444 ( .A1(\u_key_6/delay_cnt_4 ), 
    .A0(\u_key_6/delay_cnt_3 ), .DI1(\u_key_6/n37 ), .DI0(\u_key_6/n38 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15674 ), .F0(\u_key_6/n38 ), .Q0(\u_key_6/delay_cnt_3 ), 
    .F1(\u_key_6/n37 ), .Q1(\u_key_6/delay_cnt_4 ), .FCO(\u_key_6/n15675 ));
  u_key_6_SLICE_445 \u_key_6/SLICE_445 ( .A1(\u_key_6/delay_cnt_2 ), 
    .A0(\u_key_6/delay_cnt_1 ), .DI1(\u_key_6/n39 ), .DI0(\u_key_6/n40 ), 
    .CE(\u_key_6/clk_N_168_enable_294 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .FCI(\u_key_6/n15673 ), .F0(\u_key_6/n40 ), .Q0(\u_key_6/delay_cnt_1 ), 
    .F1(\u_key_6/n39 ), .Q1(\u_key_6/delay_cnt_2 ), .FCO(\u_key_6/n15674 ));
  u_key_6_SLICE_446 \u_key_6/SLICE_446 ( .A1(\u_key_6/delay_cnt_0 ), 
    .M0(key_c_5), .CE(\u_key_6/key_flag_N_639 ), .CLK(clk), .Q0(key_value_5), 
    .F1(\u_key_6/n41 ), .FCO(\u_key_6/n15673 ));
  SLICE_447 SLICE_447( .A0(cnt_31), .DI0(n102_adj_1489), .LSR(n10969), 
    .CLK(clk), .FCI(n15798), .F0(n102_adj_1489), .Q0(cnt_31));
  SLICE_448 SLICE_448( .A1(cnt_30), .A0(cnt_29), .DI1(n103_adj_1490), 
    .DI0(n104_adj_1491), .LSR(n10969), .CLK(clk), .FCI(n15797), 
    .F0(n104_adj_1491), .Q0(cnt_29), .F1(n103_adj_1490), .Q1(cnt_30), 
    .FCO(n15798));
  u_key_3_SLICE_449 \u_key_3/SLICE_449 ( .A1(\u_key_3/delay_cnt_0 ), 
    .M0(key_c_2), .CE(\u_key_3/key_flag_N_639 ), .CLK(clk), .Q0(key_value_2), 
    .F1(\u_key_3/n41 ), .FCO(\u_key_3/n15332 ));
  u_key_3_SLICE_450 \u_key_3/SLICE_450 ( .A1(\u_key_3/delay_cnt_2 ), 
    .A0(\u_key_3/delay_cnt_1 ), .DI1(\u_key_3/n39 ), .DI0(\u_key_3/n40 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15332 ), .F0(\u_key_3/n40 ), .Q0(\u_key_3/delay_cnt_1 ), 
    .F1(\u_key_3/n39 ), .Q1(\u_key_3/delay_cnt_2 ), .FCO(\u_key_3/n15333 ));
  u_key_3_SLICE_451 \u_key_3/SLICE_451 ( .A0(\u_key_3/delay_cnt_31 ), 
    .DI0(\u_key_3/n10 ), .CE(\u_key_3/clk_N_168_enable_387 ), 
    .LSR(\u_key_3/n18800 ), .CLK(clk), .FCI(\u_key_3/n15347 ), 
    .F0(\u_key_3/n10 ), .Q0(\u_key_3/delay_cnt_31 ));
  u_key_3_SLICE_452 \u_key_3/SLICE_452 ( .A1(\u_key_3/delay_cnt_30 ), 
    .A0(\u_key_3/delay_cnt_29 ), .DI1(\u_key_3/n11 ), .DI0(\u_key_3/n12 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15346 ), .F0(\u_key_3/n12 ), .Q0(\u_key_3/delay_cnt_29 ), 
    .F1(\u_key_3/n11 ), .Q1(\u_key_3/delay_cnt_30 ), .FCO(\u_key_3/n15347 ));
  u_key_3_SLICE_453 \u_key_3/SLICE_453 ( .A1(\u_key_3/delay_cnt_28 ), 
    .A0(\u_key_3/delay_cnt_27 ), .DI1(\u_key_3/n13 ), .DI0(\u_key_3/n14 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15345 ), .F0(\u_key_3/n14 ), .Q0(\u_key_3/delay_cnt_27 ), 
    .F1(\u_key_3/n13 ), .Q1(\u_key_3/delay_cnt_28 ), .FCO(\u_key_3/n15346 ));
  u_key_3_SLICE_454 \u_key_3/SLICE_454 ( .A1(\u_key_3/delay_cnt_26 ), 
    .A0(\u_key_3/delay_cnt_25 ), .DI1(\u_key_3/n15 ), .DI0(\u_key_3/n16 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15344 ), .F0(\u_key_3/n16 ), .Q0(\u_key_3/delay_cnt_25 ), 
    .F1(\u_key_3/n15 ), .Q1(\u_key_3/delay_cnt_26 ), .FCO(\u_key_3/n15345 ));
  u_key_3_SLICE_455 \u_key_3/SLICE_455 ( .A1(\u_key_3/delay_cnt_24 ), 
    .A0(\u_key_3/delay_cnt_23 ), .DI1(\u_key_3/n17 ), .DI0(\u_key_3/n18 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15343 ), .F0(\u_key_3/n18 ), .Q0(\u_key_3/delay_cnt_23 ), 
    .F1(\u_key_3/n17 ), .Q1(\u_key_3/delay_cnt_24 ), .FCO(\u_key_3/n15344 ));
  u_key_3_SLICE_456 \u_key_3/SLICE_456 ( .A1(\u_key_3/delay_cnt_22 ), 
    .A0(\u_key_3/delay_cnt_21 ), .DI1(\u_key_3/n19 ), .DI0(\u_key_3/n20 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15342 ), .F0(\u_key_3/n20 ), .Q0(\u_key_3/delay_cnt_21 ), 
    .F1(\u_key_3/n19 ), .Q1(\u_key_3/delay_cnt_22 ), .FCO(\u_key_3/n15343 ));
  u_key_3_SLICE_457 \u_key_3/SLICE_457 ( .A1(\u_key_3/delay_cnt_20 ), 
    .A0(\u_key_3/delay_cnt_19 ), .DI1(\u_key_3/n21 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15341 ), .F0(\u_key_3/n22 ), .F1(\u_key_3/n21 ), 
    .Q1(\u_key_3/delay_cnt_20 ), .FCO(\u_key_3/n15342 ));
  u_key_3_SLICE_458 \u_key_3/SLICE_458 ( .A1(\u_key_3/delay_cnt_18 ), 
    .A0(\u_key_3/delay_cnt_17 ), .M0(key_c_2), .CLK(clk), 
    .FCI(\u_key_3/n15340 ), .F0(\u_key_3/n24 ), .Q0(\u_key_3/key_reg ), 
    .F1(\u_key_3/n23 ), .FCO(\u_key_3/n15341 ));
  u_key_3_SLICE_459 \u_key_3/SLICE_459 ( .A1(\u_key_3/delay_cnt_16 ), 
    .A0(\u_key_3/delay_cnt_15 ), .DI0(\u_key_3/n26 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15339 ), .F0(\u_key_3/n26 ), .Q0(\u_key_3/delay_cnt_15 ), 
    .F1(\u_key_3/n25 ), .FCO(\u_key_3/n15340 ));
  u_key_3_SLICE_460 \u_key_3/SLICE_460 ( .A1(\u_key_3/delay_cnt_14 ), 
    .A0(\u_key_3/delay_cnt_13 ), .DI0(\u_key_3/n28 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15338 ), .F0(\u_key_3/n28 ), .Q0(\u_key_3/delay_cnt_13 ), 
    .F1(\u_key_3/n27 ), .FCO(\u_key_3/n15339 ));
  u_key_3_SLICE_461 \u_key_3/SLICE_461 ( .A1(\u_key_3/delay_cnt_12 ), 
    .A0(\u_key_3/delay_cnt_11 ), .DI1(\u_key_3/n29 ), .DI0(\u_key_3/n30 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15337 ), .F0(\u_key_3/n30 ), .Q0(\u_key_3/delay_cnt_11 ), 
    .F1(\u_key_3/n29 ), .Q1(\u_key_3/delay_cnt_12 ), .FCO(\u_key_3/n15338 ));
  u_key_3_SLICE_462 \u_key_3/SLICE_462 ( .A1(\u_key_3/delay_cnt_10 ), 
    .A0(\u_key_3/delay_cnt_9 ), .DI1(\u_key_3/n31 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15336 ), .F0(\u_key_3/n32 ), .F1(\u_key_3/n31 ), 
    .Q1(\u_key_3/delay_cnt_10 ), .FCO(\u_key_3/n15337 ));
  u_key_3_SLICE_463 \u_key_3/SLICE_463 ( .A1(\u_key_3/delay_cnt_8 ), 
    .A0(\u_key_3/delay_cnt_7 ), .DI1(\u_key_3/n33 ), .DI0(\u_key_3/n34 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15335 ), .F0(\u_key_3/n34 ), .Q0(\u_key_3/delay_cnt_7 ), 
    .F1(\u_key_3/n33 ), .Q1(\u_key_3/delay_cnt_8 ), .FCO(\u_key_3/n15336 ));
  u_key_3_SLICE_464 \u_key_3/SLICE_464 ( .A1(\u_key_3/delay_cnt_6 ), 
    .A0(\u_key_3/delay_cnt_5 ), .DI0(\u_key_3/n36 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15334 ), .F0(\u_key_3/n36 ), .Q0(\u_key_3/delay_cnt_5 ), 
    .F1(\u_key_3/n35 ), .FCO(\u_key_3/n15335 ));
  u_key_3_SLICE_465 \u_key_3/SLICE_465 ( .A1(\u_key_3/delay_cnt_4 ), 
    .A0(\u_key_3/delay_cnt_3 ), .DI1(\u_key_3/n37 ), .DI0(\u_key_3/n38 ), 
    .CE(\u_key_3/clk_N_168_enable_387 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .FCI(\u_key_3/n15333 ), .F0(\u_key_3/n38 ), .Q0(\u_key_3/delay_cnt_3 ), 
    .F1(\u_key_3/n37 ), .Q1(\u_key_3/delay_cnt_4 ), .FCO(\u_key_3/n15334 ));
  SLICE_466 SLICE_466( .A1(cnt_28), .A0(cnt_27), .DI1(n105_adj_1492), 
    .DI0(n106_adj_1493), .LSR(n10969), .CLK(clk), .FCI(n15796), 
    .F0(n106_adj_1493), .Q0(cnt_27), .F1(n105_adj_1492), .Q1(cnt_28), 
    .FCO(n15797));
  SLICE_467 SLICE_467( .A1(cnt_26), .A0(cnt_25), .DI1(n107_adj_1494), 
    .DI0(n108_adj_1495), .LSR(n10969), .CLK(clk), .FCI(n15795), 
    .F0(n108_adj_1495), .Q0(cnt_25), .F1(n107_adj_1494), .Q1(cnt_26), 
    .FCO(n15796));
  u_key_15_SLICE_468 \u_key_15/SLICE_468 ( .A0(\u_key_15/delay_cnt_31 ), 
    .DI0(\u_key_15/n10 ), .CE(\u_key_15/clk_N_168_enable_531 ), 
    .LSR(\u_key_15/n18728 ), .CLK(clk), .FCI(\u_key_15/n15544 ), 
    .F0(\u_key_15/n10 ), .Q0(\u_key_15/delay_cnt_31 ));
  u_key_15_SLICE_469 \u_key_15/SLICE_469 ( .A1(\u_key_15/delay_cnt_30 ), 
    .A0(\u_key_15/delay_cnt_29 ), .DI1(\u_key_15/n11 ), .DI0(\u_key_15/n12 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15543 ), .F0(\u_key_15/n12 ), .Q0(\u_key_15/delay_cnt_29 ), 
    .F1(\u_key_15/n11 ), .Q1(\u_key_15/delay_cnt_30 ), .FCO(\u_key_15/n15544 ));
  u_key_15_SLICE_470 \u_key_15/SLICE_470 ( .A1(\u_key_15/delay_cnt_28 ), 
    .A0(\u_key_15/delay_cnt_27 ), .DI1(\u_key_15/n13 ), .DI0(\u_key_15/n14 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15542 ), .F0(\u_key_15/n14 ), .Q0(\u_key_15/delay_cnt_27 ), 
    .F1(\u_key_15/n13 ), .Q1(\u_key_15/delay_cnt_28 ), .FCO(\u_key_15/n15543 ));
  u_key_15_SLICE_471 \u_key_15/SLICE_471 ( .A1(\u_key_15/delay_cnt_26 ), 
    .A0(\u_key_15/delay_cnt_25 ), .DI1(\u_key_15/n15 ), .DI0(\u_key_15/n16 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15541 ), .F0(\u_key_15/n16 ), .Q0(\u_key_15/delay_cnt_25 ), 
    .F1(\u_key_15/n15 ), .Q1(\u_key_15/delay_cnt_26 ), .FCO(\u_key_15/n15542 ));
  u_key_15_SLICE_472 \u_key_15/SLICE_472 ( .A1(\u_key_15/delay_cnt_24 ), 
    .A0(\u_key_15/delay_cnt_23 ), .DI1(\u_key_15/n17 ), .DI0(\u_key_15/n18 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15540 ), .F0(\u_key_15/n18 ), .Q0(\u_key_15/delay_cnt_23 ), 
    .F1(\u_key_15/n17 ), .Q1(\u_key_15/delay_cnt_24 ), .FCO(\u_key_15/n15541 ));
  u_key_15_SLICE_473 \u_key_15/SLICE_473 ( .A1(\u_key_15/delay_cnt_22 ), 
    .A0(\u_key_15/delay_cnt_21 ), .DI1(\u_key_15/n19 ), .DI0(\u_key_15/n20 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15539 ), .F0(\u_key_15/n20 ), .Q0(\u_key_15/delay_cnt_21 ), 
    .F1(\u_key_15/n19 ), .Q1(\u_key_15/delay_cnt_22 ), .FCO(\u_key_15/n15540 ));
  u_key_15_SLICE_474 \u_key_15/SLICE_474 ( .A1(\u_key_15/delay_cnt_20 ), 
    .A0(\u_key_15/delay_cnt_19 ), .DI1(\u_key_15/n21 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15538 ), .F0(\u_key_15/n22 ), .F1(\u_key_15/n21 ), 
    .Q1(\u_key_15/delay_cnt_20 ), .FCO(\u_key_15/n15539 ));
  u_key_15_SLICE_475 \u_key_15/SLICE_475 ( .A1(\u_key_15/delay_cnt_18 ), 
    .A0(\u_key_15/delay_cnt_17 ), .M0(key_c_14), .CLK(clk), 
    .FCI(\u_key_15/n15537 ), .F0(\u_key_15/n24 ), .Q0(\u_key_15/key_reg ), 
    .F1(\u_key_15/n23 ), .FCO(\u_key_15/n15538 ));
  u_key_15_SLICE_476 \u_key_15/SLICE_476 ( .A1(\u_key_15/delay_cnt_16 ), 
    .A0(\u_key_15/delay_cnt_15 ), .DI0(\u_key_15/n26 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15536 ), .F0(\u_key_15/n26 ), .Q0(\u_key_15/delay_cnt_15 ), 
    .F1(\u_key_15/n25 ), .FCO(\u_key_15/n15537 ));
  u_key_15_SLICE_477 \u_key_15/SLICE_477 ( .A1(\u_key_15/delay_cnt_14 ), 
    .A0(\u_key_15/delay_cnt_13 ), .DI0(\u_key_15/n28 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15535 ), .F0(\u_key_15/n28 ), .Q0(\u_key_15/delay_cnt_13 ), 
    .F1(\u_key_15/n27 ), .FCO(\u_key_15/n15536 ));
  u_key_15_SLICE_478 \u_key_15/SLICE_478 ( .A1(\u_key_15/delay_cnt_12 ), 
    .A0(\u_key_15/delay_cnt_11 ), .DI1(\u_key_15/n29 ), .DI0(\u_key_15/n30 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15534 ), .F0(\u_key_15/n30 ), .Q0(\u_key_15/delay_cnt_11 ), 
    .F1(\u_key_15/n29 ), .Q1(\u_key_15/delay_cnt_12 ), .FCO(\u_key_15/n15535 ));
  u_key_15_SLICE_479 \u_key_15/SLICE_479 ( .A1(\u_key_15/delay_cnt_10 ), 
    .A0(\u_key_15/delay_cnt_9 ), .DI1(\u_key_15/n31 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15533 ), .F0(\u_key_15/n32 ), .F1(\u_key_15/n31 ), 
    .Q1(\u_key_15/delay_cnt_10 ), .FCO(\u_key_15/n15534 ));
  u_key_15_SLICE_480 \u_key_15/SLICE_480 ( .A1(\u_key_15/delay_cnt_8 ), 
    .A0(\u_key_15/delay_cnt_7 ), .DI1(\u_key_15/n33 ), .DI0(\u_key_15/n34 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15532 ), .F0(\u_key_15/n34 ), .Q0(\u_key_15/delay_cnt_7 ), 
    .F1(\u_key_15/n33 ), .Q1(\u_key_15/delay_cnt_8 ), .FCO(\u_key_15/n15533 ));
  u_key_15_SLICE_481 \u_key_15/SLICE_481 ( .A1(\u_key_15/delay_cnt_6 ), 
    .A0(\u_key_15/delay_cnt_5 ), .DI0(\u_key_15/n36 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15531 ), .F0(\u_key_15/n36 ), .Q0(\u_key_15/delay_cnt_5 ), 
    .F1(\u_key_15/n35 ), .FCO(\u_key_15/n15532 ));
  u_key_15_SLICE_482 \u_key_15/SLICE_482 ( .A1(\u_key_15/delay_cnt_4 ), 
    .A0(\u_key_15/delay_cnt_3 ), .DI1(\u_key_15/n37 ), .DI0(\u_key_15/n38 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15530 ), .F0(\u_key_15/n38 ), .Q0(\u_key_15/delay_cnt_3 ), 
    .F1(\u_key_15/n37 ), .Q1(\u_key_15/delay_cnt_4 ), .FCO(\u_key_15/n15531 ));
  u_key_15_SLICE_483 \u_key_15/SLICE_483 ( .A1(\u_key_15/delay_cnt_2 ), 
    .A0(\u_key_15/delay_cnt_1 ), .DI1(\u_key_15/n39 ), .DI0(\u_key_15/n40 ), 
    .CE(\u_key_15/clk_N_168_enable_531 ), .LSR(\u_key_15/n18728 ), .CLK(clk), 
    .FCI(\u_key_15/n15529 ), .F0(\u_key_15/n40 ), .Q0(\u_key_15/delay_cnt_1 ), 
    .F1(\u_key_15/n39 ), .Q1(\u_key_15/delay_cnt_2 ), .FCO(\u_key_15/n15530 ));
  u_key_15_SLICE_484 \u_key_15/SLICE_484 ( .A1(\u_key_15/delay_cnt_0 ), 
    .M0(key_c_14), .CE(\u_key_15/key_flag_N_639 ), .CLK(clk), 
    .Q0(key_value_14), .F1(\u_key_15/n41 ), .FCO(\u_key_15/n15529 ));
  SLICE_485 SLICE_485( .A1(cnt_24), .A0(cnt_23), .DI1(n109_adj_1496), 
    .DI0(n110_adj_1497), .LSR(n10969), .CLK(clk), .FCI(n15794), 
    .F0(n110_adj_1497), .Q0(cnt_23), .F1(n109_adj_1496), .Q1(cnt_24), 
    .FCO(n15795));
  u_key_4_SLICE_486 \u_key_4/SLICE_486 ( .A0(\u_key_4/delay_cnt_31 ), 
    .DI0(\u_key_4/n10 ), .CE(\u_key_4/clk_N_168_enable_356 ), 
    .LSR(\u_key_4/n18799 ), .CLK(clk), .FCI(\u_key_4/n15331 ), 
    .F0(\u_key_4/n10 ), .Q0(\u_key_4/delay_cnt_31 ));
  u_key_4_SLICE_487 \u_key_4/SLICE_487 ( .A1(\u_key_4/delay_cnt_30 ), 
    .A0(\u_key_4/delay_cnt_29 ), .DI1(\u_key_4/n11 ), .DI0(\u_key_4/n12 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15330 ), .F0(\u_key_4/n12 ), .Q0(\u_key_4/delay_cnt_29 ), 
    .F1(\u_key_4/n11 ), .Q1(\u_key_4/delay_cnt_30 ), .FCO(\u_key_4/n15331 ));
  u_key_4_SLICE_488 \u_key_4/SLICE_488 ( .A1(\u_key_4/delay_cnt_28 ), 
    .A0(\u_key_4/delay_cnt_27 ), .DI1(\u_key_4/n13 ), .DI0(\u_key_4/n14 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15329 ), .F0(\u_key_4/n14 ), .Q0(\u_key_4/delay_cnt_27 ), 
    .F1(\u_key_4/n13 ), .Q1(\u_key_4/delay_cnt_28 ), .FCO(\u_key_4/n15330 ));
  u_key_4_SLICE_489 \u_key_4/SLICE_489 ( .A1(\u_key_4/delay_cnt_26 ), 
    .A0(\u_key_4/delay_cnt_25 ), .DI1(\u_key_4/n15 ), .DI0(\u_key_4/n16 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15328 ), .F0(\u_key_4/n16 ), .Q0(\u_key_4/delay_cnt_25 ), 
    .F1(\u_key_4/n15 ), .Q1(\u_key_4/delay_cnt_26 ), .FCO(\u_key_4/n15329 ));
  u_key_4_SLICE_490 \u_key_4/SLICE_490 ( .A1(\u_key_4/delay_cnt_24 ), 
    .A0(\u_key_4/delay_cnt_23 ), .DI1(\u_key_4/n17 ), .DI0(\u_key_4/n18 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15327 ), .F0(\u_key_4/n18 ), .Q0(\u_key_4/delay_cnt_23 ), 
    .F1(\u_key_4/n17 ), .Q1(\u_key_4/delay_cnt_24 ), .FCO(\u_key_4/n15328 ));
  u_key_4_SLICE_491 \u_key_4/SLICE_491 ( .A1(\u_key_4/delay_cnt_22 ), 
    .A0(\u_key_4/delay_cnt_21 ), .DI1(\u_key_4/n19 ), .DI0(\u_key_4/n20 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15326 ), .F0(\u_key_4/n20 ), .Q0(\u_key_4/delay_cnt_21 ), 
    .F1(\u_key_4/n19 ), .Q1(\u_key_4/delay_cnt_22 ), .FCO(\u_key_4/n15327 ));
  u_key_4_SLICE_492 \u_key_4/SLICE_492 ( .A1(\u_key_4/delay_cnt_20 ), 
    .A0(\u_key_4/delay_cnt_19 ), .DI1(\u_key_4/n21 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15325 ), .F0(\u_key_4/n22 ), .F1(\u_key_4/n21 ), 
    .Q1(\u_key_4/delay_cnt_20 ), .FCO(\u_key_4/n15326 ));
  u_key_4_SLICE_493 \u_key_4/SLICE_493 ( .A1(\u_key_4/delay_cnt_18 ), 
    .A0(\u_key_4/delay_cnt_17 ), .M0(key_c_3), .CLK(clk), 
    .FCI(\u_key_4/n15324 ), .F0(\u_key_4/n24 ), .Q0(\u_key_4/key_reg ), 
    .F1(\u_key_4/n23 ), .FCO(\u_key_4/n15325 ));
  u_key_4_SLICE_494 \u_key_4/SLICE_494 ( .A1(\u_key_4/delay_cnt_16 ), 
    .A0(\u_key_4/delay_cnt_15 ), .DI0(\u_key_4/n26 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15323 ), .F0(\u_key_4/n26 ), .Q0(\u_key_4/delay_cnt_15 ), 
    .F1(\u_key_4/n25 ), .FCO(\u_key_4/n15324 ));
  u_key_4_SLICE_495 \u_key_4/SLICE_495 ( .A1(\u_key_4/delay_cnt_14 ), 
    .A0(\u_key_4/delay_cnt_13 ), .DI0(\u_key_4/n28 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15322 ), .F0(\u_key_4/n28 ), .Q0(\u_key_4/delay_cnt_13 ), 
    .F1(\u_key_4/n27 ), .FCO(\u_key_4/n15323 ));
  u_key_4_SLICE_496 \u_key_4/SLICE_496 ( .A1(\u_key_4/delay_cnt_12 ), 
    .A0(\u_key_4/delay_cnt_11 ), .DI1(\u_key_4/n29 ), .DI0(\u_key_4/n30 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15321 ), .F0(\u_key_4/n30 ), .Q0(\u_key_4/delay_cnt_11 ), 
    .F1(\u_key_4/n29 ), .Q1(\u_key_4/delay_cnt_12 ), .FCO(\u_key_4/n15322 ));
  u_key_4_SLICE_497 \u_key_4/SLICE_497 ( .A1(\u_key_4/delay_cnt_10 ), 
    .A0(\u_key_4/delay_cnt_9 ), .DI1(\u_key_4/n31 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15320 ), .F0(\u_key_4/n32 ), .F1(\u_key_4/n31 ), 
    .Q1(\u_key_4/delay_cnt_10 ), .FCO(\u_key_4/n15321 ));
  u_key_4_SLICE_498 \u_key_4/SLICE_498 ( .A1(\u_key_4/delay_cnt_8 ), 
    .A0(\u_key_4/delay_cnt_7 ), .DI1(\u_key_4/n33 ), .DI0(\u_key_4/n34 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15319 ), .F0(\u_key_4/n34 ), .Q0(\u_key_4/delay_cnt_7 ), 
    .F1(\u_key_4/n33 ), .Q1(\u_key_4/delay_cnt_8 ), .FCO(\u_key_4/n15320 ));
  u_key_4_SLICE_499 \u_key_4/SLICE_499 ( .A1(\u_key_4/delay_cnt_6 ), 
    .A0(\u_key_4/delay_cnt_5 ), .DI0(\u_key_4/n36 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15318 ), .F0(\u_key_4/n36 ), .Q0(\u_key_4/delay_cnt_5 ), 
    .F1(\u_key_4/n35 ), .FCO(\u_key_4/n15319 ));
  u_key_4_SLICE_500 \u_key_4/SLICE_500 ( .A1(\u_key_4/delay_cnt_4 ), 
    .A0(\u_key_4/delay_cnt_3 ), .DI1(\u_key_4/n37 ), .DI0(\u_key_4/n38 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15317 ), .F0(\u_key_4/n38 ), .Q0(\u_key_4/delay_cnt_3 ), 
    .F1(\u_key_4/n37 ), .Q1(\u_key_4/delay_cnt_4 ), .FCO(\u_key_4/n15318 ));
  u_key_4_SLICE_501 \u_key_4/SLICE_501 ( .A1(\u_key_4/delay_cnt_2 ), 
    .A0(\u_key_4/delay_cnt_1 ), .DI1(\u_key_4/n39 ), .DI0(\u_key_4/n40 ), 
    .CE(\u_key_4/clk_N_168_enable_356 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .FCI(\u_key_4/n15316 ), .F0(\u_key_4/n40 ), .Q0(\u_key_4/delay_cnt_1 ), 
    .F1(\u_key_4/n39 ), .Q1(\u_key_4/delay_cnt_2 ), .FCO(\u_key_4/n15317 ));
  u_key_4_SLICE_502 \u_key_4/SLICE_502 ( .A1(\u_key_4/delay_cnt_0 ), 
    .M0(key_c_3), .CE(\u_key_4/key_flag_N_639 ), .CLK(clk), .Q0(key_value_3), 
    .F1(\u_key_4/n41 ), .FCO(\u_key_4/n15316 ));
  u_key_14_SLICE_503 \u_key_14/SLICE_503 ( .A0(\u_key_14/delay_cnt_31 ), 
    .DI0(\u_key_14/n10 ), .CE(\u_key_14/clk_N_168_enable_46 ), 
    .LSR(\u_key_14/n18789 ), .CLK(clk), .FCI(\u_key_14/n15560 ), 
    .F0(\u_key_14/n10 ), .Q0(\u_key_14/delay_cnt_31 ));
  u_key_14_SLICE_504 \u_key_14/SLICE_504 ( .A1(\u_key_14/delay_cnt_30 ), 
    .A0(\u_key_14/delay_cnt_29 ), .DI1(\u_key_14/n11 ), .DI0(\u_key_14/n12 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15559 ), .F0(\u_key_14/n12 ), .Q0(\u_key_14/delay_cnt_29 ), 
    .F1(\u_key_14/n11 ), .Q1(\u_key_14/delay_cnt_30 ), .FCO(\u_key_14/n15560 ));
  u_key_14_SLICE_505 \u_key_14/SLICE_505 ( .A1(\u_key_14/delay_cnt_28 ), 
    .A0(\u_key_14/delay_cnt_27 ), .DI1(\u_key_14/n13 ), .DI0(\u_key_14/n14 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15558 ), .F0(\u_key_14/n14 ), .Q0(\u_key_14/delay_cnt_27 ), 
    .F1(\u_key_14/n13 ), .Q1(\u_key_14/delay_cnt_28 ), .FCO(\u_key_14/n15559 ));
  u_key_14_SLICE_506 \u_key_14/SLICE_506 ( .A1(\u_key_14/delay_cnt_26 ), 
    .A0(\u_key_14/delay_cnt_25 ), .DI1(\u_key_14/n15 ), .DI0(\u_key_14/n16 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15557 ), .F0(\u_key_14/n16 ), .Q0(\u_key_14/delay_cnt_25 ), 
    .F1(\u_key_14/n15 ), .Q1(\u_key_14/delay_cnt_26 ), .FCO(\u_key_14/n15558 ));
  u_key_14_SLICE_507 \u_key_14/SLICE_507 ( .A1(\u_key_14/delay_cnt_24 ), 
    .A0(\u_key_14/delay_cnt_23 ), .DI1(\u_key_14/n17 ), .DI0(\u_key_14/n18 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15556 ), .F0(\u_key_14/n18 ), .Q0(\u_key_14/delay_cnt_23 ), 
    .F1(\u_key_14/n17 ), .Q1(\u_key_14/delay_cnt_24 ), .FCO(\u_key_14/n15557 ));
  u_key_14_SLICE_508 \u_key_14/SLICE_508 ( .A1(\u_key_14/delay_cnt_22 ), 
    .A0(\u_key_14/delay_cnt_21 ), .DI1(\u_key_14/n19 ), .DI0(\u_key_14/n20 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15555 ), .F0(\u_key_14/n20 ), .Q0(\u_key_14/delay_cnt_21 ), 
    .F1(\u_key_14/n19 ), .Q1(\u_key_14/delay_cnt_22 ), .FCO(\u_key_14/n15556 ));
  u_key_14_SLICE_509 \u_key_14/SLICE_509 ( .A1(\u_key_14/delay_cnt_20 ), 
    .A0(\u_key_14/delay_cnt_19 ), .DI1(\u_key_14/n21 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15554 ), .F0(\u_key_14/n22 ), .F1(\u_key_14/n21 ), 
    .Q1(\u_key_14/delay_cnt_20 ), .FCO(\u_key_14/n15555 ));
  u_key_14_SLICE_510 \u_key_14/SLICE_510 ( .A1(\u_key_14/delay_cnt_18 ), 
    .A0(\u_key_14/delay_cnt_17 ), .M0(key_c_13), .CLK(clk), 
    .FCI(\u_key_14/n15553 ), .F0(\u_key_14/n24 ), .Q0(\u_key_14/key_reg ), 
    .F1(\u_key_14/n23 ), .FCO(\u_key_14/n15554 ));
  u_key_14_SLICE_511 \u_key_14/SLICE_511 ( .A1(\u_key_14/delay_cnt_16 ), 
    .A0(\u_key_14/delay_cnt_15 ), .DI0(\u_key_14/n26 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15552 ), .F0(\u_key_14/n26 ), .Q0(\u_key_14/delay_cnt_15 ), 
    .F1(\u_key_14/n25 ), .FCO(\u_key_14/n15553 ));
  u_key_14_SLICE_512 \u_key_14/SLICE_512 ( .A1(\u_key_14/delay_cnt_14 ), 
    .A0(\u_key_14/delay_cnt_13 ), .DI0(\u_key_14/n28 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15551 ), .F0(\u_key_14/n28 ), .Q0(\u_key_14/delay_cnt_13 ), 
    .F1(\u_key_14/n27 ), .FCO(\u_key_14/n15552 ));
  u_key_14_SLICE_513 \u_key_14/SLICE_513 ( .A1(\u_key_14/delay_cnt_12 ), 
    .A0(\u_key_14/delay_cnt_11 ), .DI1(\u_key_14/n29 ), .DI0(\u_key_14/n30 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15550 ), .F0(\u_key_14/n30 ), .Q0(\u_key_14/delay_cnt_11 ), 
    .F1(\u_key_14/n29 ), .Q1(\u_key_14/delay_cnt_12 ), .FCO(\u_key_14/n15551 ));
  u_key_14_SLICE_514 \u_key_14/SLICE_514 ( .A1(\u_key_14/delay_cnt_10 ), 
    .A0(\u_key_14/delay_cnt_9 ), .DI1(\u_key_14/n31 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15549 ), .F0(\u_key_14/n32 ), .F1(\u_key_14/n31 ), 
    .Q1(\u_key_14/delay_cnt_10 ), .FCO(\u_key_14/n15550 ));
  u_key_14_SLICE_515 \u_key_14/SLICE_515 ( .A1(\u_key_14/delay_cnt_8 ), 
    .A0(\u_key_14/delay_cnt_7 ), .DI1(\u_key_14/n33 ), .DI0(\u_key_14/n34 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15548 ), .F0(\u_key_14/n34 ), .Q0(\u_key_14/delay_cnt_7 ), 
    .F1(\u_key_14/n33 ), .Q1(\u_key_14/delay_cnt_8 ), .FCO(\u_key_14/n15549 ));
  u_key_14_SLICE_516 \u_key_14/SLICE_516 ( .A1(\u_key_14/delay_cnt_6 ), 
    .A0(\u_key_14/delay_cnt_5 ), .DI0(\u_key_14/n36 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15547 ), .F0(\u_key_14/n36 ), .Q0(\u_key_14/delay_cnt_5 ), 
    .F1(\u_key_14/n35 ), .FCO(\u_key_14/n15548 ));
  u_key_14_SLICE_517 \u_key_14/SLICE_517 ( .A1(\u_key_14/delay_cnt_4 ), 
    .A0(\u_key_14/delay_cnt_3 ), .DI1(\u_key_14/n37 ), .DI0(\u_key_14/n38 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15546 ), .F0(\u_key_14/n38 ), .Q0(\u_key_14/delay_cnt_3 ), 
    .F1(\u_key_14/n37 ), .Q1(\u_key_14/delay_cnt_4 ), .FCO(\u_key_14/n15547 ));
  u_key_14_SLICE_518 \u_key_14/SLICE_518 ( .A1(\u_key_14/delay_cnt_2 ), 
    .A0(\u_key_14/delay_cnt_1 ), .DI1(\u_key_14/n39 ), .DI0(\u_key_14/n40 ), 
    .CE(\u_key_14/clk_N_168_enable_46 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .FCI(\u_key_14/n15545 ), .F0(\u_key_14/n40 ), .Q0(\u_key_14/delay_cnt_1 ), 
    .F1(\u_key_14/n39 ), .Q1(\u_key_14/delay_cnt_2 ), .FCO(\u_key_14/n15546 ));
  u_key_14_SLICE_519 \u_key_14/SLICE_519 ( .A1(\u_key_14/delay_cnt_0 ), 
    .M0(key_c_13), .CE(\u_key_14/key_flag_N_639 ), .CLK(clk), 
    .Q0(key_value_13), .F1(\u_key_14/n41 ), .FCO(\u_key_14/n15545 ));
  SLICE_520 SLICE_520( .C1(n94_adj_1477), .B1(CNT_17_N_703_18), .A1(n3759), 
    .C0(n95), .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n114), .DI0(n115), 
    .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n115), .Q0(CNT_0), 
    .F1(n114), .Q1(CNT_1));
  SLICE_521 SLICE_521( .C1(n92_adj_1476), .B1(CNT_17_N_703_18), .A1(n3759), 
    .C0(n93), .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n112), .DI0(n113), 
    .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n113), .Q0(CNT_2), 
    .F1(n112), .Q1(CNT_3));
  SLICE_522 SLICE_522( .C1(n90), .B1(CNT_17_N_703_18), .A1(n3759), 
    .C0(n91_adj_1475), .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n110), 
    .DI0(n111), .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n111), 
    .Q0(CNT_4), .F1(n110), .Q1(CNT_5));
  SLICE_523 SLICE_523( .C1(n88), .B1(CNT_17_N_703_18), .A1(n3759), .C0(n89), 
    .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n108), .DI0(n109), 
    .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n109), .Q0(CNT_6), 
    .F1(n108), .Q1(CNT_7));
  SLICE_524 SLICE_524( .C1(n86), .B1(CNT_17_N_703_18), .A1(n3759), .C0(n87), 
    .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n106), .DI0(n107), 
    .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n107), .Q0(CNT_8), 
    .F1(n106), .Q1(CNT_9));
  SLICE_525 SLICE_525( .C1(n84), .B1(CNT_17_N_703_18), .A1(n3759), .C0(n85), 
    .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n104), .DI0(n105), 
    .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n105), .Q0(CNT_10), 
    .F1(n104), .Q1(CNT_11));
  SLICE_526 SLICE_526( .C1(n82), .B1(CNT_17_N_703_18), .A1(n3759), .C0(n83), 
    .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n102), .DI0(n103), 
    .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n103), .Q0(CNT_12), 
    .F1(n102), .Q1(CNT_13));
  SLICE_527 SLICE_527( .C1(n80), .B1(CNT_17_N_703_18), .A1(n3759), .C0(n81), 
    .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n100), .DI0(n101), 
    .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n101), .Q0(CNT_14), 
    .F1(n100), .Q1(CNT_15));
  SLICE_528 SLICE_528( .C1(n78), .B1(CNT_17_N_703_18), .A1(n3759), .C0(n79), 
    .B0(CNT_17_N_703_18), .A0(n3759), .DI1(n98), .DI0(n99), 
    .LSR(\u_buzzer/pwm_out1_N_122 ), .CLK(clk), .F0(n99), .Q0(CNT_16), 
    .F1(n98), .Q1(CNT_17));
  SLICE_529 SLICE_529( .C1(count_note_3), .B1(count_note_2), .A1(count_note_1), 
    .D0(count_note_4), .C0(count_note_7), .B0(n18730), .A0(n7_adj_1448), 
    .DI0(beat_4_N_40_0), .CE(clk_N_168_enable_534), .CLK(clk), 
    .F0(beat_4_N_40_0), .Q0(beat_0), .F1(n7_adj_1448));
  SLICE_530 SLICE_530( .C1(count_note_7), .B1(n17124), .A1(n17123), 
    .C0(count_note_7), .B0(n17121), .A0(n17120), .DI1(beat_4_N_40_2), 
    .DI0(beat_4_N_40_1), .CE(clk_N_168_enable_456), .CLK(clk), 
    .F0(beat_4_N_40_1), .Q0(beat_1), .F1(beat_4_N_40_2), .Q1(beat_2));
  SLICE_531 SLICE_531( .D1(count_note_4), .C1(n18604), .B1(count_note_0), 
    .A1(n16854), .C0(n10), .B0(count_note_7), .A0(count_note_0), 
    .DI1(beat_4_N_40_4), .DI0(beat_4_N_40_3), .CE(clk_N_168_enable_534), 
    .CLK(clk), .F0(beat_4_N_40_3), .Q0(beat_3), .F1(beat_4_N_40_4), 
    .Q1(beat_4));
  SLICE_532 SLICE_532( .B1(n10216), .A1(cnt_0), .B0(n10216), .A0(cnt_0), 
    .DI0(clk_beat_N_126), .CLK(clk), .F0(clk_beat_N_126), .Q0(clk_beat), 
    .F1(n10969));
  SLICE_533 SLICE_533( .D1(count_beat_1), .C1(n18760), .B1(n4689), 
    .A1(count_beat_0), .D0(count_beat_0), .C0(n201), .B0(n19846), 
    .A0(clk_beat), .DI1(n29_adj_1480), .DI0(n30_adj_1481), .CLK(clk), 
    .F0(n30_adj_1481), .Q0(count_beat_0), .F1(n29_adj_1480), .Q1(count_beat_1));
  SLICE_534 SLICE_534( .D1(n8_adj_1478), .C1(n18613), .B1(n18607), .A1(n18614), 
    .D0(n18614), .C0(n8_adj_1478), .B0(n18615), .A0(n18760), .DI1(n27), 
    .DI0(n28), .CLK(clk), .F0(n28), .Q0(count_beat_2), .F1(n27), 
    .Q1(count_beat_3));
  SLICE_535 SLICE_535( .D1(n18614), .C1(n8_adj_1478), .B1(n18615), .A1(n18760), 
    .D0(count_beat_4), .C0(n18605), .B0(n4689), .A0(count_beat_3), 
    .DI0(n26_adj_1479), .CLK(clk), .F0(n26_adj_1479), .Q0(count_beat_4), 
    .F1(n18605));
  SLICE_536 SLICE_536( .B1(\u_key_2/n10228 ), .A1(\u_key_2/delay_cnt_0 ), 
    .B0(\u_key_1/n10222 ), .A0(\u_key_1/delay_cnt_0 ), 
    .DI1(\u_key_2/key_flag_N_639 ), .DI0(\u_key_1/key_flag_N_639 ), .CLK(clk), 
    .F0(\u_key_1/key_flag_N_639 ), .Q0(key_flag_0), 
    .F1(\u_key_2/key_flag_N_639 ), .Q1(key_flag_1));
  SLICE_537 SLICE_537( .B1(\u_key_4/n10225 ), .A1(\u_key_4/delay_cnt_0 ), 
    .B0(\u_key_3/n10234 ), .A0(\u_key_3/delay_cnt_0 ), 
    .DI1(\u_key_4/key_flag_N_639 ), .DI0(\u_key_3/key_flag_N_639 ), .CLK(clk), 
    .F0(\u_key_3/key_flag_N_639 ), .Q0(key_flag_2), 
    .F1(\u_key_4/key_flag_N_639 ), .Q1(key_flag_3));
  SLICE_538 SLICE_538( .B1(\u_key_6/n10231 ), .A1(\u_key_6/delay_cnt_0 ), 
    .B0(\u_key_5/n10219 ), .A0(\u_key_5/delay_cnt_0 ), 
    .DI1(\u_key_6/key_flag_N_639 ), .DI0(\u_key_5/key_flag_N_639 ), .CLK(clk), 
    .F0(\u_key_5/key_flag_N_639 ), .Q0(key_flag_4), 
    .F1(\u_key_6/key_flag_N_639 ), .Q1(key_flag_5));
  SLICE_539 SLICE_539( .B1(\u_key_8/n10240 ), .A1(\u_key_8/delay_cnt_0 ), 
    .B0(\u_key_7/n10237 ), .A0(\u_key_7/delay_cnt_0 ), 
    .DI1(\u_key_8/key_flag_N_639 ), .DI0(\u_key_7/key_flag_N_639 ), .CLK(clk), 
    .F0(\u_key_7/key_flag_N_639 ), .Q0(key_flag_6), 
    .F1(\u_key_8/key_flag_N_639 ), .Q1(key_flag_7));
  SLICE_540 SLICE_540( .B1(\u_key_10/n10246 ), .A1(\u_key_10/delay_cnt_0 ), 
    .B0(\u_key_9/n10243 ), .A0(\u_key_9/delay_cnt_0 ), 
    .DI1(\u_key_10/key_flag_N_639 ), .DI0(\u_key_9/key_flag_N_639 ), .CLK(clk), 
    .F0(\u_key_9/key_flag_N_639 ), .Q0(key_flag_8), 
    .F1(\u_key_10/key_flag_N_639 ), .Q1(key_flag_9));
  SLICE_541 SLICE_541( .B1(\u_key_12/n10252 ), .A1(\u_key_12/delay_cnt_0 ), 
    .B0(\u_key_11/n10249 ), .A0(\u_key_11/delay_cnt_0 ), 
    .DI1(\u_key_12/key_flag_N_639 ), .DI0(\u_key_11/key_flag_N_639 ), 
    .CLK(clk), .F0(\u_key_11/key_flag_N_639 ), .Q0(key_flag_10), 
    .F1(\u_key_12/key_flag_N_639 ), .Q1(key_flag_11));
  SLICE_542 SLICE_542( .B1(\u_key_14/n10258 ), .A1(\u_key_14/delay_cnt_0 ), 
    .B0(\u_key_13/n10255 ), .A0(\u_key_13/delay_cnt_0 ), 
    .DI1(\u_key_14/key_flag_N_639 ), .DI0(\u_key_13/key_flag_N_639 ), 
    .CLK(clk), .F0(\u_key_13/key_flag_N_639 ), .Q0(key_flag_12), 
    .F1(\u_key_14/key_flag_N_639 ), .Q1(key_flag_13));
  u_key_15_SLICE_543 \u_key_15/SLICE_543 ( .D1(\u_key_15/delay_cnt_2 ), 
    .C1(\u_key_15/delay_cnt_18 ), .B1(\u_key_15/delay_cnt_1 ), 
    .A1(\u_key_15/delay_cnt_17 ), .B0(\u_key_15/n10261 ), 
    .A0(\u_key_15/delay_cnt_0 ), .DI0(\u_key_15/key_flag_N_639 ), .CLK(clk), 
    .F0(\u_key_15/key_flag_N_639 ), .Q0(key_flag_14), .F1(\u_key_15/n50 ));
  u_key_state_SLICE_544 \u_key_state/SLICE_544 ( 
    .D1(\u_key_state/delay_cnt_2 ), .C1(\u_key_state/delay_cnt_18 ), 
    .B1(\u_key_state/delay_cnt_1 ), .A1(\u_key_state/delay_cnt_17 ), 
    .B0(\u_key_state/n10264 ), .A0(\u_key_state/delay_cnt_0 ), 
    .DI0(\u_key_state/key_flag_N_639 ), .CLK(clk), 
    .F0(\u_key_state/key_flag_N_639 ), .Q0(key_state_flag), 
    .F1(\u_key_state/n50 ));
  SLICE_561 SLICE_561( .C0(n19846), .B0(key_state_value), .A0(key_state_flag), 
    .DI0(n17430), .M1(n17430), .CLK(clk), .F0(n17430), .Q0(n19846), .Q1(stat));
  SLICE_562 SLICE_562( .C1(count_note_7), .B1(n17219), .A1(n17218), 
    .C0(count_note_7), .B0(n17209), .A0(n17208), .DI1(note_5_N_45_1), 
    .DI0(note_5_N_45_0), .CE(clk_N_168_enable_456), .CLK(clk), 
    .F0(note_5_N_45_0), .Q0(note_0), .F1(note_5_N_45_1), .Q1(note_1));
  SLICE_563 SLICE_563( .C1(count_note_6), .B1(n18847), .A1(n18462), 
    .C0(count_note_7), .B0(n17250), .A0(n17249), .DI0(note_5_N_45_2), 
    .CE(clk_N_168_enable_456), .CLK(clk), .F0(note_5_N_45_2), .Q0(note_2), 
    .F1(n17250));
  SLICE_564 SLICE_564( .D1(count_note_6), .C1(count_note_7), .B1(n94), 
    .A1(n17132), .C0(count_note_7), .B0(n17118), .A0(n17117), 
    .DI1(note_5_N_45_4), .DI0(note_5_N_45_3), .CE(clk_N_168_enable_534), 
    .CLK(clk), .F0(note_5_N_45_3), .Q0(note_3), .F1(note_5_N_45_4), 
    .Q1(note_4));
  u_speaker_SLICE_565 \u_speaker/SLICE_565 ( .D1(n895), .C1(n891), .B1(n887), 
    .A1(\u_speaker/n3909 ), .D0(\u_speaker/n18712 ), .C0(\u_speaker/n879 ), 
    .B0(n18713), .A0(\u_speaker/n3924 ), .DI0(\u_speaker/rom2_4_N_397_0 ), 
    .LSR(n9292), .CLK(\u_speaker/rom2_4__N_297 ), 
    .F0(\u_speaker/rom2_4_N_397_0 ), .Q0(rom2_0), .F1(\u_speaker/n3924 ));
  u_speaker_SLICE_566 \u_speaker/SLICE_566 ( .D1(n907), 
    .C1(\u_speaker/n18661 ), .B1(\u_speaker/n18662 ), .A1(\u_speaker/n903 ), 
    .D0(n891), .C0(\u_speaker/n16899 ), .B0(\u_speaker/n18663 ), .A0(n887), 
    .DI0(\u_speaker/n16903 ), .LSR(\u_speaker/n18643 ), 
    .CLK(\u_speaker/rom2_4__N_297 ), .F0(\u_speaker/n16903 ), .Q0(rom2_1), 
    .F1(\u_speaker/n16899 ));
  u_speaker_SLICE_567 \u_speaker/SLICE_567 ( .D1(n18815), .C1(n6_adj_1446), 
    .B1(\u_speaker/rom1_1 ), .A1(\u_speaker/rom1_0 ), .D0(\u_speaker/n18660 ), 
    .C0(\u_speaker/n903 ), .B0(\u_speaker/n18661 ), .A0(n907), 
    .DI0(\u_speaker/n15938 ), .LSR(\u_speaker/n16930 ), 
    .CLK(\u_speaker/rom2_4__N_297 ), .F0(\u_speaker/n15938 ), .Q0(rom2_3), 
    .F1(\u_speaker/n903 ));
  u_buzzer_SLICE_569 \u_buzzer/SLICE_569 ( .D1(CNT_4), .C1(CNT_16), 
    .B1(CNT_15), .A1(CNT_17), .B0(CNT_17), .A0(\u_buzzer/n34 ), 
    .DI0(\u_buzzer/PWM_N_764 ), .LSR(\u_buzzer/n15951 ), .CLK(clk), 
    .F0(\u_buzzer/PWM_N_764 ), .Q0(\u_buzzer/PWM ), 
    .F1(\u_buzzer/n31_adj_826 ));
  SLICE_570 SLICE_570( .D1(key_value_11), .C1(key_flag_11), .B1(key_flag_12), 
    .A1(key_value_12), .D0(n19846), .C0(n18623), .B0(n18709), 
    .A0(\u_buzzer/n14162 ), .DI0(\u_buzzer/cycle_17_N_663_0 ), 
    .CE(\u_buzzer/clk_N_168_enable_15 ), .CLK(clk), 
    .F0(\u_buzzer/cycle_17_N_663_0 ), .Q0(\u_buzzer/cycle_0 ), .F1(n18709));
  u_buzzer_SLICE_571 \u_buzzer/SLICE_571 ( .D1(n18769), .C1(n417), .B1(n19846), 
    .A1(n18808), .D0(n18808), .C0(n3_adj_1473), .B0(note_1), .A0(note_0), 
    .DI0(\u_buzzer/cycle_17_N_663_1 ), .M0(n17110), 
    .CE(\u_buzzer/clk_N_168_enable_508 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_1 ), .Q0(\u_buzzer/cycle_1 ));
  SLICE_572 SLICE_572( .D1(n18807), .C1(n18772), .B1(\u_speaker/n18656 ), 
    .A1(n18808), .D0(n18720), .C0(n16959), .B0(n269), .A0(n18709), 
    .DI0(cycle_17_N_663_2), .M0(n19846), .CE(clk_N_168_enable_507), .CLK(clk), 
    .OFX0(cycle_17_N_663_2), .Q0(\u_buzzer/cycle_2 ));
  u_buzzer_SLICE_573 \u_buzzer/SLICE_573 ( .D1(n18808), .C1(n18807), 
    .B1(note_0), .A1(note_1), .D0(n18709), .C0(n18771), .B0(n331), .A0(n18768), 
    .DI0(\u_buzzer/cycle_17_N_663_3 ), .M0(n19846), 
    .CE(\u_buzzer/clk_N_168_enable_508 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_3 ), .Q0(\u_buzzer/cycle_3 ));
  u_buzzer_SLICE_574 \u_buzzer/SLICE_574 ( .D1(n18734), .C1(n414), .B1(n19846), 
    .A1(n18808), .C0(n18808), .B0(note_1), .A0(note_0), 
    .DI0(\u_buzzer/cycle_17_N_663_4 ), .M0(n17110), 
    .CE(\u_buzzer/clk_N_168_enable_509 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_4 ), .Q0(\u_buzzer/cycle_4 ));
  u_buzzer_SLICE_575 \u_buzzer/SLICE_575 ( .D1(n18808), .C1(n18737), 
    .B1(n18803), .A1(n18807), .D0(n18651), .C0(n18763), .B0(n18755), 
    .A0(n18620), .DI0(\u_buzzer/cycle_17_N_663_5 ), .M0(n19846), 
    .CE(\u_buzzer/clk_N_168_enable_510 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_5 ), .Q0(\u_buzzer/cycle_5 ));
  u_buzzer_SLICE_576 \u_buzzer/SLICE_576 ( .D1(n12983), .C1(n18807), 
    .B1(n18808), .A1(note_1), .D0(\u_buzzer/n4 ), .C0(n18620), .B0(n18763), 
    .A0(n18706), .DI0(\u_buzzer/cycle_17_N_663_6 ), .M0(n19846), 
    .CE(\u_buzzer/clk_N_168_enable_511 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_6 ), .Q0(\u_buzzer/cycle_6 ));
  SLICE_577 SLICE_577( .D1(n18807), .C1(n18734), .B1(\u_speaker/n3_adj_858 ), 
    .A1(n18808), .D0(n16917), .C0(n18761), .B0(\u_speaker/n4 ), .A0(n18763), 
    .DI0(cycle_17_N_663_7), .M0(n19846), .CE(clk_N_168_enable_512), .CLK(clk), 
    .OFX0(cycle_17_N_663_7), .Q0(\u_buzzer/cycle_7 ));
  u_buzzer_SLICE_578 \u_buzzer/SLICE_578 ( .D1(n18697), .C1(n18807), 
    .B1(n18737), .A1(note_0), .D0(n18761), .C0(n18667), .B0(n18755), 
    .A0(n18763), .DI0(\u_buzzer/cycle_17_N_663_8 ), .M0(n19846), 
    .CE(\u_buzzer/clk_N_168_enable_513 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_8 ), .Q0(\u_buzzer/cycle_8 ));
  u_buzzer_SLICE_579 \u_buzzer/SLICE_579 ( .D1(n262), .C1(n18610), .B1(n19846), 
    .A1(n18808), .D0(n18808), .C0(n3_adj_1473), .B0(note_1), .A0(note_0), 
    .DI0(\u_buzzer/cycle_17_N_663_9 ), .M0(n17110), 
    .CE(\u_buzzer/clk_N_168_enable_514 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_9 ), .Q0(\u_buzzer/cycle_9 ));
  SLICE_580 SLICE_580( .D1(n9757), .C1(n18807), .B1(note_0), 
    .A1(\u_buzzer/n7_adj_819 ), .D0(n10337), .C0(n18612), .B0(n18756), 
    .A0(n18763), .DI0(cycle_17_N_663_10), .M0(n19846), 
    .CE(\u_buzzer/clk_N_168_enable_515 ), .CLK(clk), .OFX0(cycle_17_N_663_10), 
    .Q0(\u_buzzer/cycle_10 ));
  u_buzzer_SLICE_581 \u_buzzer/SLICE_581 ( .D1(n3), 
    .C1(\u_speaker/n14_adj_855 ), .B1(n18807), .A1(n18808), .D0(n18763), 
    .C0(n344), .B0(n18761), .A0(n18771), .DI0(\u_buzzer/cycle_17_N_663_11 ), 
    .M0(n19846), .CE(\u_buzzer/clk_N_168_enable_516 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_11 ), .Q0(\u_buzzer/cycle_11 ));
  u_buzzer_SLICE_582 \u_buzzer/SLICE_582 ( .D1(n3_adj_1473), .C1(n14_adj_1471), 
    .B1(n18807), .A1(n18808), .D0(n10160), .C0(n16909), .B0(n9654), 
    .A0(n18763), .DI0(\u_buzzer/cycle_17_N_663_12 ), .M0(n19846), 
    .CE(\u_buzzer/clk_N_168_enable_517 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_12 ), .Q0(\u_buzzer/cycle_12 ));
  u_buzzer_SLICE_583 \u_buzzer/SLICE_583 ( .D1(\u_speaker/n18732 ), .C1(n405), 
    .B1(n19846), .A1(n18808), .D0(note_0), .C0(n18737), .B0(note_1), 
    .A0(n18808), .DI0(\u_buzzer/cycle_17_N_663_13 ), .M0(n17110), 
    .CE(clk_N_168_enable_518), .CLK(clk), .OFX0(\u_buzzer/cycle_17_N_663_13 ), 
    .Q0(\u_buzzer/cycle_13 ));
  u_buzzer_SLICE_584 \u_buzzer/SLICE_584 ( .D1(n18697), .C1(\u_speaker/n362 ), 
    .B1(n18709), .A1(n19846), .D0(n18808), .C0(n3), .B0(note_1), .A0(note_0), 
    .DI0(\u_buzzer/cycle_17_N_663_14 ), .M0(n17110), 
    .CE(\u_buzzer/clk_N_168_enable_520 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_14 ), .Q0(\u_buzzer/cycle_14 ));
  u_buzzer_SLICE_585 \u_buzzer/SLICE_585 ( .D1(n18709), 
    .C1(\u_speaker/n16_adj_1086 ), .B1(n19846), .A1(n18808), .C0(n18808), 
    .B0(note_0), .A0(note_1), .DI0(\u_buzzer/cycle_17_N_663_15 ), .M0(n17110), 
    .CE(\u_buzzer/clk_N_168_enable_520 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_15 ), .Q0(\u_buzzer/cycle_15 ));
  u_buzzer_SLICE_586 \u_buzzer/SLICE_586 ( .C1(n18610), .B1(n19846), 
    .A1(n18808), .D0(n18737), .C0(note_1), .B0(note_0), .A0(n18808), 
    .DI0(\u_buzzer/cycle_17_N_663_16 ), .M0(n17110), 
    .CE(\u_buzzer/clk_N_168_enable_522 ), .CLK(clk), 
    .OFX0(\u_buzzer/cycle_17_N_663_16 ), .Q0(\u_buzzer/cycle_16 ));
  SLICE_587 SLICE_587( .C1(n18808), .B1(note_0), .A1(note_1), .D0(n18610), 
    .C0(\u_speaker/n7_adj_849 ), .B0(n19846), .A0(n18807), 
    .DI0(cycle_17_N_663_17), .CE(\u_buzzer/clk_N_168_enable_522 ), .CLK(clk), 
    .F0(cycle_17_N_663_17), .Q0(\u_buzzer/cycle_17 ), 
    .F1(\u_speaker/n7_adj_849 ));
  SLICE_588 SLICE_588( .D1(note_3), .C1(note_2), .B1(note_4), .A1(n18803), 
    .D0(note_2), .C0(n18803), .B0(note_3), .A0(note_4), 
    .DI1(yinjie_box_2_N_394_1), .DI0(yinjie_box_2_N_394_0), .CE(stat), 
    .CLK(clk), .F0(yinjie_box_2_N_394_0), .Q0(\u_buzzer/yinjie_box_0 ), 
    .F1(yinjie_box_2_N_394_1), .Q1(\u_buzzer/yinjie_box_1 ));
  u_key_1_SLICE_589 \u_key_1/SLICE_589 ( .D1(\u_key_1/n50 ), 
    .C1(\u_key_1/n49 ), .B1(\u_key_1/n60 ), .A1(\u_key_1/n55 ), 
    .C0(\u_key_1/n41 ), .B0(\u_key_1/n10222 ), .A0(\u_key_1/delay_cnt_0 ), 
    .DI0(\u_key_1/n10368 ), .LSR(\u_key_1/n18802 ), .CLK(clk), 
    .F0(\u_key_1/n10368 ), .Q0(\u_key_1/delay_cnt_0 ), .F1(\u_key_1/n10222 ));
  u_key_1_SLICE_590 \u_key_1/SLICE_590 ( .C1(\u_key_1/n32 ), .B1(key_c_0), 
    .A1(\u_key_1/key_reg ), .C0(\u_key_1/n35 ), .B0(key_c_0), 
    .A0(\u_key_1/key_reg ), .DI1(\u_key_1/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_1/delay_cnt_31_N_570_6 ), .CE(\u_key_1/clk_N_168_enable_445 ), 
    .CLK(clk), .F0(\u_key_1/delay_cnt_31_N_570_6 ), .Q0(\u_key_1/delay_cnt_6 ), 
    .F1(\u_key_1/delay_cnt_31_N_570_9 ), .Q1(\u_key_1/delay_cnt_9 ));
  u_key_1_SLICE_591 \u_key_1/SLICE_591 ( .C1(\u_key_1/n25 ), .B1(key_c_0), 
    .A1(\u_key_1/key_reg ), .C0(\u_key_1/n27 ), .B0(key_c_0), 
    .A0(\u_key_1/key_reg ), .DI1(\u_key_1/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_1/delay_cnt_31_N_570_14 ), .CE(\u_key_1/clk_N_168_enable_445 ), 
    .CLK(clk), .F0(\u_key_1/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_1/delay_cnt_14 ), .F1(\u_key_1/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_1/delay_cnt_16 ));
  u_key_1_SLICE_592 \u_key_1/SLICE_592 ( .C1(\u_key_1/n23 ), .B1(key_c_0), 
    .A1(\u_key_1/key_reg ), .C0(\u_key_1/n24 ), .B0(key_c_0), 
    .A0(\u_key_1/key_reg ), .DI1(\u_key_1/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_1/delay_cnt_31_N_570_17 ), .CE(\u_key_1/clk_N_168_enable_445 ), 
    .CLK(clk), .F0(\u_key_1/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_1/delay_cnt_17 ), .F1(\u_key_1/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_1/delay_cnt_18 ));
  u_key_1_SLICE_593 \u_key_1/SLICE_593 ( .B1(key_c_0), .A1(\u_key_1/key_reg ), 
    .C0(\u_key_1/n22 ), .B0(key_c_0), .A0(\u_key_1/key_reg ), 
    .DI0(\u_key_1/delay_cnt_31_N_570_19 ), .CE(\u_key_1/clk_N_168_enable_445 ), 
    .CLK(clk), .F0(\u_key_1/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_1/delay_cnt_19 ), .F1(\u_key_1/n18802 ));
  u_key_10_SLICE_595 \u_key_10/SLICE_595 ( .D1(\u_key_10/delay_cnt_0 ), 
    .C1(\u_key_10/n10246 ), .B1(key_c_9), .A1(\u_key_10/key_reg ), 
    .C0(\u_key_10/n41 ), .B0(\u_key_10/n10246 ), .A0(\u_key_10/delay_cnt_0 ), 
    .DI0(\u_key_10/n10386 ), .LSR(\u_key_10/n18793 ), .CLK(clk), 
    .F0(\u_key_10/n10386 ), .Q0(\u_key_10/delay_cnt_0 ), 
    .F1(\u_key_10/clk_N_168_enable_165 ));
  u_key_10_SLICE_596 \u_key_10/SLICE_596 ( .C1(\u_key_10/n32 ), .B1(key_c_9), 
    .A1(\u_key_10/key_reg ), .C0(\u_key_10/n35 ), .B0(key_c_9), 
    .A0(\u_key_10/key_reg ), .DI1(\u_key_10/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_10/delay_cnt_31_N_570_6 ), 
    .CE(\u_key_10/clk_N_168_enable_165 ), .CLK(clk), 
    .F0(\u_key_10/delay_cnt_31_N_570_6 ), .Q0(\u_key_10/delay_cnt_6 ), 
    .F1(\u_key_10/delay_cnt_31_N_570_9 ), .Q1(\u_key_10/delay_cnt_9 ));
  u_key_10_SLICE_597 \u_key_10/SLICE_597 ( .C1(\u_key_10/n25 ), .B1(key_c_9), 
    .A1(\u_key_10/key_reg ), .C0(\u_key_10/n27 ), .B0(key_c_9), 
    .A0(\u_key_10/key_reg ), .DI1(\u_key_10/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_10/delay_cnt_31_N_570_14 ), 
    .CE(\u_key_10/clk_N_168_enable_165 ), .CLK(clk), 
    .F0(\u_key_10/delay_cnt_31_N_570_14 ), .Q0(\u_key_10/delay_cnt_14 ), 
    .F1(\u_key_10/delay_cnt_31_N_570_16 ), .Q1(\u_key_10/delay_cnt_16 ));
  u_key_10_SLICE_598 \u_key_10/SLICE_598 ( .C1(\u_key_10/n23 ), .B1(key_c_9), 
    .A1(\u_key_10/key_reg ), .C0(\u_key_10/n24 ), .B0(key_c_9), 
    .A0(\u_key_10/key_reg ), .DI1(\u_key_10/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_10/delay_cnt_31_N_570_17 ), 
    .CE(\u_key_10/clk_N_168_enable_165 ), .CLK(clk), 
    .F0(\u_key_10/delay_cnt_31_N_570_17 ), .Q0(\u_key_10/delay_cnt_17 ), 
    .F1(\u_key_10/delay_cnt_31_N_570_18 ), .Q1(\u_key_10/delay_cnt_18 ));
  u_key_10_SLICE_599 \u_key_10/SLICE_599 ( .B1(key_c_9), 
    .A1(\u_key_10/key_reg ), .C0(\u_key_10/n22 ), .B0(key_c_9), 
    .A0(\u_key_10/key_reg ), .DI0(\u_key_10/delay_cnt_31_N_570_19 ), 
    .CE(\u_key_10/clk_N_168_enable_165 ), .CLK(clk), 
    .F0(\u_key_10/delay_cnt_31_N_570_19 ), .Q0(\u_key_10/delay_cnt_19 ), 
    .F1(\u_key_10/n18793 ));
  u_key_11_SLICE_601 \u_key_11/SLICE_601 ( .D1(\u_key_11/delay_cnt_0 ), 
    .C1(\u_key_11/n10249 ), .B1(key_c_10), .A1(\u_key_11/key_reg ), 
    .C0(\u_key_11/n41 ), .B0(\u_key_11/n10249 ), .A0(\u_key_11/delay_cnt_0 ), 
    .DI0(\u_key_11/n10388 ), .LSR(\u_key_11/n18792 ), .CLK(clk), 
    .F0(\u_key_11/n10388 ), .Q0(\u_key_11/delay_cnt_0 ), 
    .F1(\u_key_11/clk_N_168_enable_134 ));
  u_key_11_SLICE_602 \u_key_11/SLICE_602 ( .C1(\u_key_11/n32 ), .B1(key_c_10), 
    .A1(\u_key_11/key_reg ), .C0(\u_key_11/n35 ), .B0(key_c_10), 
    .A0(\u_key_11/key_reg ), .DI1(\u_key_11/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_11/delay_cnt_31_N_570_6 ), 
    .CE(\u_key_11/clk_N_168_enable_134 ), .CLK(clk), 
    .F0(\u_key_11/delay_cnt_31_N_570_6 ), .Q0(\u_key_11/delay_cnt_6 ), 
    .F1(\u_key_11/delay_cnt_31_N_570_9 ), .Q1(\u_key_11/delay_cnt_9 ));
  u_key_11_SLICE_603 \u_key_11/SLICE_603 ( .C1(\u_key_11/n25 ), .B1(key_c_10), 
    .A1(\u_key_11/key_reg ), .C0(\u_key_11/n27 ), .B0(key_c_10), 
    .A0(\u_key_11/key_reg ), .DI1(\u_key_11/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_11/delay_cnt_31_N_570_14 ), 
    .CE(\u_key_11/clk_N_168_enable_134 ), .CLK(clk), 
    .F0(\u_key_11/delay_cnt_31_N_570_14 ), .Q0(\u_key_11/delay_cnt_14 ), 
    .F1(\u_key_11/delay_cnt_31_N_570_16 ), .Q1(\u_key_11/delay_cnt_16 ));
  u_key_11_SLICE_604 \u_key_11/SLICE_604 ( .C1(\u_key_11/n23 ), .B1(key_c_10), 
    .A1(\u_key_11/key_reg ), .C0(\u_key_11/n24 ), .B0(key_c_10), 
    .A0(\u_key_11/key_reg ), .DI1(\u_key_11/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_11/delay_cnt_31_N_570_17 ), 
    .CE(\u_key_11/clk_N_168_enable_134 ), .CLK(clk), 
    .F0(\u_key_11/delay_cnt_31_N_570_17 ), .Q0(\u_key_11/delay_cnt_17 ), 
    .F1(\u_key_11/delay_cnt_31_N_570_18 ), .Q1(\u_key_11/delay_cnt_18 ));
  u_key_11_SLICE_605 \u_key_11/SLICE_605 ( .B1(key_c_10), 
    .A1(\u_key_11/key_reg ), .C0(\u_key_11/n22 ), .B0(key_c_10), 
    .A0(\u_key_11/key_reg ), .DI0(\u_key_11/delay_cnt_31_N_570_19 ), 
    .CE(\u_key_11/clk_N_168_enable_134 ), .CLK(clk), 
    .F0(\u_key_11/delay_cnt_31_N_570_19 ), .Q0(\u_key_11/delay_cnt_19 ), 
    .F1(\u_key_11/n18792 ));
  u_key_12_SLICE_607 \u_key_12/SLICE_607 ( .D1(\u_key_12/delay_cnt_0 ), 
    .C1(\u_key_12/n10252 ), .B1(key_c_11), .A1(\u_key_12/key_reg ), 
    .C0(\u_key_12/n41 ), .B0(\u_key_12/n10252 ), .A0(\u_key_12/delay_cnt_0 ), 
    .DI0(\u_key_12/n10390 ), .LSR(\u_key_12/n18791 ), .CLK(clk), 
    .F0(\u_key_12/n10390 ), .Q0(\u_key_12/delay_cnt_0 ), 
    .F1(\u_key_12/clk_N_168_enable_103 ));
  u_key_12_SLICE_608 \u_key_12/SLICE_608 ( .C1(\u_key_12/n32 ), .B1(key_c_11), 
    .A1(\u_key_12/key_reg ), .C0(\u_key_12/n35 ), .B0(key_c_11), 
    .A0(\u_key_12/key_reg ), .DI1(\u_key_12/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_12/delay_cnt_31_N_570_6 ), 
    .CE(\u_key_12/clk_N_168_enable_103 ), .CLK(clk), 
    .F0(\u_key_12/delay_cnt_31_N_570_6 ), .Q0(\u_key_12/delay_cnt_6 ), 
    .F1(\u_key_12/delay_cnt_31_N_570_9 ), .Q1(\u_key_12/delay_cnt_9 ));
  u_key_12_SLICE_609 \u_key_12/SLICE_609 ( .C1(\u_key_12/n25 ), .B1(key_c_11), 
    .A1(\u_key_12/key_reg ), .C0(\u_key_12/n27 ), .B0(key_c_11), 
    .A0(\u_key_12/key_reg ), .DI1(\u_key_12/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_12/delay_cnt_31_N_570_14 ), 
    .CE(\u_key_12/clk_N_168_enable_103 ), .CLK(clk), 
    .F0(\u_key_12/delay_cnt_31_N_570_14 ), .Q0(\u_key_12/delay_cnt_14 ), 
    .F1(\u_key_12/delay_cnt_31_N_570_16 ), .Q1(\u_key_12/delay_cnt_16 ));
  u_key_12_SLICE_610 \u_key_12/SLICE_610 ( .C1(\u_key_12/n23 ), .B1(key_c_11), 
    .A1(\u_key_12/key_reg ), .C0(\u_key_12/n24 ), .B0(key_c_11), 
    .A0(\u_key_12/key_reg ), .DI1(\u_key_12/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_12/delay_cnt_31_N_570_17 ), 
    .CE(\u_key_12/clk_N_168_enable_103 ), .CLK(clk), 
    .F0(\u_key_12/delay_cnt_31_N_570_17 ), .Q0(\u_key_12/delay_cnt_17 ), 
    .F1(\u_key_12/delay_cnt_31_N_570_18 ), .Q1(\u_key_12/delay_cnt_18 ));
  u_key_12_SLICE_611 \u_key_12/SLICE_611 ( .B1(key_c_11), 
    .A1(\u_key_12/key_reg ), .C0(\u_key_12/n22 ), .B0(key_c_11), 
    .A0(\u_key_12/key_reg ), .DI0(\u_key_12/delay_cnt_31_N_570_19 ), 
    .CE(\u_key_12/clk_N_168_enable_103 ), .CLK(clk), 
    .F0(\u_key_12/delay_cnt_31_N_570_19 ), .Q0(\u_key_12/delay_cnt_19 ), 
    .F1(\u_key_12/n18791 ));
  u_key_13_SLICE_613 \u_key_13/SLICE_613 ( .D1(\u_key_13/delay_cnt_0 ), 
    .C1(\u_key_13/n10255 ), .B1(key_c_12), .A1(\u_key_13/key_reg ), 
    .C0(\u_key_13/n41 ), .B0(\u_key_13/n10255 ), .A0(\u_key_13/delay_cnt_0 ), 
    .DI0(\u_key_13/n10392 ), .LSR(\u_key_13/n18790 ), .CLK(clk), 
    .F0(\u_key_13/n10392 ), .Q0(\u_key_13/delay_cnt_0 ), 
    .F1(\u_key_13/clk_N_168_enable_72 ));
  u_key_13_SLICE_614 \u_key_13/SLICE_614 ( .C1(\u_key_13/n32 ), .B1(key_c_12), 
    .A1(\u_key_13/key_reg ), .C0(\u_key_13/n35 ), .B0(key_c_12), 
    .A0(\u_key_13/key_reg ), .DI1(\u_key_13/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_13/delay_cnt_31_N_570_6 ), .CE(\u_key_13/clk_N_168_enable_72 ), 
    .CLK(clk), .F0(\u_key_13/delay_cnt_31_N_570_6 ), 
    .Q0(\u_key_13/delay_cnt_6 ), .F1(\u_key_13/delay_cnt_31_N_570_9 ), 
    .Q1(\u_key_13/delay_cnt_9 ));
  u_key_13_SLICE_615 \u_key_13/SLICE_615 ( .C1(\u_key_13/n25 ), .B1(key_c_12), 
    .A1(\u_key_13/key_reg ), .C0(\u_key_13/n27 ), .B0(key_c_12), 
    .A0(\u_key_13/key_reg ), .DI1(\u_key_13/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_13/delay_cnt_31_N_570_14 ), 
    .CE(\u_key_13/clk_N_168_enable_72 ), .CLK(clk), 
    .F0(\u_key_13/delay_cnt_31_N_570_14 ), .Q0(\u_key_13/delay_cnt_14 ), 
    .F1(\u_key_13/delay_cnt_31_N_570_16 ), .Q1(\u_key_13/delay_cnt_16 ));
  u_key_13_SLICE_616 \u_key_13/SLICE_616 ( .C1(\u_key_13/n23 ), .B1(key_c_12), 
    .A1(\u_key_13/key_reg ), .C0(\u_key_13/n24 ), .B0(key_c_12), 
    .A0(\u_key_13/key_reg ), .DI1(\u_key_13/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_13/delay_cnt_31_N_570_17 ), 
    .CE(\u_key_13/clk_N_168_enable_72 ), .CLK(clk), 
    .F0(\u_key_13/delay_cnt_31_N_570_17 ), .Q0(\u_key_13/delay_cnt_17 ), 
    .F1(\u_key_13/delay_cnt_31_N_570_18 ), .Q1(\u_key_13/delay_cnt_18 ));
  u_key_13_SLICE_617 \u_key_13/SLICE_617 ( .B1(key_c_12), 
    .A1(\u_key_13/key_reg ), .C0(\u_key_13/n22 ), .B0(key_c_12), 
    .A0(\u_key_13/key_reg ), .DI0(\u_key_13/delay_cnt_31_N_570_19 ), 
    .CE(\u_key_13/clk_N_168_enable_72 ), .CLK(clk), 
    .F0(\u_key_13/delay_cnt_31_N_570_19 ), .Q0(\u_key_13/delay_cnt_19 ), 
    .F1(\u_key_13/n18790 ));
  u_key_14_SLICE_619 \u_key_14/SLICE_619 ( .D1(\u_key_14/delay_cnt_0 ), 
    .C1(\u_key_14/n10258 ), .B1(key_c_13), .A1(\u_key_14/key_reg ), 
    .C0(\u_key_14/n41 ), .B0(\u_key_14/n10258 ), .A0(\u_key_14/delay_cnt_0 ), 
    .DI0(\u_key_14/n10394 ), .LSR(\u_key_14/n18789 ), .CLK(clk), 
    .F0(\u_key_14/n10394 ), .Q0(\u_key_14/delay_cnt_0 ), 
    .F1(\u_key_14/clk_N_168_enable_41 ));
  u_key_14_SLICE_620 \u_key_14/SLICE_620 ( .C1(\u_key_14/n32 ), .B1(key_c_13), 
    .A1(\u_key_14/key_reg ), .C0(\u_key_14/n35 ), .B0(key_c_13), 
    .A0(\u_key_14/key_reg ), .DI1(\u_key_14/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_14/delay_cnt_31_N_570_6 ), .CE(\u_key_14/clk_N_168_enable_41 ), 
    .CLK(clk), .F0(\u_key_14/delay_cnt_31_N_570_6 ), 
    .Q0(\u_key_14/delay_cnt_6 ), .F1(\u_key_14/delay_cnt_31_N_570_9 ), 
    .Q1(\u_key_14/delay_cnt_9 ));
  u_key_14_SLICE_621 \u_key_14/SLICE_621 ( .C1(\u_key_14/n25 ), .B1(key_c_13), 
    .A1(\u_key_14/key_reg ), .C0(\u_key_14/n27 ), .B0(key_c_13), 
    .A0(\u_key_14/key_reg ), .DI1(\u_key_14/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_14/delay_cnt_31_N_570_14 ), 
    .CE(\u_key_14/clk_N_168_enable_41 ), .CLK(clk), 
    .F0(\u_key_14/delay_cnt_31_N_570_14 ), .Q0(\u_key_14/delay_cnt_14 ), 
    .F1(\u_key_14/delay_cnt_31_N_570_16 ), .Q1(\u_key_14/delay_cnt_16 ));
  u_key_14_SLICE_622 \u_key_14/SLICE_622 ( .C1(\u_key_14/n23 ), .B1(key_c_13), 
    .A1(\u_key_14/key_reg ), .C0(\u_key_14/n24 ), .B0(key_c_13), 
    .A0(\u_key_14/key_reg ), .DI1(\u_key_14/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_14/delay_cnt_31_N_570_17 ), 
    .CE(\u_key_14/clk_N_168_enable_41 ), .CLK(clk), 
    .F0(\u_key_14/delay_cnt_31_N_570_17 ), .Q0(\u_key_14/delay_cnt_17 ), 
    .F1(\u_key_14/delay_cnt_31_N_570_18 ), .Q1(\u_key_14/delay_cnt_18 ));
  u_key_14_SLICE_623 \u_key_14/SLICE_623 ( .B1(key_c_13), 
    .A1(\u_key_14/key_reg ), .C0(\u_key_14/n22 ), .B0(key_c_13), 
    .A0(\u_key_14/key_reg ), .DI0(\u_key_14/delay_cnt_31_N_570_19 ), 
    .CE(\u_key_14/clk_N_168_enable_41 ), .CLK(clk), 
    .F0(\u_key_14/delay_cnt_31_N_570_19 ), .Q0(\u_key_14/delay_cnt_19 ), 
    .F1(\u_key_14/n18789 ));
  u_key_15_SLICE_625 \u_key_15/SLICE_625 ( .B1(\u_key_15/n10261 ), 
    .A1(\u_key_15/delay_cnt_0 ), .C0(\u_key_15/n41 ), .B0(\u_key_15/n10261 ), 
    .A0(\u_key_15/delay_cnt_0 ), .DI0(\u_key_15/n10396 ), 
    .LSR(\u_key_15/n18728 ), .CLK(clk), .F0(\u_key_15/n10396 ), 
    .Q0(\u_key_15/delay_cnt_0 ), .F1(\u_key_15/clk_N_168_enable_531 ));
  u_key_15_SLICE_626 \u_key_15/SLICE_626 ( .C1(\u_key_15/n32 ), .B1(key_c_14), 
    .A1(\u_key_15/key_reg ), .C0(\u_key_15/n35 ), .B0(key_c_14), 
    .A0(\u_key_15/key_reg ), .DI1(\u_key_15/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_15/delay_cnt_31_N_570_6 ), 
    .CE(\u_key_15/clk_N_168_enable_462 ), .CLK(clk), 
    .F0(\u_key_15/delay_cnt_31_N_570_6 ), .Q0(\u_key_15/delay_cnt_6 ), 
    .F1(\u_key_15/delay_cnt_31_N_570_9 ), .Q1(\u_key_15/delay_cnt_9 ));
  u_key_15_SLICE_627 \u_key_15/SLICE_627 ( .C1(\u_key_15/n25 ), .B1(key_c_14), 
    .A1(\u_key_15/key_reg ), .C0(\u_key_15/n27 ), .B0(key_c_14), 
    .A0(\u_key_15/key_reg ), .DI1(\u_key_15/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_15/delay_cnt_31_N_570_14 ), 
    .CE(\u_key_15/clk_N_168_enable_462 ), .CLK(clk), 
    .F0(\u_key_15/delay_cnt_31_N_570_14 ), .Q0(\u_key_15/delay_cnt_14 ), 
    .F1(\u_key_15/delay_cnt_31_N_570_16 ), .Q1(\u_key_15/delay_cnt_16 ));
  u_key_15_SLICE_628 \u_key_15/SLICE_628 ( .C1(\u_key_15/n23 ), .B1(key_c_14), 
    .A1(\u_key_15/key_reg ), .C0(\u_key_15/n24 ), .B0(key_c_14), 
    .A0(\u_key_15/key_reg ), .DI1(\u_key_15/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_15/delay_cnt_31_N_570_17 ), 
    .CE(\u_key_15/clk_N_168_enable_462 ), .CLK(clk), 
    .F0(\u_key_15/delay_cnt_31_N_570_17 ), .Q0(\u_key_15/delay_cnt_17 ), 
    .F1(\u_key_15/delay_cnt_31_N_570_18 ), .Q1(\u_key_15/delay_cnt_18 ));
  u_key_15_SLICE_629 \u_key_15/SLICE_629 ( .B1(key_c_14), 
    .A1(\u_key_15/key_reg ), .C0(\u_key_15/n22 ), .B0(key_c_14), 
    .A0(\u_key_15/key_reg ), .DI0(\u_key_15/delay_cnt_31_N_570_19 ), 
    .CE(\u_key_15/clk_N_168_enable_462 ), .CLK(clk), 
    .F0(\u_key_15/delay_cnt_31_N_570_19 ), .Q0(\u_key_15/delay_cnt_19 ), 
    .F1(\u_key_15/n18728 ));
  u_key_2_SLICE_631 \u_key_2/SLICE_631 ( .D1(\u_key_2/n50 ), 
    .C1(\u_key_2/n49 ), .B1(\u_key_2/n60 ), .A1(\u_key_2/n55 ), 
    .C0(\u_key_2/n41 ), .B0(\u_key_2/n10228 ), .A0(\u_key_2/delay_cnt_0 ), 
    .DI0(\u_key_2/n10370 ), .LSR(\u_key_2/n18801 ), .CLK(clk), 
    .F0(\u_key_2/n10370 ), .Q0(\u_key_2/delay_cnt_0 ), .F1(\u_key_2/n10228 ));
  u_key_2_SLICE_632 \u_key_2/SLICE_632 ( .C1(\u_key_2/n32 ), .B1(key_c_1), 
    .A1(\u_key_2/key_reg ), .C0(\u_key_2/n35 ), .B0(key_c_1), 
    .A0(\u_key_2/key_reg ), .DI1(\u_key_2/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_2/delay_cnt_31_N_570_6 ), .CE(\u_key_2/clk_N_168_enable_414 ), 
    .CLK(clk), .F0(\u_key_2/delay_cnt_31_N_570_6 ), .Q0(\u_key_2/delay_cnt_6 ), 
    .F1(\u_key_2/delay_cnt_31_N_570_9 ), .Q1(\u_key_2/delay_cnt_9 ));
  u_key_2_SLICE_633 \u_key_2/SLICE_633 ( .C1(\u_key_2/n25 ), .B1(key_c_1), 
    .A1(\u_key_2/key_reg ), .C0(\u_key_2/n27 ), .B0(key_c_1), 
    .A0(\u_key_2/key_reg ), .DI1(\u_key_2/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_2/delay_cnt_31_N_570_14 ), .CE(\u_key_2/clk_N_168_enable_414 ), 
    .CLK(clk), .F0(\u_key_2/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_2/delay_cnt_14 ), .F1(\u_key_2/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_2/delay_cnt_16 ));
  u_key_2_SLICE_634 \u_key_2/SLICE_634 ( .C1(\u_key_2/n23 ), .B1(key_c_1), 
    .A1(\u_key_2/key_reg ), .C0(\u_key_2/n24 ), .B0(key_c_1), 
    .A0(\u_key_2/key_reg ), .DI1(\u_key_2/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_2/delay_cnt_31_N_570_17 ), .CE(\u_key_2/clk_N_168_enable_414 ), 
    .CLK(clk), .F0(\u_key_2/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_2/delay_cnt_17 ), .F1(\u_key_2/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_2/delay_cnt_18 ));
  u_key_2_SLICE_635 \u_key_2/SLICE_635 ( .B1(key_c_1), .A1(\u_key_2/key_reg ), 
    .C0(\u_key_2/n22 ), .B0(key_c_1), .A0(\u_key_2/key_reg ), 
    .DI0(\u_key_2/delay_cnt_31_N_570_19 ), .CE(\u_key_2/clk_N_168_enable_414 ), 
    .CLK(clk), .F0(\u_key_2/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_2/delay_cnt_19 ), .F1(\u_key_2/n18801 ));
  u_key_3_SLICE_637 \u_key_3/SLICE_637 ( .D1(\u_key_3/n50 ), 
    .C1(\u_key_3/n49 ), .B1(\u_key_3/n60 ), .A1(\u_key_3/n55 ), 
    .C0(\u_key_3/n41 ), .B0(\u_key_3/n10234 ), .A0(\u_key_3/delay_cnt_0 ), 
    .DI0(\u_key_3/n10372 ), .LSR(\u_key_3/n18800 ), .CLK(clk), 
    .F0(\u_key_3/n10372 ), .Q0(\u_key_3/delay_cnt_0 ), .F1(\u_key_3/n10234 ));
  u_key_3_SLICE_638 \u_key_3/SLICE_638 ( .C1(\u_key_3/n32 ), .B1(key_c_2), 
    .A1(\u_key_3/key_reg ), .C0(\u_key_3/n35 ), .B0(key_c_2), 
    .A0(\u_key_3/key_reg ), .DI1(\u_key_3/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_3/delay_cnt_31_N_570_6 ), .CE(\u_key_3/clk_N_168_enable_382 ), 
    .CLK(clk), .F0(\u_key_3/delay_cnt_31_N_570_6 ), .Q0(\u_key_3/delay_cnt_6 ), 
    .F1(\u_key_3/delay_cnt_31_N_570_9 ), .Q1(\u_key_3/delay_cnt_9 ));
  u_key_3_SLICE_639 \u_key_3/SLICE_639 ( .C1(\u_key_3/n25 ), .B1(key_c_2), 
    .A1(\u_key_3/key_reg ), .C0(\u_key_3/n27 ), .B0(key_c_2), 
    .A0(\u_key_3/key_reg ), .DI1(\u_key_3/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_3/delay_cnt_31_N_570_14 ), .CE(\u_key_3/clk_N_168_enable_382 ), 
    .CLK(clk), .F0(\u_key_3/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_3/delay_cnt_14 ), .F1(\u_key_3/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_3/delay_cnt_16 ));
  u_key_3_SLICE_640 \u_key_3/SLICE_640 ( .C1(\u_key_3/n23 ), .B1(key_c_2), 
    .A1(\u_key_3/key_reg ), .C0(\u_key_3/n24 ), .B0(key_c_2), 
    .A0(\u_key_3/key_reg ), .DI1(\u_key_3/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_3/delay_cnt_31_N_570_17 ), .CE(\u_key_3/clk_N_168_enable_382 ), 
    .CLK(clk), .F0(\u_key_3/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_3/delay_cnt_17 ), .F1(\u_key_3/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_3/delay_cnt_18 ));
  u_key_3_SLICE_641 \u_key_3/SLICE_641 ( .B1(key_c_2), .A1(\u_key_3/key_reg ), 
    .C0(\u_key_3/n22 ), .B0(key_c_2), .A0(\u_key_3/key_reg ), 
    .DI0(\u_key_3/delay_cnt_31_N_570_19 ), .CE(\u_key_3/clk_N_168_enable_382 ), 
    .CLK(clk), .F0(\u_key_3/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_3/delay_cnt_19 ), .F1(\u_key_3/n18800 ));
  u_key_4_SLICE_643 \u_key_4/SLICE_643 ( .D1(\u_key_4/n50 ), 
    .C1(\u_key_4/n49 ), .B1(\u_key_4/n60 ), .A1(\u_key_4/n55 ), 
    .C0(\u_key_4/n41 ), .B0(\u_key_4/n10225 ), .A0(\u_key_4/delay_cnt_0 ), 
    .DI0(\u_key_4/n10374 ), .LSR(\u_key_4/n18799 ), .CLK(clk), 
    .F0(\u_key_4/n10374 ), .Q0(\u_key_4/delay_cnt_0 ), .F1(\u_key_4/n10225 ));
  u_key_4_SLICE_644 \u_key_4/SLICE_644 ( .C1(\u_key_4/n32 ), .B1(key_c_3), 
    .A1(\u_key_4/key_reg ), .C0(\u_key_4/n35 ), .B0(key_c_3), 
    .A0(\u_key_4/key_reg ), .DI1(\u_key_4/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_4/delay_cnt_31_N_570_6 ), .CE(\u_key_4/clk_N_168_enable_351 ), 
    .CLK(clk), .F0(\u_key_4/delay_cnt_31_N_570_6 ), .Q0(\u_key_4/delay_cnt_6 ), 
    .F1(\u_key_4/delay_cnt_31_N_570_9 ), .Q1(\u_key_4/delay_cnt_9 ));
  u_key_4_SLICE_645 \u_key_4/SLICE_645 ( .C1(\u_key_4/n25 ), .B1(key_c_3), 
    .A1(\u_key_4/key_reg ), .C0(\u_key_4/n27 ), .B0(key_c_3), 
    .A0(\u_key_4/key_reg ), .DI1(\u_key_4/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_4/delay_cnt_31_N_570_14 ), .CE(\u_key_4/clk_N_168_enable_351 ), 
    .CLK(clk), .F0(\u_key_4/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_4/delay_cnt_14 ), .F1(\u_key_4/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_4/delay_cnt_16 ));
  u_key_4_SLICE_646 \u_key_4/SLICE_646 ( .C1(\u_key_4/n23 ), .B1(key_c_3), 
    .A1(\u_key_4/key_reg ), .C0(\u_key_4/n24 ), .B0(key_c_3), 
    .A0(\u_key_4/key_reg ), .DI1(\u_key_4/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_4/delay_cnt_31_N_570_17 ), .CE(\u_key_4/clk_N_168_enable_351 ), 
    .CLK(clk), .F0(\u_key_4/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_4/delay_cnt_17 ), .F1(\u_key_4/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_4/delay_cnt_18 ));
  u_key_4_SLICE_647 \u_key_4/SLICE_647 ( .B1(key_c_3), .A1(\u_key_4/key_reg ), 
    .C0(\u_key_4/n22 ), .B0(key_c_3), .A0(\u_key_4/key_reg ), 
    .DI0(\u_key_4/delay_cnt_31_N_570_19 ), .CE(\u_key_4/clk_N_168_enable_351 ), 
    .CLK(clk), .F0(\u_key_4/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_4/delay_cnt_19 ), .F1(\u_key_4/n18799 ));
  u_key_5_SLICE_649 \u_key_5/SLICE_649 ( .D1(\u_key_5/n50 ), 
    .C1(\u_key_5/n49 ), .B1(\u_key_5/n60 ), .A1(\u_key_5/n55 ), 
    .C0(\u_key_5/n41 ), .B0(\u_key_5/n10219 ), .A0(\u_key_5/delay_cnt_0 ), 
    .DI0(\u_key_5/n10376 ), .LSR(\u_key_5/n18798 ), .CLK(clk), 
    .F0(\u_key_5/n10376 ), .Q0(\u_key_5/delay_cnt_0 ), .F1(\u_key_5/n10219 ));
  u_key_5_SLICE_650 \u_key_5/SLICE_650 ( .C1(\u_key_5/n32 ), .B1(key_c_4), 
    .A1(\u_key_5/key_reg ), .C0(\u_key_5/n35 ), .B0(key_c_4), 
    .A0(\u_key_5/key_reg ), .DI1(\u_key_5/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_5/delay_cnt_31_N_570_6 ), .CE(\u_key_5/clk_N_168_enable_320 ), 
    .CLK(clk), .F0(\u_key_5/delay_cnt_31_N_570_6 ), .Q0(\u_key_5/delay_cnt_6 ), 
    .F1(\u_key_5/delay_cnt_31_N_570_9 ), .Q1(\u_key_5/delay_cnt_9 ));
  u_key_5_SLICE_651 \u_key_5/SLICE_651 ( .C1(\u_key_5/n25 ), .B1(key_c_4), 
    .A1(\u_key_5/key_reg ), .C0(\u_key_5/n27 ), .B0(key_c_4), 
    .A0(\u_key_5/key_reg ), .DI1(\u_key_5/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_5/delay_cnt_31_N_570_14 ), .CE(\u_key_5/clk_N_168_enable_320 ), 
    .CLK(clk), .F0(\u_key_5/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_5/delay_cnt_14 ), .F1(\u_key_5/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_5/delay_cnt_16 ));
  u_key_5_SLICE_652 \u_key_5/SLICE_652 ( .C1(\u_key_5/n23 ), .B1(key_c_4), 
    .A1(\u_key_5/key_reg ), .C0(\u_key_5/n24 ), .B0(key_c_4), 
    .A0(\u_key_5/key_reg ), .DI1(\u_key_5/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_5/delay_cnt_31_N_570_17 ), .CE(\u_key_5/clk_N_168_enable_320 ), 
    .CLK(clk), .F0(\u_key_5/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_5/delay_cnt_17 ), .F1(\u_key_5/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_5/delay_cnt_18 ));
  u_key_5_SLICE_653 \u_key_5/SLICE_653 ( .B1(key_c_4), .A1(\u_key_5/key_reg ), 
    .C0(\u_key_5/n22 ), .B0(key_c_4), .A0(\u_key_5/key_reg ), 
    .DI0(\u_key_5/delay_cnt_31_N_570_19 ), .CE(\u_key_5/clk_N_168_enable_320 ), 
    .CLK(clk), .F0(\u_key_5/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_5/delay_cnt_19 ), .F1(\u_key_5/n18798 ));
  u_key_6_SLICE_655 \u_key_6/SLICE_655 ( .D1(\u_key_6/delay_cnt_0 ), 
    .C1(\u_key_6/n10231 ), .B1(key_c_5), .A1(\u_key_6/key_reg ), 
    .C0(\u_key_6/n41 ), .B0(\u_key_6/n10231 ), .A0(\u_key_6/delay_cnt_0 ), 
    .DI0(\u_key_6/n10378 ), .LSR(\u_key_6/n18797 ), .CLK(clk), 
    .F0(\u_key_6/n10378 ), .Q0(\u_key_6/delay_cnt_0 ), 
    .F1(\u_key_6/clk_N_168_enable_289 ));
  u_key_6_SLICE_656 \u_key_6/SLICE_656 ( .C1(\u_key_6/n32 ), .B1(key_c_5), 
    .A1(\u_key_6/key_reg ), .C0(\u_key_6/n35 ), .B0(key_c_5), 
    .A0(\u_key_6/key_reg ), .DI1(\u_key_6/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_6/delay_cnt_31_N_570_6 ), .CE(\u_key_6/clk_N_168_enable_289 ), 
    .CLK(clk), .F0(\u_key_6/delay_cnt_31_N_570_6 ), .Q0(\u_key_6/delay_cnt_6 ), 
    .F1(\u_key_6/delay_cnt_31_N_570_9 ), .Q1(\u_key_6/delay_cnt_9 ));
  u_key_6_SLICE_657 \u_key_6/SLICE_657 ( .C1(\u_key_6/n25 ), .B1(key_c_5), 
    .A1(\u_key_6/key_reg ), .C0(\u_key_6/n27 ), .B0(key_c_5), 
    .A0(\u_key_6/key_reg ), .DI1(\u_key_6/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_6/delay_cnt_31_N_570_14 ), .CE(\u_key_6/clk_N_168_enable_289 ), 
    .CLK(clk), .F0(\u_key_6/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_6/delay_cnt_14 ), .F1(\u_key_6/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_6/delay_cnt_16 ));
  u_key_6_SLICE_658 \u_key_6/SLICE_658 ( .C1(\u_key_6/n23 ), .B1(key_c_5), 
    .A1(\u_key_6/key_reg ), .C0(\u_key_6/n24 ), .B0(key_c_5), 
    .A0(\u_key_6/key_reg ), .DI1(\u_key_6/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_6/delay_cnt_31_N_570_17 ), .CE(\u_key_6/clk_N_168_enable_289 ), 
    .CLK(clk), .F0(\u_key_6/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_6/delay_cnt_17 ), .F1(\u_key_6/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_6/delay_cnt_18 ));
  u_key_6_SLICE_659 \u_key_6/SLICE_659 ( .B1(key_c_5), .A1(\u_key_6/key_reg ), 
    .C0(\u_key_6/n22 ), .B0(key_c_5), .A0(\u_key_6/key_reg ), 
    .DI0(\u_key_6/delay_cnt_31_N_570_19 ), .CE(\u_key_6/clk_N_168_enable_289 ), 
    .CLK(clk), .F0(\u_key_6/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_6/delay_cnt_19 ), .F1(\u_key_6/n18797 ));
  u_key_7_SLICE_661 \u_key_7/SLICE_661 ( .D1(\u_key_7/delay_cnt_0 ), 
    .C1(\u_key_7/n10237 ), .B1(key_c_6), .A1(\u_key_7/key_reg ), 
    .C0(\u_key_7/n41 ), .B0(\u_key_7/n10237 ), .A0(\u_key_7/delay_cnt_0 ), 
    .DI0(\u_key_7/n10380 ), .LSR(\u_key_7/n18796 ), .CLK(clk), 
    .F0(\u_key_7/n10380 ), .Q0(\u_key_7/delay_cnt_0 ), 
    .F1(\u_key_7/clk_N_168_enable_258 ));
  u_key_7_SLICE_662 \u_key_7/SLICE_662 ( .C1(\u_key_7/n32 ), .B1(key_c_6), 
    .A1(\u_key_7/key_reg ), .C0(\u_key_7/n35 ), .B0(key_c_6), 
    .A0(\u_key_7/key_reg ), .DI1(\u_key_7/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_7/delay_cnt_31_N_570_6 ), .CE(\u_key_7/clk_N_168_enable_258 ), 
    .CLK(clk), .F0(\u_key_7/delay_cnt_31_N_570_6 ), .Q0(\u_key_7/delay_cnt_6 ), 
    .F1(\u_key_7/delay_cnt_31_N_570_9 ), .Q1(\u_key_7/delay_cnt_9 ));
  u_key_7_SLICE_663 \u_key_7/SLICE_663 ( .C1(\u_key_7/n25 ), .B1(key_c_6), 
    .A1(\u_key_7/key_reg ), .C0(\u_key_7/n27 ), .B0(key_c_6), 
    .A0(\u_key_7/key_reg ), .DI1(\u_key_7/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_7/delay_cnt_31_N_570_14 ), .CE(\u_key_7/clk_N_168_enable_258 ), 
    .CLK(clk), .F0(\u_key_7/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_7/delay_cnt_14 ), .F1(\u_key_7/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_7/delay_cnt_16 ));
  u_key_7_SLICE_664 \u_key_7/SLICE_664 ( .C1(\u_key_7/n23 ), .B1(key_c_6), 
    .A1(\u_key_7/key_reg ), .C0(\u_key_7/n24 ), .B0(key_c_6), 
    .A0(\u_key_7/key_reg ), .DI1(\u_key_7/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_7/delay_cnt_31_N_570_17 ), .CE(\u_key_7/clk_N_168_enable_258 ), 
    .CLK(clk), .F0(\u_key_7/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_7/delay_cnt_17 ), .F1(\u_key_7/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_7/delay_cnt_18 ));
  u_key_7_SLICE_665 \u_key_7/SLICE_665 ( .B1(key_c_6), .A1(\u_key_7/key_reg ), 
    .C0(\u_key_7/n22 ), .B0(key_c_6), .A0(\u_key_7/key_reg ), 
    .DI0(\u_key_7/delay_cnt_31_N_570_19 ), .CE(\u_key_7/clk_N_168_enable_258 ), 
    .CLK(clk), .F0(\u_key_7/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_7/delay_cnt_19 ), .F1(\u_key_7/n18796 ));
  u_key_8_SLICE_667 \u_key_8/SLICE_667 ( .D1(\u_key_8/delay_cnt_0 ), 
    .C1(\u_key_8/n10240 ), .B1(key_c_7), .A1(\u_key_8/key_reg ), 
    .C0(\u_key_8/n41 ), .B0(\u_key_8/n10240 ), .A0(\u_key_8/delay_cnt_0 ), 
    .DI0(\u_key_8/n10382 ), .LSR(\u_key_8/n18795 ), .CLK(clk), 
    .F0(\u_key_8/n10382 ), .Q0(\u_key_8/delay_cnt_0 ), 
    .F1(\u_key_8/clk_N_168_enable_227 ));
  u_key_8_SLICE_668 \u_key_8/SLICE_668 ( .C1(\u_key_8/n32 ), .B1(key_c_7), 
    .A1(\u_key_8/key_reg ), .C0(\u_key_8/n35 ), .B0(key_c_7), 
    .A0(\u_key_8/key_reg ), .DI1(\u_key_8/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_8/delay_cnt_31_N_570_6 ), .CE(\u_key_8/clk_N_168_enable_227 ), 
    .CLK(clk), .F0(\u_key_8/delay_cnt_31_N_570_6 ), .Q0(\u_key_8/delay_cnt_6 ), 
    .F1(\u_key_8/delay_cnt_31_N_570_9 ), .Q1(\u_key_8/delay_cnt_9 ));
  u_key_8_SLICE_669 \u_key_8/SLICE_669 ( .C1(\u_key_8/n25 ), .B1(key_c_7), 
    .A1(\u_key_8/key_reg ), .C0(\u_key_8/n27 ), .B0(key_c_7), 
    .A0(\u_key_8/key_reg ), .DI1(\u_key_8/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_8/delay_cnt_31_N_570_14 ), .CE(\u_key_8/clk_N_168_enable_227 ), 
    .CLK(clk), .F0(\u_key_8/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_8/delay_cnt_14 ), .F1(\u_key_8/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_8/delay_cnt_16 ));
  u_key_8_SLICE_670 \u_key_8/SLICE_670 ( .C1(\u_key_8/n23 ), .B1(key_c_7), 
    .A1(\u_key_8/key_reg ), .C0(\u_key_8/n24 ), .B0(key_c_7), 
    .A0(\u_key_8/key_reg ), .DI1(\u_key_8/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_8/delay_cnt_31_N_570_17 ), .CE(\u_key_8/clk_N_168_enable_227 ), 
    .CLK(clk), .F0(\u_key_8/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_8/delay_cnt_17 ), .F1(\u_key_8/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_8/delay_cnt_18 ));
  u_key_8_SLICE_671 \u_key_8/SLICE_671 ( .B1(key_c_7), .A1(\u_key_8/key_reg ), 
    .C0(\u_key_8/n22 ), .B0(key_c_7), .A0(\u_key_8/key_reg ), 
    .DI0(\u_key_8/delay_cnt_31_N_570_19 ), .CE(\u_key_8/clk_N_168_enable_227 ), 
    .CLK(clk), .F0(\u_key_8/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_8/delay_cnt_19 ), .F1(\u_key_8/n18795 ));
  u_key_9_SLICE_673 \u_key_9/SLICE_673 ( .D1(\u_key_9/delay_cnt_0 ), 
    .C1(\u_key_9/n10243 ), .B1(key_c_8), .A1(\u_key_9/key_reg ), 
    .C0(\u_key_9/n41 ), .B0(\u_key_9/n10243 ), .A0(\u_key_9/delay_cnt_0 ), 
    .DI0(\u_key_9/n10384 ), .LSR(\u_key_9/n18794 ), .CLK(clk), 
    .F0(\u_key_9/n10384 ), .Q0(\u_key_9/delay_cnt_0 ), 
    .F1(\u_key_9/clk_N_168_enable_196 ));
  u_key_9_SLICE_674 \u_key_9/SLICE_674 ( .C1(\u_key_9/n32 ), .B1(key_c_8), 
    .A1(\u_key_9/key_reg ), .C0(\u_key_9/n35 ), .B0(key_c_8), 
    .A0(\u_key_9/key_reg ), .DI1(\u_key_9/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_9/delay_cnt_31_N_570_6 ), .CE(\u_key_9/clk_N_168_enable_196 ), 
    .CLK(clk), .F0(\u_key_9/delay_cnt_31_N_570_6 ), .Q0(\u_key_9/delay_cnt_6 ), 
    .F1(\u_key_9/delay_cnt_31_N_570_9 ), .Q1(\u_key_9/delay_cnt_9 ));
  u_key_9_SLICE_675 \u_key_9/SLICE_675 ( .C1(\u_key_9/n25 ), .B1(key_c_8), 
    .A1(\u_key_9/key_reg ), .C0(\u_key_9/n27 ), .B0(key_c_8), 
    .A0(\u_key_9/key_reg ), .DI1(\u_key_9/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_9/delay_cnt_31_N_570_14 ), .CE(\u_key_9/clk_N_168_enable_196 ), 
    .CLK(clk), .F0(\u_key_9/delay_cnt_31_N_570_14 ), 
    .Q0(\u_key_9/delay_cnt_14 ), .F1(\u_key_9/delay_cnt_31_N_570_16 ), 
    .Q1(\u_key_9/delay_cnt_16 ));
  u_key_9_SLICE_676 \u_key_9/SLICE_676 ( .C1(\u_key_9/n23 ), .B1(key_c_8), 
    .A1(\u_key_9/key_reg ), .C0(\u_key_9/n24 ), .B0(key_c_8), 
    .A0(\u_key_9/key_reg ), .DI1(\u_key_9/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_9/delay_cnt_31_N_570_17 ), .CE(\u_key_9/clk_N_168_enable_196 ), 
    .CLK(clk), .F0(\u_key_9/delay_cnt_31_N_570_17 ), 
    .Q0(\u_key_9/delay_cnt_17 ), .F1(\u_key_9/delay_cnt_31_N_570_18 ), 
    .Q1(\u_key_9/delay_cnt_18 ));
  u_key_9_SLICE_677 \u_key_9/SLICE_677 ( .B1(key_c_8), .A1(\u_key_9/key_reg ), 
    .C0(\u_key_9/n22 ), .B0(key_c_8), .A0(\u_key_9/key_reg ), 
    .DI0(\u_key_9/delay_cnt_31_N_570_19 ), .CE(\u_key_9/clk_N_168_enable_196 ), 
    .CLK(clk), .F0(\u_key_9/delay_cnt_31_N_570_19 ), 
    .Q0(\u_key_9/delay_cnt_19 ), .F1(\u_key_9/n18794 ));
  u_key_state_SLICE_679 \u_key_state/SLICE_679 ( 
    .D1(\u_key_state/delay_cnt_0 ), .C1(\u_key_state/n10264 ), 
    .B1(key_state_c), .A1(\u_key_state/key_reg ), .C0(\u_key_state/n41 ), 
    .B0(\u_key_state/n10264 ), .A0(\u_key_state/delay_cnt_0 ), 
    .DI0(\u_key_state/n10399 ), .LSR(\u_key_state/n18788 ), .CLK(clk), 
    .F0(\u_key_state/n10399 ), .Q0(\u_key_state/delay_cnt_0 ), 
    .F1(\u_key_state/clk_N_168_enable_493 ));
  u_key_state_SLICE_680 \u_key_state/SLICE_680 ( .C1(\u_key_state/n32 ), 
    .B1(key_state_c), .A1(\u_key_state/key_reg ), .C0(\u_key_state/n35 ), 
    .B0(key_state_c), .A0(\u_key_state/key_reg ), 
    .DI1(\u_key_state/delay_cnt_31_N_570_9 ), 
    .DI0(\u_key_state/delay_cnt_31_N_570_6 ), 
    .CE(\u_key_state/clk_N_168_enable_493 ), .CLK(clk), 
    .F0(\u_key_state/delay_cnt_31_N_570_6 ), .Q0(\u_key_state/delay_cnt_6 ), 
    .F1(\u_key_state/delay_cnt_31_N_570_9 ), .Q1(\u_key_state/delay_cnt_9 ));
  u_key_state_SLICE_681 \u_key_state/SLICE_681 ( .C1(\u_key_state/n25 ), 
    .B1(key_state_c), .A1(\u_key_state/key_reg ), .C0(\u_key_state/n27 ), 
    .B0(key_state_c), .A0(\u_key_state/key_reg ), 
    .DI1(\u_key_state/delay_cnt_31_N_570_16 ), 
    .DI0(\u_key_state/delay_cnt_31_N_570_14 ), 
    .CE(\u_key_state/clk_N_168_enable_493 ), .CLK(clk), 
    .F0(\u_key_state/delay_cnt_31_N_570_14 ), .Q0(\u_key_state/delay_cnt_14 ), 
    .F1(\u_key_state/delay_cnt_31_N_570_16 ), .Q1(\u_key_state/delay_cnt_16 ));
  u_key_state_SLICE_682 \u_key_state/SLICE_682 ( .C1(\u_key_state/n23 ), 
    .B1(key_state_c), .A1(\u_key_state/key_reg ), .C0(\u_key_state/n24 ), 
    .B0(key_state_c), .A0(\u_key_state/key_reg ), 
    .DI1(\u_key_state/delay_cnt_31_N_570_18 ), 
    .DI0(\u_key_state/delay_cnt_31_N_570_17 ), 
    .CE(\u_key_state/clk_N_168_enable_493 ), .CLK(clk), 
    .F0(\u_key_state/delay_cnt_31_N_570_17 ), .Q0(\u_key_state/delay_cnt_17 ), 
    .F1(\u_key_state/delay_cnt_31_N_570_18 ), .Q1(\u_key_state/delay_cnt_18 ));
  u_key_state_SLICE_683 \u_key_state/SLICE_683 ( .B1(key_state_c), 
    .A1(\u_key_state/key_reg ), .C0(\u_key_state/n22 ), .B0(key_state_c), 
    .A0(\u_key_state/key_reg ), .DI0(\u_key_state/delay_cnt_31_N_570_19 ), 
    .CE(\u_key_state/clk_N_168_enable_493 ), .CLK(clk), 
    .F0(\u_key_state/delay_cnt_31_N_570_19 ), .Q0(\u_key_state/delay_cnt_19 ), 
    .F1(\u_key_state/n18788 ));
  u_speaker_SLICE_685 \u_speaker/SLICE_685 ( .B0(\u_speaker/PWM_in_0 ), 
    .A0(\u_speaker/PWM_DDS_accumulator_0 ), .DI0(\u_speaker/n4956 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n4956 ), 
    .Q0(\u_speaker/PWM_DDS_accumulator_0 ));
  SLICE_686 SLICE_686( .C1(PWM_in_12_N_452_1), .B1(n19846), .A1(n9292), 
    .D0(data_out1_0), .C0(data_out2_0), .B0(n19846), .A0(n9292), .DI1(n25), 
    .DI0(n26), .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(n26), 
    .Q0(\u_speaker/PWM_in_0 ), .F1(n25), .Q1(\u_speaker/PWM_in_1 ));
  SLICE_687 SLICE_687( .C1(PWM_in_12_N_452_3), .B1(n19846), .A1(n9292), 
    .C0(PWM_in_12_N_452_2), .B0(n19846), .A0(n9292), .DI1(n23), .DI0(n24), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(n24), 
    .Q0(\u_speaker/PWM_in_2 ), .F1(n23), .Q1(\u_speaker/PWM_in_3 ));
  SLICE_688 SLICE_688( .C1(PWM_in_12_N_452_5), .B1(n19846), .A1(n9292), 
    .C0(PWM_in_12_N_452_4), .B0(n19846), .A0(n9292), .DI1(n21), .DI0(n22), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(n22), 
    .Q0(\u_speaker/PWM_in_4 ), .F1(n21), .Q1(\u_speaker/PWM_in_5 ));
  SLICE_689 SLICE_689( .C1(PWM_in_12_N_452_7), .B1(n19846), .A1(n9292), 
    .C0(PWM_in_12_N_452_6), .B0(n19846), .A0(n9292), .DI1(n19), .DI0(n20), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(n20), 
    .Q0(\u_speaker/PWM_in_6 ), .F1(n19), .Q1(\u_speaker/PWM_in_7 ));
  SLICE_690 SLICE_690( .C1(PWM_in_12_N_452_9), .B1(n19846), .A1(n9292), 
    .C0(PWM_in_12_N_452_8), .B0(n19846), .A0(n9292), .DI1(n17), .DI0(n18), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(n18), 
    .Q0(\u_speaker/PWM_in_8 ), .F1(n17), .Q1(\u_speaker/PWM_in_9 ));
  SLICE_691 SLICE_691( .C1(PWM_in_12_N_452_11), .B1(n19846), .A1(n9292), 
    .C0(PWM_in_12_N_452_10), .B0(n19846), .A0(n9292), .DI1(n15), .DI0(n16), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(n16), 
    .Q0(\u_speaker/PWM_in_10 ), .F1(n15), .Q1(\u_speaker/PWM_in_11 ));
  SLICE_692 SLICE_692( .C1(\u_buzzer/PWM ), .B1(n19846), .A1(n9292), 
    .C0(PWM_in_12_N_452_12), .B0(n19846), .A0(n9292), .DI0(n14_adj_1435), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(n14_adj_1435), 
    .Q0(\u_speaker/PWM_in_12 ), .F1(pwm_out1_c));
  u_speaker_SLICE_693 \u_speaker/SLICE_693 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_14_adj_1256 ), .A1(n19846), .D0(key_value_9), 
    .C0(\u_speaker/fcw_r_2 ), .B0(\u_speaker/count10_2 ), .A0(n19846), 
    .DI1(\u_speaker/n36_adj_1257 ), .DI0(\u_speaker/n48_adj_1255 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n48_adj_1255 ), 
    .Q0(\u_speaker/count10_2 ), .F1(\u_speaker/n36_adj_1257 ), 
    .Q1(\u_speaker/count10_14 ));
  u_speaker_SLICE_694 \u_speaker/SLICE_694 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_16_adj_1260 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_15_adj_1258 ), .A0(n19846), 
    .DI1(\u_speaker/n34_adj_1261 ), .DI0(\u_speaker/n35_adj_1259 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n35_adj_1259 ), 
    .Q0(\u_speaker/count10_15 ), .F1(\u_speaker/n34_adj_1261 ), 
    .Q1(\u_speaker/count10_16 ));
  u_speaker_SLICE_695 \u_speaker/SLICE_695 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_18_adj_1264 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_17_adj_1262 ), .A0(n19846), 
    .DI1(\u_speaker/n32_adj_1265 ), .DI0(\u_speaker/n33_adj_1263 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n33_adj_1263 ), 
    .Q0(\u_speaker/count10_17 ), .F1(\u_speaker/n32_adj_1265 ), 
    .Q1(\u_speaker/count10_18 ));
  u_speaker_SLICE_696 \u_speaker/SLICE_696 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_20_adj_1268 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_19_adj_1266 ), .A0(n19846), 
    .DI1(\u_speaker/n30_adj_1269 ), .DI0(\u_speaker/n31_adj_1267 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n31_adj_1267 ), 
    .Q0(\u_speaker/count10_19 ), .F1(\u_speaker/n30_adj_1269 ), 
    .Q1(\u_speaker/count10_20 ));
  u_speaker_SLICE_697 \u_speaker/SLICE_697 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_22_adj_1272 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_21_adj_1270 ), .A0(n19846), 
    .DI1(\u_speaker/n28_adj_1273 ), .DI0(\u_speaker/n29_adj_1271 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n29_adj_1271 ), 
    .Q0(\u_speaker/count10_21 ), .F1(\u_speaker/n28_adj_1273 ), 
    .Q1(\u_speaker/count10_22 ));
  u_speaker_SLICE_698 \u_speaker/SLICE_698 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_24_adj_1276 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_23_adj_1274 ), .A0(n19846), 
    .DI1(\u_speaker/n26_adj_1277 ), .DI0(\u_speaker/n27_adj_1275 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n27_adj_1275 ), 
    .Q0(\u_speaker/count10_23 ), .F1(\u_speaker/n26_adj_1277 ), 
    .Q1(\u_speaker/count10_24 ));
  u_speaker_SLICE_699 \u_speaker/SLICE_699 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_14_adj_1117 ), .A1(n19846), 
    .D0(key_value_10), .C0(\u_speaker/fcw_r_6_adj_1219 ), 
    .B0(\u_speaker/count11_1 ), .A0(n19846), .DI1(\u_speaker/n36_adj_1118 ), 
    .DI0(\u_speaker/n49_adj_1220 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n49_adj_1220 ), .Q0(\u_speaker/count11_1 ), 
    .F1(\u_speaker/n36_adj_1118 ), .Q1(\u_speaker/count11_14 ));
  u_speaker_SLICE_700 \u_speaker/SLICE_700 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_16 ), .A1(n19846), .C0(key_value_10), 
    .B0(\u_speaker/count_24_N_543_15_adj_1119 ), .A0(n19846), 
    .DI1(\u_speaker/n34_adj_1121 ), .DI0(\u_speaker/n35_adj_1120 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n35_adj_1120 ), 
    .Q0(\u_speaker/count11_15 ), .F1(\u_speaker/n34_adj_1121 ), 
    .Q1(\u_speaker/count11_16 ));
  u_speaker_SLICE_701 \u_speaker/SLICE_701 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_18_adj_1122 ), .A1(n19846), 
    .C0(key_value_10), .B0(\u_speaker/count_24_N_543_17 ), .A0(n19846), 
    .DI1(\u_speaker/n32_adj_1123 ), .DI0(\u_speaker/n33 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n33 ), 
    .Q0(\u_speaker/count11_17 ), .F1(\u_speaker/n32_adj_1123 ), 
    .Q1(\u_speaker/count11_18 ));
  u_speaker_SLICE_702 \u_speaker/SLICE_702 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_20_adj_1128 ), .A1(n19846), 
    .C0(key_value_10), .B0(\u_speaker/count_24_N_543_19_adj_1124 ), 
    .A0(n19846), .DI1(\u_speaker/n30_adj_1129 ), 
    .DI0(\u_speaker/n31_adj_1125 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n31_adj_1125 ), .Q0(\u_speaker/count11_19 ), 
    .F1(\u_speaker/n30_adj_1129 ), .Q1(\u_speaker/count11_20 ));
  u_speaker_SLICE_703 \u_speaker/SLICE_703 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_22_adj_1132 ), .A1(n19846), 
    .C0(key_value_10), .B0(\u_speaker/count_24_N_543_21_adj_1130 ), 
    .A0(n19846), .DI1(\u_speaker/n28_adj_1133 ), 
    .DI0(\u_speaker/n29_adj_1131 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n29_adj_1131 ), .Q0(\u_speaker/count11_21 ), 
    .F1(\u_speaker/n28_adj_1133 ), .Q1(\u_speaker/count11_22 ));
  u_speaker_SLICE_704 \u_speaker/SLICE_704 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_24_adj_1136 ), .A1(n19846), 
    .C0(key_value_10), .B0(\u_speaker/count_24_N_543_23_adj_1134 ), 
    .A0(n19846), .DI1(\u_speaker/n26_adj_1137 ), 
    .DI0(\u_speaker/n27_adj_1135 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n27_adj_1135 ), .Q0(\u_speaker/count11_23 ), 
    .F1(\u_speaker/n26_adj_1137 ), .Q1(\u_speaker/count11_24 ));
  u_speaker_SLICE_705 \u_speaker/SLICE_705 ( .C1(\u_speaker/n115_adj_1057 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n116_adj_1055 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n142_adj_1058 ), 
    .DI0(\u_speaker/n143_adj_1056 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n143_adj_1056 ), .Q0(\u_speaker/count12_14 ), 
    .F1(\u_speaker/n142_adj_1058 ), .Q1(\u_speaker/count12_15 ));
  u_speaker_SLICE_706 \u_speaker/SLICE_706 ( .C1(\u_speaker/n113_adj_1061 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n114_adj_1059 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n140_adj_1062 ), 
    .DI0(\u_speaker/n141_adj_1060 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n141_adj_1060 ), .Q0(\u_speaker/count12_16 ), 
    .F1(\u_speaker/n140_adj_1062 ), .Q1(\u_speaker/count12_17 ));
  u_speaker_SLICE_707 \u_speaker/SLICE_707 ( .C1(\u_speaker/n111_adj_1065 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n112_adj_1063 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n138_adj_1066 ), 
    .DI0(\u_speaker/n139_adj_1064 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n139_adj_1064 ), .Q0(\u_speaker/count12_18 ), 
    .F1(\u_speaker/n138_adj_1066 ), .Q1(\u_speaker/count12_19 ));
  u_speaker_SLICE_708 \u_speaker/SLICE_708 ( .C1(\u_speaker/n109_adj_1069 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n110_adj_1067 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n136_adj_1070 ), 
    .DI0(\u_speaker/n137_adj_1068 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n137_adj_1068 ), .Q0(\u_speaker/count12_20 ), 
    .F1(\u_speaker/n136_adj_1070 ), .Q1(\u_speaker/count12_21 ));
  u_speaker_SLICE_709 \u_speaker/SLICE_709 ( .C1(\u_speaker/n107_adj_1073 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n108_adj_1071 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n134_adj_1074 ), 
    .DI0(\u_speaker/n135_adj_1072 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n135_adj_1072 ), .Q0(\u_speaker/count12_22 ), 
    .F1(\u_speaker/n134_adj_1074 ), .Q1(\u_speaker/count12_23 ));
  u_speaker_SLICE_710 \u_speaker/SLICE_710 ( .C0(\u_speaker/n106_adj_1075 ), 
    .B0(n19846), .A0(key_value_11), .DI0(\u_speaker/n133_adj_1076 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), 
    .F0(\u_speaker/n133_adj_1076 ), .Q0(\u_speaker/count12_24 ));
  u_speaker_SLICE_711 \u_speaker/SLICE_711 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_14_adj_1197 ), .A1(n19846), 
    .D0(key_value_12), .C0(\u_speaker/fcw_r_0 ), .B0(\u_speaker/count13_1 ), 
    .A0(n19846), .DI1(\u_speaker/n36_adj_1198 ), 
    .DI0(\u_speaker/n49_adj_1081 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n49_adj_1081 ), .Q0(\u_speaker/count13_1 ), 
    .F1(\u_speaker/n36_adj_1198 ), .Q1(\u_speaker/count13_14 ));
  u_speaker_SLICE_712 \u_speaker/SLICE_712 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_16_adj_1201 ), .A1(n19846), 
    .C0(key_value_12), .B0(\u_speaker/count_24_N_543_15_adj_1199 ), 
    .A0(n19846), .DI1(\u_speaker/n34_adj_1202 ), 
    .DI0(\u_speaker/n35_adj_1200 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n35_adj_1200 ), .Q0(\u_speaker/count13_15 ), 
    .F1(\u_speaker/n34_adj_1202 ), .Q1(\u_speaker/count13_16 ));
  u_speaker_SLICE_713 \u_speaker/SLICE_713 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_18_adj_1205 ), .A1(n19846), 
    .C0(key_value_12), .B0(\u_speaker/count_24_N_543_17_adj_1203 ), 
    .A0(n19846), .DI1(\u_speaker/n32_adj_1206 ), 
    .DI0(\u_speaker/n33_adj_1204 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n33_adj_1204 ), .Q0(\u_speaker/count13_17 ), 
    .F1(\u_speaker/n32_adj_1206 ), .Q1(\u_speaker/count13_18 ));
  u_speaker_SLICE_714 \u_speaker/SLICE_714 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_20_adj_1209 ), .A1(n19846), 
    .C0(key_value_12), .B0(\u_speaker/count_24_N_543_19_adj_1207 ), 
    .A0(n19846), .DI1(\u_speaker/n30_adj_1210 ), 
    .DI0(\u_speaker/n31_adj_1208 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n31_adj_1208 ), .Q0(\u_speaker/count13_19 ), 
    .F1(\u_speaker/n30_adj_1210 ), .Q1(\u_speaker/count13_20 ));
  u_speaker_SLICE_715 \u_speaker/SLICE_715 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_22_adj_1213 ), .A1(n19846), 
    .C0(key_value_12), .B0(\u_speaker/count_24_N_543_21_adj_1211 ), 
    .A0(n19846), .DI1(\u_speaker/n28_adj_1214 ), 
    .DI0(\u_speaker/n29_adj_1212 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n29_adj_1212 ), .Q0(\u_speaker/count13_21 ), 
    .F1(\u_speaker/n28_adj_1214 ), .Q1(\u_speaker/count13_22 ));
  u_speaker_SLICE_716 \u_speaker/SLICE_716 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_24_adj_1217 ), .A1(n19846), 
    .C0(key_value_12), .B0(\u_speaker/count_24_N_543_23_adj_1215 ), 
    .A0(n19846), .DI1(\u_speaker/n26_adj_1218 ), 
    .DI0(\u_speaker/n27_adj_1216 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n27_adj_1216 ), .Q0(\u_speaker/count13_23 ), 
    .F1(\u_speaker/n26_adj_1218 ), .Q1(\u_speaker/count13_24 ));
  u_speaker_SLICE_717 \u_speaker/SLICE_717 ( .C1(\u_speaker/n115 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n116 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n142 ), .DI0(\u_speaker/n143 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n143 ), 
    .Q0(\u_speaker/count1_14 ), .F1(\u_speaker/n142 ), 
    .Q1(\u_speaker/count1_15 ));
  u_speaker_SLICE_718 \u_speaker/SLICE_718 ( .C1(\u_speaker/n113 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n114 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n140 ), .DI0(\u_speaker/n141 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n141 ), 
    .Q0(\u_speaker/count1_16 ), .F1(\u_speaker/n140 ), 
    .Q1(\u_speaker/count1_17 ));
  u_speaker_SLICE_719 \u_speaker/SLICE_719 ( .C1(\u_speaker/n111 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n112 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n138 ), .DI0(\u_speaker/n139 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n139 ), 
    .Q0(\u_speaker/count1_18 ), .F1(\u_speaker/n138 ), 
    .Q1(\u_speaker/count1_19 ));
  u_speaker_SLICE_720 \u_speaker/SLICE_720 ( .C1(\u_speaker/n109 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n110 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n136 ), .DI0(\u_speaker/n137 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n137 ), 
    .Q0(\u_speaker/count1_20 ), .F1(\u_speaker/n136 ), 
    .Q1(\u_speaker/count1_21 ));
  u_speaker_SLICE_721 \u_speaker/SLICE_721 ( .C1(\u_speaker/n107 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n108 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n134 ), .DI0(\u_speaker/n135 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n135 ), 
    .Q0(\u_speaker/count1_22 ), .F1(\u_speaker/n134 ), 
    .Q1(\u_speaker/count1_23 ));
  u_speaker_SLICE_722 \u_speaker/SLICE_722 ( .C0(\u_speaker/n106 ), 
    .B0(key_value_0), .A0(n19846), .DI0(\u_speaker/n133 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n133 ), 
    .Q0(\u_speaker/count1_24 ));
  u_speaker_SLICE_723 \u_speaker/SLICE_723 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_14_adj_1144 ), .A1(n19846), .D0(key_value_1), 
    .C0(\u_speaker/fcw_r_6 ), .B0(\u_speaker/count2_1 ), .A0(n19846), 
    .DI1(\u_speaker/n36_adj_1145 ), .DI0(\u_speaker/n49 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n49 ), 
    .Q0(\u_speaker/count2_1 ), .F1(\u_speaker/n36_adj_1145 ), 
    .Q1(\u_speaker/count2_14 ));
  u_speaker_SLICE_724 \u_speaker/SLICE_724 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_16_adj_1176 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_15_adj_1168 ), .A0(n19846), 
    .DI1(\u_speaker/n34_adj_1177 ), .DI0(\u_speaker/n35_adj_1169 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n35_adj_1169 ), 
    .Q0(\u_speaker/count2_15 ), .F1(\u_speaker/n34_adj_1177 ), 
    .Q1(\u_speaker/count2_16 ));
  u_speaker_SLICE_725 \u_speaker/SLICE_725 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_18_adj_1174 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_17_adj_1170 ), .A0(n19846), 
    .DI1(\u_speaker/n32_adj_1175 ), .DI0(\u_speaker/n33_adj_1171 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n33_adj_1171 ), 
    .Q0(\u_speaker/count2_17 ), .F1(\u_speaker/n32_adj_1175 ), 
    .Q1(\u_speaker/count2_18 ));
  u_speaker_SLICE_726 \u_speaker/SLICE_726 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_20 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_19 ), .A0(n19846), .DI1(\u_speaker/n30 ), 
    .DI0(\u_speaker/n31_adj_1096 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n31_adj_1096 ), .Q0(\u_speaker/count2_19 ), 
    .F1(\u_speaker/n30 ), .Q1(\u_speaker/count2_20 ));
  u_speaker_SLICE_727 \u_speaker/SLICE_727 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_22_adj_934 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_21_adj_928 ), .A0(n19846), 
    .DI1(\u_speaker/n28_adj_935 ), .DI0(\u_speaker/n29_adj_929 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n29_adj_929 ), 
    .Q0(\u_speaker/count2_21 ), .F1(\u_speaker/n28_adj_935 ), 
    .Q1(\u_speaker/count2_22 ));
  u_speaker_SLICE_728 \u_speaker/SLICE_728 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_24 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_23_adj_936 ), .A0(n19846), 
    .DI1(\u_speaker/n26_adj_840 ), .DI0(\u_speaker/n27_adj_937 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n27_adj_937 ), 
    .Q0(\u_speaker/count2_23 ), .F1(\u_speaker/n26_adj_840 ), 
    .Q1(\u_speaker/count2_24 ));
  u_speaker_SLICE_729 \u_speaker/SLICE_729 ( .C1(\u_speaker/n115_adj_894 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n116_adj_892 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n142_adj_895 ), 
    .DI0(\u_speaker/n143_adj_893 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n143_adj_893 ), .Q0(\u_speaker/count3_14 ), 
    .F1(\u_speaker/n142_adj_895 ), .Q1(\u_speaker/count3_15 ));
  u_speaker_SLICE_730 \u_speaker/SLICE_730 ( .C1(\u_speaker/n113_adj_898 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n114_adj_896 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n140_adj_899 ), 
    .DI0(\u_speaker/n141_adj_897 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n141_adj_897 ), .Q0(\u_speaker/count3_16 ), 
    .F1(\u_speaker/n140_adj_899 ), .Q1(\u_speaker/count3_17 ));
  u_speaker_SLICE_731 \u_speaker/SLICE_731 ( .C1(\u_speaker/n111_adj_902 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n112_adj_900 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n138_adj_903 ), 
    .DI0(\u_speaker/n139_adj_901 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n139_adj_901 ), .Q0(\u_speaker/count3_18 ), 
    .F1(\u_speaker/n138_adj_903 ), .Q1(\u_speaker/count3_19 ));
  u_speaker_SLICE_732 \u_speaker/SLICE_732 ( .C1(\u_speaker/n109_adj_906 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n110_adj_904 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n136_adj_907 ), 
    .DI0(\u_speaker/n137_adj_905 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n137_adj_905 ), .Q0(\u_speaker/count3_20 ), 
    .F1(\u_speaker/n136_adj_907 ), .Q1(\u_speaker/count3_21 ));
  u_speaker_SLICE_733 \u_speaker/SLICE_733 ( .C1(\u_speaker/n107_adj_910 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n108_adj_908 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n134_adj_911 ), 
    .DI0(\u_speaker/n135_adj_909 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n135_adj_909 ), .Q0(\u_speaker/count3_22 ), 
    .F1(\u_speaker/n134_adj_911 ), .Q1(\u_speaker/count3_23 ));
  u_speaker_SLICE_734 \u_speaker/SLICE_734 ( .C0(\u_speaker/n106_adj_913 ), 
    .B0(n19846), .A0(key_value_2), .DI0(\u_speaker/n133_adj_914 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n133_adj_914 ), 
    .Q0(\u_speaker/count3_24 ));
  u_speaker_SLICE_735 \u_speaker/SLICE_735 ( .C1(\u_speaker/n115_adj_952 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n116_adj_950 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n142_adj_953 ), 
    .DI0(\u_speaker/n143_adj_951 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n143_adj_951 ), .Q0(\u_speaker/count4_14 ), 
    .F1(\u_speaker/n142_adj_953 ), .Q1(\u_speaker/count4_15 ));
  u_speaker_SLICE_736 \u_speaker/SLICE_736 ( .C1(\u_speaker/n113_adj_956 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n114_adj_954 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n140_adj_957 ), 
    .DI0(\u_speaker/n141_adj_955 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n141_adj_955 ), .Q0(\u_speaker/count4_16 ), 
    .F1(\u_speaker/n140_adj_957 ), .Q1(\u_speaker/count4_17 ));
  u_speaker_SLICE_737 \u_speaker/SLICE_737 ( .C1(\u_speaker/n111_adj_960 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n112_adj_958 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n138_adj_961 ), 
    .DI0(\u_speaker/n139_adj_959 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n139_adj_959 ), .Q0(\u_speaker/count4_18 ), 
    .F1(\u_speaker/n138_adj_961 ), .Q1(\u_speaker/count4_19 ));
  u_speaker_SLICE_738 \u_speaker/SLICE_738 ( .C1(\u_speaker/n109_adj_964 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n110_adj_962 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n136_adj_965 ), 
    .DI0(\u_speaker/n137_adj_963 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n137_adj_963 ), .Q0(\u_speaker/count4_20 ), 
    .F1(\u_speaker/n136_adj_965 ), .Q1(\u_speaker/count4_21 ));
  u_speaker_SLICE_739 \u_speaker/SLICE_739 ( .C1(\u_speaker/n107_adj_968 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n108_adj_966 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n134_adj_969 ), 
    .DI0(\u_speaker/n135_adj_967 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n135_adj_967 ), .Q0(\u_speaker/count4_22 ), 
    .F1(\u_speaker/n134_adj_969 ), .Q1(\u_speaker/count4_23 ));
  u_speaker_SLICE_740 \u_speaker/SLICE_740 ( .C0(\u_speaker/n106_adj_970 ), 
    .B0(n19846), .A0(key_value_3), .DI0(\u_speaker/n133_adj_971 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n133_adj_971 ), 
    .Q0(\u_speaker/count4_24 ));
  u_speaker_SLICE_741 \u_speaker/SLICE_741 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_14 ), .A1(n19846), .D0(key_value_4), 
    .C0(\u_speaker/fcw_r_0_adj_886 ), .B0(\u_speaker/count5_1 ), .A0(n19846), 
    .DI1(\u_speaker/n36 ), .DI0(\u_speaker/n49_adj_1180 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n49_adj_1180 ), 
    .Q0(\u_speaker/count5_1 ), .F1(\u_speaker/n36 ), 
    .Q1(\u_speaker/count5_14 ));
  u_speaker_SLICE_742 \u_speaker/SLICE_742 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_16_adj_1158 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_15 ), .A0(n19846), 
    .DI1(\u_speaker/n34_adj_1159 ), .DI0(\u_speaker/n35 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n35 ), 
    .Q0(\u_speaker/count5_15 ), .F1(\u_speaker/n34_adj_1159 ), 
    .Q1(\u_speaker/count5_16 ));
  u_speaker_SLICE_743 \u_speaker/SLICE_743 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_18_adj_1152 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_17_adj_1156 ), .A0(n19846), 
    .DI1(\u_speaker/n32_adj_1153 ), .DI0(\u_speaker/n33_adj_1157 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n33_adj_1157 ), 
    .Q0(\u_speaker/count5_17 ), .F1(\u_speaker/n32_adj_1153 ), 
    .Q1(\u_speaker/count5_18 ));
  u_speaker_SLICE_744 \u_speaker/SLICE_744 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_20_adj_1146 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_19_adj_1148 ), .A0(n19846), 
    .DI1(\u_speaker/n30_adj_1147 ), .DI0(\u_speaker/n31_adj_1149 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n31_adj_1149 ), 
    .Q0(\u_speaker/count5_19 ), .F1(\u_speaker/n30_adj_1147 ), 
    .Q1(\u_speaker/count5_20 ));
  u_speaker_SLICE_745 \u_speaker/SLICE_745 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_22 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_21 ), .A0(n19846), .DI1(\u_speaker/n28 ), 
    .DI0(\u_speaker/n29 ), .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), 
    .F0(\u_speaker/n29 ), .Q0(\u_speaker/count5_21 ), .F1(\u_speaker/n28 ), 
    .Q1(\u_speaker/count5_22 ));
  u_speaker_SLICE_746 \u_speaker/SLICE_746 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_24_adj_843 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_23_adj_1172 ), .A0(n19846), 
    .DI1(\u_speaker/n26_adj_844 ), .DI0(\u_speaker/n27_adj_1173 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n27_adj_1173 ), 
    .Q0(\u_speaker/count5_23 ), .F1(\u_speaker/n26_adj_844 ), 
    .Q1(\u_speaker/count5_24 ));
  u_speaker_SLICE_747 \u_speaker/SLICE_747 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_14_adj_1115 ), .A1(n19846), .D0(key_value_5), 
    .C0(\u_speaker/fcw_r_0_adj_886 ), .B0(\u_speaker/count6_2 ), .A0(n19846), 
    .DI1(\u_speaker/n36_adj_1116 ), .DI0(\u_speaker/n48_adj_1378 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n48_adj_1378 ), 
    .Q0(\u_speaker/count6_2 ), .F1(\u_speaker/n36_adj_1116 ), 
    .Q1(\u_speaker/count6_14 ));
  u_speaker_SLICE_748 \u_speaker/SLICE_748 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_16_adj_1239 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_15_adj_1189 ), .A0(n19846), 
    .DI1(\u_speaker/n34_adj_1240 ), .DI0(\u_speaker/n35_adj_1190 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n35_adj_1190 ), 
    .Q0(\u_speaker/count6_15 ), .F1(\u_speaker/n34_adj_1240 ), 
    .Q1(\u_speaker/count6_16 ));
  u_speaker_SLICE_749 \u_speaker/SLICE_749 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_18 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_17_adj_1330 ), .A0(n19846), 
    .DI1(\u_speaker/n32 ), .DI0(\u_speaker/n33_adj_1331 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n33_adj_1331 ), 
    .Q0(\u_speaker/count6_17 ), .F1(\u_speaker/n32 ), 
    .Q1(\u_speaker/count6_18 ));
  u_speaker_SLICE_750 \u_speaker/SLICE_750 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_20_adj_1126 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_19_adj_1111 ), .A0(n19846), 
    .DI1(\u_speaker/n30_adj_1127 ), .DI0(\u_speaker/n31_adj_1112 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n31_adj_1112 ), 
    .Q0(\u_speaker/count6_19 ), .F1(\u_speaker/n30_adj_1127 ), 
    .Q1(\u_speaker/count6_20 ));
  u_speaker_SLICE_751 \u_speaker/SLICE_751 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_22_adj_1334 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_21_adj_1187 ), .A0(n19846), 
    .DI1(\u_speaker/n28_adj_1335 ), .DI0(\u_speaker/n29_adj_1188 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n29_adj_1188 ), 
    .Q0(\u_speaker/count6_21 ), .F1(\u_speaker/n28_adj_1335 ), 
    .Q1(\u_speaker/count6_22 ));
  u_speaker_SLICE_752 \u_speaker/SLICE_752 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_24_adj_861 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_23 ), .A0(n19846), 
    .DI1(\u_speaker/n26_adj_862 ), .DI0(\u_speaker/n27 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n27 ), 
    .Q0(\u_speaker/count6_23 ), .F1(\u_speaker/n26_adj_862 ), 
    .Q1(\u_speaker/count6_24 ));
  u_speaker_SLICE_753 \u_speaker/SLICE_753 ( .C1(\u_speaker/n115_adj_1002 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n116_adj_1000 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n142_adj_1003 ), 
    .DI0(\u_speaker/n143_adj_1001 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n143_adj_1001 ), .Q0(\u_speaker/count7_14 ), 
    .F1(\u_speaker/n142_adj_1003 ), .Q1(\u_speaker/count7_15 ));
  u_speaker_SLICE_754 \u_speaker/SLICE_754 ( .C1(\u_speaker/n113_adj_1006 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n114_adj_1004 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n140_adj_1007 ), 
    .DI0(\u_speaker/n141_adj_1005 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n141_adj_1005 ), .Q0(\u_speaker/count7_16 ), 
    .F1(\u_speaker/n140_adj_1007 ), .Q1(\u_speaker/count7_17 ));
  u_speaker_SLICE_755 \u_speaker/SLICE_755 ( .C1(\u_speaker/n111_adj_1010 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n112_adj_1008 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n138_adj_1011 ), 
    .DI0(\u_speaker/n139_adj_1009 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n139_adj_1009 ), .Q0(\u_speaker/count7_18 ), 
    .F1(\u_speaker/n138_adj_1011 ), .Q1(\u_speaker/count7_19 ));
  u_speaker_SLICE_756 \u_speaker/SLICE_756 ( .C1(\u_speaker/n109_adj_1014 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n110_adj_1012 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n136_adj_1015 ), 
    .DI0(\u_speaker/n137_adj_1013 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n137_adj_1013 ), .Q0(\u_speaker/count7_20 ), 
    .F1(\u_speaker/n136_adj_1015 ), .Q1(\u_speaker/count7_21 ));
  u_speaker_SLICE_757 \u_speaker/SLICE_757 ( .C1(\u_speaker/n107_adj_1018 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n108_adj_1016 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n134_adj_1019 ), 
    .DI0(\u_speaker/n135_adj_1017 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n135_adj_1017 ), .Q0(\u_speaker/count7_22 ), 
    .F1(\u_speaker/n134_adj_1019 ), .Q1(\u_speaker/count7_23 ));
  u_speaker_SLICE_758 \u_speaker/SLICE_758 ( .C0(\u_speaker/n106_adj_1020 ), 
    .B0(key_value_6), .A0(n19846), .DI0(\u_speaker/n133_adj_1021 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), 
    .F0(\u_speaker/n133_adj_1021 ), .Q0(\u_speaker/count7_24 ));
  u_speaker_SLICE_759 \u_speaker/SLICE_759 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_14_adj_1356 ), .A1(n19846), .D0(key_value_7), 
    .C0(\u_speaker/fcw_r_8_adj_1352 ), .B0(\u_speaker/count8_1 ), .A0(n19846), 
    .DI1(\u_speaker/n36_adj_1357 ), .DI0(\u_speaker/n49_adj_1353 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n49_adj_1353 ), 
    .Q0(\u_speaker/count8_1 ), .F1(\u_speaker/n36_adj_1357 ), 
    .Q1(\u_speaker/count8_14 ));
  u_speaker_SLICE_760 \u_speaker/SLICE_760 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_16_adj_1360 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_15_adj_1358 ), .A0(n19846), 
    .DI1(\u_speaker/n34_adj_1361 ), .DI0(\u_speaker/n35_adj_1359 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n35_adj_1359 ), 
    .Q0(\u_speaker/count8_15 ), .F1(\u_speaker/n34_adj_1361 ), 
    .Q1(\u_speaker/count8_16 ));
  u_speaker_SLICE_761 \u_speaker/SLICE_761 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_18_adj_1364 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_17_adj_1362 ), .A0(n19846), 
    .DI1(\u_speaker/n32_adj_1365 ), .DI0(\u_speaker/n33_adj_1363 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n33_adj_1363 ), 
    .Q0(\u_speaker/count8_17 ), .F1(\u_speaker/n32_adj_1365 ), 
    .Q1(\u_speaker/count8_18 ));
  u_speaker_SLICE_762 \u_speaker/SLICE_762 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_20_adj_1368 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_19_adj_1366 ), .A0(n19846), 
    .DI1(\u_speaker/n30_adj_1369 ), .DI0(\u_speaker/n31_adj_1367 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n31_adj_1367 ), 
    .Q0(\u_speaker/count8_19 ), .F1(\u_speaker/n30_adj_1369 ), 
    .Q1(\u_speaker/count8_20 ));
  u_speaker_SLICE_763 \u_speaker/SLICE_763 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_22_adj_1372 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_21_adj_1370 ), .A0(n19846), 
    .DI1(\u_speaker/n28_adj_1373 ), .DI0(\u_speaker/n29_adj_1371 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n29_adj_1371 ), 
    .Q0(\u_speaker/count8_21 ), .F1(\u_speaker/n28_adj_1373 ), 
    .Q1(\u_speaker/count8_22 ));
  u_speaker_SLICE_764 \u_speaker/SLICE_764 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_24_adj_1376 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_23_adj_1374 ), .A0(n19846), 
    .DI1(\u_speaker/n26_adj_1377 ), .DI0(\u_speaker/n27_adj_1375 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n27_adj_1375 ), 
    .Q0(\u_speaker/count8_23 ), .F1(\u_speaker/n26_adj_1377 ), 
    .Q1(\u_speaker/count8_24 ));
  u_speaker_SLICE_765 \u_speaker/SLICE_765 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_14_adj_1304 ), .A1(n19846), .D0(key_value_8), 
    .C0(\u_speaker/fcw_r_8_adj_1278 ), .B0(\u_speaker/count9_1 ), .A0(n19846), 
    .DI1(\u_speaker/n36_adj_1305 ), .DI0(\u_speaker/n49_adj_1279 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n49_adj_1279 ), 
    .Q0(\u_speaker/count9_1 ), .F1(\u_speaker/n36_adj_1305 ), 
    .Q1(\u_speaker/count9_14 ));
  u_speaker_SLICE_766 \u_speaker/SLICE_766 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_16_adj_1308 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_15_adj_1306 ), .A0(n19846), 
    .DI1(\u_speaker/n34_adj_1309 ), .DI0(\u_speaker/n35_adj_1307 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n35_adj_1307 ), 
    .Q0(\u_speaker/count9_15 ), .F1(\u_speaker/n34_adj_1309 ), 
    .Q1(\u_speaker/count9_16 ));
  u_speaker_SLICE_767 \u_speaker/SLICE_767 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_18_adj_1312 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_17_adj_1310 ), .A0(n19846), 
    .DI1(\u_speaker/n32_adj_1313 ), .DI0(\u_speaker/n33_adj_1311 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n33_adj_1311 ), 
    .Q0(\u_speaker/count9_17 ), .F1(\u_speaker/n32_adj_1313 ), 
    .Q1(\u_speaker/count9_18 ));
  u_speaker_SLICE_768 \u_speaker/SLICE_768 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_20_adj_1316 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_19_adj_1314 ), .A0(n19846), 
    .DI1(\u_speaker/n30_adj_1317 ), .DI0(\u_speaker/n31_adj_1315 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n31_adj_1315 ), 
    .Q0(\u_speaker/count9_19 ), .F1(\u_speaker/n30_adj_1317 ), 
    .Q1(\u_speaker/count9_20 ));
  u_speaker_SLICE_769 \u_speaker/SLICE_769 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_22_adj_1320 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_21_adj_1318 ), .A0(n19846), 
    .DI1(\u_speaker/n28_adj_1321 ), .DI0(\u_speaker/n29_adj_1319 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n29_adj_1319 ), 
    .Q0(\u_speaker/count9_21 ), .F1(\u_speaker/n28_adj_1321 ), 
    .Q1(\u_speaker/count9_22 ));
  u_speaker_SLICE_770 \u_speaker/SLICE_770 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_24_adj_1324 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_23_adj_1322 ), .A0(n19846), 
    .DI1(\u_speaker/n26_adj_1325 ), .DI0(\u_speaker/n27_adj_1323 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n27_adj_1323 ), 
    .Q0(\u_speaker/count9_23 ), .F1(\u_speaker/n26_adj_1325 ), 
    .Q1(\u_speaker/count9_24 ));
  u_speaker_SLICE_771 \u_speaker/SLICE_771 ( .D1(\u_speaker/n10879 ), 
    .C1(\u_speaker/rom1_3 ), .B1(\u_speaker/rom1_1 ), .A1(\u_speaker/n17242 ), 
    .D0(n19846), .C0(\u_speaker/rom1_2 ), .B0(\u_speaker/n16952 ), 
    .A0(\u_speaker/n18925 ), .DI0(\u_speaker/en_0__N_252 ), 
    .CE(\u_speaker/clk_N_168_enable_523 ), .CLK(clk), 
    .F0(\u_speaker/en_0__N_252 ), .Q0(\u_speaker/en_0 ), 
    .F1(\u_speaker/n16952 ));
  SLICE_772 SLICE_772( .B1(\u_speaker/rom2_2 ), .A1(rom2_1), .D0(n58), 
    .C0(n17135), .B0(rom2_3), .A0(n19846), .DI0(en_1__N_194), 
    .CE(\u_speaker/clk_N_168_enable_524 ), .CLK(clk), .F0(en_1__N_194), 
    .Q0(\u_speaker/en_1 ), .F1(n58));
  u_speaker_SLICE_773 \u_speaker/SLICE_773 ( .C1(n19846), 
    .B1(\u_speaker/yinjie_box_1 ), .A1(yinjie_1), .C0(n19846), 
    .B0(\u_speaker/fcw_r_15_N_527_0 ), .A0(yinjie_0), .DI1(n18784), 
    .DI0(n18785), .CLK(clk), .F0(n18785), .Q0(\u_speaker/fcw_r_0 ), 
    .F1(n18784), .Q1(\u_speaker/fcw_r_1 ));
  u_speaker_SLICE_775 \u_speaker/SLICE_775 ( .D1(yinjie_2), .C1(n19846), 
    .B1(\u_speaker/fcw_r_15_N_527_0 ), .A1(yinjie_0), 
    .D0(\u_speaker/u_DDS_1/n7617 ), .C0(n19846), 
    .B0(\u_speaker/fcw_r_15_N_527_0 ), .A0(\u_speaker/yinjie_box_1 ), 
    .DI1(\u_speaker/fcw_r_15_N_495_8 ), 
    .DI0(\u_speaker/u_DDS_1/fcw_r_15_N_495_3 ), .CLK(clk), 
    .F0(\u_speaker/u_DDS_1/fcw_r_15_N_495_3 ), .Q0(\u_speaker/fcw_r_3 ), 
    .F1(\u_speaker/fcw_r_15_N_495_8 ), .Q1(\u_speaker/fcw_r_4 ));
  u_speaker_SLICE_776 \u_speaker/SLICE_776 ( .D0(\u_speaker/fcw_r_15_N_527_0 ), 
    .C0(n19846), .B0(\u_speaker/yinjie_box_1 ), .A0(\u_speaker/u_DDS_1/n7603 ), 
    .DI0(\u_speaker/u_DDS_1/fcw_r_15_N_527_5 ), .M1(n18785), .CLK(clk), 
    .F0(\u_speaker/u_DDS_1/fcw_r_15_N_527_5 ), .Q0(\u_speaker/fcw_r_5 ), 
    .Q1(\u_speaker/fcw_r_6 ));
  u_speaker_SLICE_777 \u_speaker/SLICE_777 ( .D0(\u_speaker/u_DDS_1/n7601 ), 
    .C0(n19846), .B0(\u_speaker/fcw_r_15_N_527_0 ), 
    .A0(\u_speaker/yinjie_box_1 ), .DI0(\u_speaker/u_DDS_1/fcw_r_15_N_527_7 ), 
    .M1(n18785), .CLK(clk), .F0(\u_speaker/u_DDS_1/fcw_r_15_N_527_7 ), 
    .Q0(\u_speaker/fcw_r_7 ), .Q1(\u_speaker/fcw_r_8 ));
  u_speaker_u_DDS_1_SLICE_778 \u_speaker/u_DDS_1/SLICE_778 ( 
    .D0(\u_speaker/fcw_r_15_N_527_0 ), .C0(n19846), 
    .B0(\u_speaker/yinjie_box_1 ), .A0(\u_speaker/u_DDS_1/n7599 ), 
    .DI0(\u_speaker/u_DDS_1/fcw_r_15_N_495_9 ), .CLK(clk), 
    .F0(\u_speaker/u_DDS_1/fcw_r_15_N_495_9 ), .Q0(\u_speaker/fcw_r_9 ));
  u_speaker_u_DDS_1_SLICE_781 \u_speaker/u_DDS_1/SLICE_781 ( 
    .B1(\u_speaker/fcw_r_15_N_527_0 ), .A1(\u_speaker/yinjie_box_1 ), 
    .B0(yinjie_0), .A0(yinjie_1), .DI0(\u_speaker/u_DDS_1/fcw_r_15_N_495_1 ), 
    .M0(n19846), .CLK(clk), .OFX0(\u_speaker/u_DDS_1/fcw_r_15_N_495_1 ), 
    .Q0(\u_speaker/fcw_r_1_adj_1398 ));
  SLICE_782 SLICE_782( .D1(\u_speaker/u_DDS_1/n7618 ), .C1(n19846), 
    .B1(\u_speaker/fcw_r_15_N_527_0 ), .A1(\u_speaker/yinjie_box_1 ), 
    .B0(n19846), .A0(yinjie_2), .DI1(\u_speaker/u_DDS_1/fcw_r_15_N_495_2 ), 
    .DI0(n18757), .CLK(clk), .F0(n18757), .Q0(\u_speaker/fcw_r_2_adj_1393 ), 
    .F1(\u_speaker/u_DDS_1/fcw_r_15_N_495_2 ), 
    .Q1(\u_speaker/fcw_r_2_adj_1397 ));
  u_speaker_u_DDS_1_SLICE_783 \u_speaker/u_DDS_1/SLICE_783 ( 
    .D1(\u_speaker/yinjie_box_1 ), .C1(\u_speaker/u_DDS_1/n7616 ), .B1(n19846), 
    .A1(\u_speaker/fcw_r_15_N_527_0 ), .D0(\u_speaker/yinjie_box_1 ), 
    .C0(\u_speaker/u_DDS_1/n7616 ), .B0(n19846), 
    .A0(\u_speaker/fcw_r_15_N_527_0 ), 
    .DI0(\u_speaker/u_DDS_1/fcw_r_15_N_527_4 ), .M0(yinjie_0), .CLK(clk), 
    .OFX0(\u_speaker/u_DDS_1/fcw_r_15_N_527_4 ), 
    .Q0(\u_speaker/fcw_r_4_adj_1396 ));
  u_speaker_u_DDS_1_SLICE_785 \u_speaker/u_DDS_1/SLICE_785 ( 
    .D0(\u_speaker/u_DDS_1/n7602 ), .C0(n19846), 
    .B0(\u_speaker/fcw_r_15_N_527_0 ), .A0(\u_speaker/yinjie_box_1 ), 
    .DI0(\u_speaker/u_DDS_1/fcw_r_15_N_527_6 ), .CLK(clk), 
    .F0(\u_speaker/u_DDS_1/fcw_r_15_N_527_6 ), 
    .Q0(\u_speaker/fcw_r_6_adj_1395 ));
  u_speaker_u_DDS_1_SLICE_787 \u_speaker/u_DDS_1/SLICE_787 ( 
    .D0(\u_speaker/u_DDS_1/n7600 ), .C0(n19846), 
    .B0(\u_speaker/fcw_r_15_N_527_0 ), .A0(\u_speaker/yinjie_box_1 ), 
    .DI0(\u_speaker/u_DDS_1/fcw_r_15_N_527_8 ), .CLK(clk), 
    .F0(\u_speaker/u_DDS_1/fcw_r_15_N_527_8 ), 
    .Q0(\u_speaker/fcw_r_8_adj_1394 ));
  u_speaker_SLICE_788 \u_speaker/SLICE_788 ( .D1(\u_speaker/fcw_r_0_adj_886 ), 
    .C1(\u_speaker/n25_adj_885 ), .B1(n19846), .A1(key_value_2), 
    .D0(\u_speaker/fcw_r_0 ), .C0(\u_speaker/n25_adj_860 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n157_adj_887 ), .DI0(\u_speaker/n157 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n157 ), 
    .Q0(\u_speaker/n25_adj_860 ), .F1(\u_speaker/n157_adj_887 ), 
    .Q1(\u_speaker/n25_adj_885 ));
  u_speaker_SLICE_789 \u_speaker/SLICE_789 ( .D1(\u_speaker/fcw_r_8 ), 
    .C1(\u_speaker/n25_adj_972 ), .B1(key_value_6), .A1(n19846), 
    .D0(\u_speaker/fcw_r_0_adj_886 ), .C0(\u_speaker/n25_adj_944 ), 
    .B0(n19846), .A0(key_value_3), .DI1(\u_speaker/n157_adj_973 ), 
    .DI0(\u_speaker/n157_adj_945 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n157_adj_945 ), .Q0(\u_speaker/n25_adj_944 ), 
    .F1(\u_speaker/n157_adj_973 ), .Q1(\u_speaker/n25_adj_972 ));
  u_speaker_SLICE_790 \u_speaker/SLICE_790 ( .C1(\u_speaker/u_DDS_4/n6925 ), 
    .B1(\u_speaker/fcw_r_0_adj_886 ), .A1(\u_speaker/u_DDS_4/n6926 ), 
    .D0(\u_speaker/fcw_r_0_adj_886 ), .C0(\u_speaker/n25_adj_1049 ), 
    .B0(n19846), .A0(key_value_11), .DI0(\u_speaker/n157_adj_1050 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), 
    .F0(\u_speaker/n157_adj_1050 ), .Q0(\u_speaker/n25_adj_1049 ), 
    .F1(\u_speaker/u_DDS_4/n4 ));
  SLICE_791 SLICE_791( .D1(\u_speaker/n18689 ), .C1(n11464), .B1(n444), 
    .A1(n3815), .D0(n18676), .C0(n436), .B0(n18679), .A0(n3830), 
    .DI0(rom1_4_N_338_0), .LSR(n9292), .CLK(\u_speaker/rom1_4__N_289 ), 
    .F0(rom1_4_N_338_0), .Q0(\u_speaker/rom1_0 ), .F1(n3830));
  u_speaker_SLICE_792 \u_speaker/SLICE_792 ( .D1(n436), .C1(n18724), 
    .B1(n12156), .A1(n18722), .D0(n11464), .C0(\u_speaker/n15925 ), 
    .B0(\u_speaker/n18665 ), .A0(n444), .DI0(\u_speaker/n3839 ), .LSR(n18644), 
    .CLK(\u_speaker/rom1_4__N_289 ), .F0(\u_speaker/n3839 ), 
    .Q0(\u_speaker/rom1_1 ), .F1(\u_speaker/n18665 ));
  u_speaker_SLICE_793 \u_speaker/SLICE_793 ( .D1(n11464), .C1(n444), 
    .B1(\u_speaker/n18689 ), .A1(n456), .D0(\u_speaker/n16816 ), 
    .C0(\u_speaker/n10269 ), .B0(\u_speaker/n18698 ), .A0(\u_speaker/n480 ), 
    .DI0(\u_speaker/n16818 ), .LSR(\u_speaker/n18622 ), 
    .CLK(\u_speaker/rom1_4__N_289 ), .F0(\u_speaker/n16818 ), 
    .Q0(\u_speaker/rom1_2 ), .F1(\u_speaker/n16816 ));
  u_speaker_SLICE_794 \u_speaker/SLICE_794 ( .D1(n18761), 
    .C1(\u_speaker/n18762 ), .B1(rom2_1), .A1(rom2_0), .C0(\u_speaker/n10269 ), 
    .B0(\u_speaker/n18698 ), .A0(\u_speaker/n480 ), .DI0(\u_speaker/n15957 ), 
    .LSR(\u_speaker/n16916 ), .CLK(\u_speaker/rom1_4__N_289 ), 
    .F0(\u_speaker/n15957 ), .Q0(\u_speaker/rom1_3 ), .F1(\u_speaker/n18698 ));
  u_speaker_SLICE_795 \u_speaker/SLICE_795 ( .D1(n907), .C1(\u_speaker/n903 ), 
    .B1(n911), .A1(n18719), .D0(\u_speaker/n16929 ), .C0(\u_speaker/n18642 ), 
    .B0(\u_speaker/n18718 ), .A0(\u_speaker/n923 ), .DI0(\u_speaker/n16823 ), 
    .LSR(\u_speaker/n18621 ), .CLK(\u_speaker/rom2_4__N_297 ), 
    .F0(\u_speaker/n16823 ), .Q0(\u_speaker/rom2_2 ), .F1(\u_speaker/n18642 ));
  u_speaker_SLICE_796 \u_speaker/SLICE_796 ( .C1(\u_speaker/n118 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n117 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n145 ), .DI0(\u_speaker/n144 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n144 ), 
    .Q0(\u_speaker/u_DDS_1/n12 ), .F1(\u_speaker/n145 ), 
    .Q1(\u_speaker/u_DDS_1/n13 ));
  u_speaker_SLICE_797 \u_speaker/SLICE_797 ( .C1(\u_speaker/n120 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n119 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n147 ), .DI0(\u_speaker/n146 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n146 ), 
    .Q0(\u_speaker/u_DDS_1/n14 ), .F1(\u_speaker/n147 ), 
    .Q1(\u_speaker/u_DDS_1/n15 ));
  u_speaker_SLICE_798 \u_speaker/SLICE_798 ( .C1(\u_speaker/n122 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n121 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n149 ), .DI0(\u_speaker/n148 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n148 ), 
    .Q0(\u_speaker/u_DDS_1/n16 ), .F1(\u_speaker/n149 ), 
    .Q1(\u_speaker/u_DDS_1/n17 ));
  u_speaker_SLICE_799 \u_speaker/SLICE_799 ( .C1(\u_speaker/n124 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n123 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n151 ), .DI0(\u_speaker/n150 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n150 ), 
    .Q0(\u_speaker/u_DDS_1/n18 ), .F1(\u_speaker/n151 ), 
    .Q1(\u_speaker/u_DDS_1/n19 ));
  u_speaker_SLICE_800 \u_speaker/SLICE_800 ( .C1(\u_speaker/n126 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n125 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n153 ), .DI0(\u_speaker/n152 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n152 ), 
    .Q0(\u_speaker/u_DDS_1/n20 ), .F1(\u_speaker/n153 ), 
    .Q1(\u_speaker/u_DDS_1/n21 ));
  u_speaker_SLICE_801 \u_speaker/SLICE_801 ( .C1(\u_speaker/n128 ), 
    .B1(key_value_0), .A1(n19846), .C0(\u_speaker/n127 ), .B0(key_value_0), 
    .A0(n19846), .DI1(\u_speaker/n155 ), .DI0(\u_speaker/n154 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n154 ), 
    .Q0(\u_speaker/u_DDS_1/n22 ), .F1(\u_speaker/n155 ), 
    .Q1(\u_speaker/u_DDS_1/n23 ));
  u_speaker_SLICE_802 \u_speaker/SLICE_802 ( .D1(\u_speaker/n18665 ), 
    .C1(\u_speaker/n16816 ), .B1(n18679), .A1(n9292), .C0(\u_speaker/n129 ), 
    .B0(key_value_0), .A0(n19846), .DI0(\u_speaker/n156 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n156 ), 
    .Q0(\u_speaker/u_DDS_1/n24 ), .F1(\u_speaker/n16916 ));
  u_speaker_SLICE_803 \u_speaker/SLICE_803 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_4_adj_1251 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_3_adj_1253 ), .A0(n19846), 
    .DI1(\u_speaker/n46_adj_1252 ), .DI0(\u_speaker/n47_adj_1254 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n47_adj_1254 ), 
    .Q0(\u_speaker/u_DDS_10/count10_3 ), .F1(\u_speaker/n46_adj_1252 ), 
    .Q1(\u_speaker/u_DDS_10/count10_4 ));
  u_speaker_SLICE_804 \u_speaker/SLICE_804 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_6_adj_1245 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_5_adj_1249 ), .A0(n19846), 
    .DI1(\u_speaker/n44_adj_1246 ), .DI0(\u_speaker/n45_adj_1250 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n45_adj_1250 ), 
    .Q0(\u_speaker/u_DDS_10/count10_5 ), .F1(\u_speaker/n44_adj_1246 ), 
    .Q1(\u_speaker/u_DDS_10/count10_6 ));
  u_speaker_SLICE_805 \u_speaker/SLICE_805 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_8_adj_1241 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_7_adj_1243 ), .A0(n19846), 
    .DI1(\u_speaker/n42_adj_1242 ), .DI0(\u_speaker/n43_adj_1244 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n43_adj_1244 ), 
    .Q0(\u_speaker/u_DDS_10/count10_7 ), .F1(\u_speaker/n42_adj_1242 ), 
    .Q1(\u_speaker/u_DDS_10/count10_8 ));
  u_speaker_SLICE_806 \u_speaker/SLICE_806 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_10_adj_1235 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_9_adj_1237 ), .A0(n19846), 
    .DI1(\u_speaker/n40_adj_1236 ), .DI0(\u_speaker/n41_adj_1238 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n41_adj_1238 ), 
    .Q0(\u_speaker/u_DDS_10/count10_9 ), .F1(\u_speaker/n40_adj_1236 ), 
    .Q1(\u_speaker/u_DDS_10/count10_10 ));
  u_speaker_SLICE_807 \u_speaker/SLICE_807 ( .C1(key_value_9), 
    .B1(\u_speaker/count_24_N_543_12_adj_1140 ), .A1(n19846), .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_11_adj_1160 ), .A0(n19846), 
    .DI1(\u_speaker/n38_adj_1141 ), .DI0(\u_speaker/n39_adj_1161 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n39_adj_1161 ), 
    .Q0(\u_speaker/u_DDS_10/count10_11 ), .F1(\u_speaker/n38_adj_1141 ), 
    .Q1(\u_speaker/u_DDS_10/count10_12 ));
  u_speaker_SLICE_808 \u_speaker/SLICE_808 ( .C0(key_value_9), 
    .B0(\u_speaker/count_24_N_543_13_adj_1138 ), .A0(n19846), 
    .DI0(\u_speaker/n37_adj_1139 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n37_adj_1139 ), 
    .Q0(\u_speaker/u_DDS_10/count10_13 ));
  SLICE_810 SLICE_810( .D1(n18785), .C1(n18784), .B1(n19846), .A1(yinjie_2), 
    .D0(n18785), .C0(n18784), .B0(n19846), .A0(yinjie_2), 
    .DI1(fcw_r_15_N_495_6), .DI0(fcw_r_15_N_495_5), .CLK(clk), 
    .F0(fcw_r_15_N_495_5), .Q0(\u_speaker/u_DDS_10/fcw_r_5 ), 
    .F1(fcw_r_15_N_495_6), .Q1(\u_speaker/u_DDS_10/fcw_r_6 ));
  SLICE_811 SLICE_811( .D1(n18785), .C1(n18784), .B1(n19846), .A1(yinjie_2), 
    .D0(yinjie_2), .C0(n19846), .B0(n18785), .A0(n18784), 
    .DI1(fcw_r_15_N_495_8), .DI0(\u_speaker/u_DDS_10/fcw_r_15_N_495_7 ), 
    .CLK(clk), .F0(\u_speaker/u_DDS_10/fcw_r_15_N_495_7 ), 
    .Q0(\u_speaker/u_DDS_10/fcw_r_7 ), .F1(fcw_r_15_N_495_8), 
    .Q1(\u_speaker/u_DDS_10/fcw_r_8 ));
  SLICE_812 SLICE_812( .D1(n18785), .C1(n18784), .B1(n19846), .A1(yinjie_2), 
    .D0(n18785), .C0(n18784), .B0(n19846), .A0(yinjie_2), 
    .DI1(fcw_r_15_N_495_10), .DI0(fcw_r_15_N_495_9), .CLK(clk), 
    .F0(fcw_r_15_N_495_9), .Q0(\u_speaker/u_DDS_10/fcw_r_9 ), 
    .F1(fcw_r_15_N_495_10), .Q1(\u_speaker/u_DDS_10/fcw_r_10 ));
  SLICE_813 SLICE_813( .B1(n19846), .A1(yinjie_2), .D0(n18785), .C0(n18784), 
    .B0(n19846), .A0(yinjie_2), .DI0(fcw_r_15_N_495_11), .LSR(n10972), 
    .CLK(clk), .F0(fcw_r_15_N_495_11), .Q0(\u_speaker/u_DDS_10/fcw_r_11 ), 
    .F1(n10972));
  u_speaker_SLICE_814 \u_speaker/SLICE_814 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_3_adj_1223 ), .A1(n19846), .C0(key_value_10), 
    .B0(\u_speaker/count_24_N_543_2_adj_1221 ), .A0(n19846), 
    .DI1(\u_speaker/n47_adj_1224 ), .DI0(\u_speaker/n48_adj_1222 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n48_adj_1222 ), 
    .Q0(\u_speaker/u_DDS_11/count11_2 ), .F1(\u_speaker/n47_adj_1224 ), 
    .Q1(\u_speaker/u_DDS_11/count11_3 ));
  u_speaker_SLICE_815 \u_speaker/SLICE_815 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_5_adj_1247 ), .A1(n19846), .C0(key_value_10), 
    .B0(\u_speaker/count_24_N_543_4_adj_1225 ), .A0(n19846), 
    .DI1(\u_speaker/n45_adj_1248 ), .DI0(\u_speaker/n46_adj_1226 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n46_adj_1226 ), 
    .Q0(\u_speaker/u_DDS_11/count11_4 ), .F1(\u_speaker/n45_adj_1248 ), 
    .Q1(\u_speaker/u_DDS_11/count11_5 ));
  u_speaker_SLICE_816 \u_speaker/SLICE_816 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_7 ), .A1(n19846), .C0(key_value_10), 
    .B0(\u_speaker/count_24_N_543_6_adj_1233 ), .A0(n19846), 
    .DI1(\u_speaker/n43 ), .DI0(\u_speaker/n44_adj_1234 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n44_adj_1234 ), 
    .Q0(\u_speaker/u_DDS_11/count11_6 ), .F1(\u_speaker/n43 ), 
    .Q1(\u_speaker/u_DDS_11/count11_7 ));
  u_speaker_SLICE_817 \u_speaker/SLICE_817 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_9_adj_1102 ), .A1(n19846), .C0(key_value_10), 
    .B0(\u_speaker/count_24_N_543_8 ), .A0(n19846), 
    .DI1(\u_speaker/n41_adj_1103 ), .DI0(\u_speaker/n42 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n42 ), 
    .Q0(\u_speaker/u_DDS_11/count11_8 ), .F1(\u_speaker/n41_adj_1103 ), 
    .Q1(\u_speaker/u_DDS_11/count11_9 ));
  u_speaker_SLICE_818 \u_speaker/SLICE_818 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_11_adj_1106 ), .A1(n19846), 
    .C0(key_value_10), .B0(\u_speaker/count_24_N_543_10_adj_1104 ), 
    .A0(n19846), .DI1(\u_speaker/n39_adj_1107 ), 
    .DI0(\u_speaker/n40_adj_1105 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n40_adj_1105 ), 
    .Q0(\u_speaker/u_DDS_11/count11_10 ), .F1(\u_speaker/n39_adj_1107 ), 
    .Q1(\u_speaker/u_DDS_11/count11_11 ));
  u_speaker_SLICE_819 \u_speaker/SLICE_819 ( .C1(key_value_10), 
    .B1(\u_speaker/count_24_N_543_13_adj_1113 ), .A1(n19846), 
    .C0(key_value_10), .B0(\u_speaker/count_24_N_543_12_adj_1108 ), 
    .A0(n19846), .DI1(\u_speaker/n37_adj_1114 ), 
    .DI0(\u_speaker/n38_adj_1109 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n38_adj_1109 ), 
    .Q0(\u_speaker/u_DDS_11/count11_12 ), .F1(\u_speaker/n37_adj_1114 ), 
    .Q1(\u_speaker/u_DDS_11/count11_13 ));
  SLICE_820 SLICE_820( .D1(n18784), .C1(n18785), .B1(n19846), .A1(yinjie_2), 
    .D0(n18785), .C0(n19846), .B0(\u_speaker/yinjie_box_1 ), .A0(yinjie_1), 
    .DI1(n18717), .DI0(\u_speaker/n18705 ), .CLK(clk), .F0(\u_speaker/n18705 ), 
    .Q0(\u_speaker/u_DDS_11/fcw_r_2 ), .F1(n18717), 
    .Q1(\u_speaker/u_DDS_11/fcw_r_3 ));
  SLICE_821 SLICE_821( .C1(yinjie_2), .B1(n19846), .A1(yinjie_1), .D0(n18784), 
    .C0(n18785), .B0(n19846), .A0(yinjie_2), .DI1(\u_speaker/n19840 ), 
    .DI0(n19839), .CLK(clk), .F0(n19839), .Q0(\u_speaker/u_DDS_11/fcw_r_4 ), 
    .F1(\u_speaker/n19840 ), .Q1(\u_speaker/u_DDS_11/fcw_r_5 ));
  u_speaker_SLICE_825 \u_speaker/SLICE_825 ( .C1(\u_speaker/n118_adj_1051 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n117_adj_1053 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n145_adj_1052 ), 
    .DI0(\u_speaker/n144_adj_1054 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n144_adj_1054 ), .Q0(\u_speaker/u_DDS_12/n12 ), 
    .F1(\u_speaker/n145_adj_1052 ), .Q1(\u_speaker/u_DDS_12/n13 ));
  u_speaker_SLICE_826 \u_speaker/SLICE_826 ( .C1(\u_speaker/n120_adj_1026 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n119_adj_1024 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n147_adj_1027 ), 
    .DI0(\u_speaker/n146_adj_1025 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n146_adj_1025 ), .Q0(\u_speaker/u_DDS_12/n14 ), 
    .F1(\u_speaker/n147_adj_1027 ), .Q1(\u_speaker/u_DDS_12/n15 ));
  u_speaker_SLICE_827 \u_speaker/SLICE_827 ( .C1(\u_speaker/n122_adj_1030 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n121_adj_1028 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n149_adj_1031 ), 
    .DI0(\u_speaker/n148_adj_1029 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n148_adj_1029 ), .Q0(\u_speaker/u_DDS_12/n16 ), 
    .F1(\u_speaker/n149_adj_1031 ), .Q1(\u_speaker/u_DDS_12/n17 ));
  u_speaker_SLICE_828 \u_speaker/SLICE_828 ( .C1(\u_speaker/n124_adj_1034 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n123_adj_1032 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n151_adj_1035 ), 
    .DI0(\u_speaker/n150_adj_1033 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n150_adj_1033 ), .Q0(\u_speaker/u_DDS_12/n18 ), 
    .F1(\u_speaker/n151_adj_1035 ), .Q1(\u_speaker/u_DDS_12/n19 ));
  u_speaker_SLICE_829 \u_speaker/SLICE_829 ( .C1(\u_speaker/n126_adj_1040 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n125_adj_1036 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n153_adj_1041 ), 
    .DI0(\u_speaker/n152_adj_1037 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n152_adj_1037 ), .Q0(\u_speaker/u_DDS_12/n20 ), 
    .F1(\u_speaker/n153_adj_1041 ), .Q1(\u_speaker/u_DDS_12/n21 ));
  u_speaker_SLICE_830 \u_speaker/SLICE_830 ( .C1(\u_speaker/n128_adj_1044 ), 
    .B1(n19846), .A1(key_value_11), .C0(\u_speaker/n127_adj_1042 ), 
    .B0(n19846), .A0(key_value_11), .DI1(\u_speaker/n155_adj_1045 ), 
    .DI0(\u_speaker/n154_adj_1043 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n154_adj_1043 ), .Q0(\u_speaker/u_DDS_12/n22 ), 
    .F1(\u_speaker/n155_adj_1045 ), .Q1(\u_speaker/u_DDS_12/n23 ));
  SLICE_831 SLICE_831( .D1(n16876), .C1(n18668), .B1(n18763), .A1(n18620), 
    .C0(\u_speaker/n129_adj_1046 ), .B0(n19846), .A0(key_value_11), 
    .DI0(\u_speaker/n156_adj_1047 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n156_adj_1047 ), .Q0(\u_speaker/u_DDS_12/n24 ), 
    .F1(\u_buzzer/clk_N_168_enable_511 ));
  u_speaker_SLICE_832 \u_speaker/SLICE_832 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_3 ), .A1(n19846), .C0(key_value_12), 
    .B0(\u_speaker/count_24_N_543_2 ), .A0(n19846), .DI1(\u_speaker/n47 ), 
    .DI0(\u_speaker/n48 ), .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), 
    .F0(\u_speaker/n48 ), .Q0(\u_speaker/u_DDS_13/count13_2 ), 
    .F1(\u_speaker/n47 ), .Q1(\u_speaker/u_DDS_13/count13_3 ));
  u_speaker_SLICE_833 \u_speaker/SLICE_833 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_5_adj_1162 ), .A1(n19846), .C0(key_value_12), 
    .B0(\u_speaker/count_24_N_543_4_adj_1142 ), .A0(n19846), 
    .DI1(\u_speaker/n45_adj_1163 ), .DI0(\u_speaker/n46_adj_1143 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n46_adj_1143 ), 
    .Q0(\u_speaker/u_DDS_13/count13_4 ), .F1(\u_speaker/n45_adj_1163 ), 
    .Q1(\u_speaker/u_DDS_13/count13_5 ));
  u_speaker_SLICE_834 \u_speaker/SLICE_834 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_7_adj_841 ), .A1(n19846), .C0(key_value_12), 
    .B0(\u_speaker/count_24_N_543_6_adj_1100 ), .A0(n19846), 
    .DI1(\u_speaker/n43_adj_842 ), .DI0(\u_speaker/n44_adj_1101 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n44_adj_1101 ), 
    .Q0(\u_speaker/u_DDS_13/count13_6 ), .F1(\u_speaker/n43_adj_842 ), 
    .Q1(\u_speaker/u_DDS_13/count13_7 ));
  u_speaker_SLICE_835 \u_speaker/SLICE_835 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_9_adj_1079 ), .A1(n19846), .C0(key_value_12), 
    .B0(\u_speaker/count_24_N_543_8_adj_1097 ), .A0(n19846), 
    .DI1(\u_speaker/n41_adj_1080 ), .DI0(\u_speaker/n42_adj_1098 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n42_adj_1098 ), 
    .Q0(\u_speaker/u_DDS_13/count13_8 ), .F1(\u_speaker/n41_adj_1080 ), 
    .Q1(\u_speaker/u_DDS_13/count13_9 ));
  u_speaker_SLICE_836 \u_speaker/SLICE_836 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_11_adj_1038 ), .A1(n19846), 
    .C0(key_value_12), .B0(\u_speaker/count_24_N_543_10_adj_1077 ), 
    .A0(n19846), .DI1(\u_speaker/n39_adj_1039 ), 
    .DI0(\u_speaker/n40_adj_1078 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n40_adj_1078 ), 
    .Q0(\u_speaker/u_DDS_13/count13_10 ), .F1(\u_speaker/n39_adj_1039 ), 
    .Q1(\u_speaker/u_DDS_13/count13_11 ));
  u_speaker_SLICE_837 \u_speaker/SLICE_837 ( .C1(key_value_12), 
    .B1(\u_speaker/count_24_N_543_13 ), .A1(n19846), .C0(key_value_12), 
    .B0(\u_speaker/count_24_N_543_12_adj_1022 ), .A0(n19846), 
    .DI1(\u_speaker/n37 ), .DI0(\u_speaker/n38_adj_1023 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n38_adj_1023 ), 
    .Q0(\u_speaker/u_DDS_13/count13_12 ), .F1(\u_speaker/n37 ), 
    .Q1(\u_speaker/u_DDS_13/count13_13 ));
  u_speaker_SLICE_838 \u_speaker/SLICE_838 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_3_adj_1193 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_2_adj_1154 ), .A0(n19846), 
    .DI1(\u_speaker/n47_adj_1194 ), .DI0(\u_speaker/n48_adj_1155 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n48_adj_1155 ), 
    .Q0(\u_speaker/u_DDS_2/count2_2 ), .F1(\u_speaker/n47_adj_1194 ), 
    .Q1(\u_speaker/u_DDS_2/count2_3 ));
  u_speaker_SLICE_839 \u_speaker/SLICE_839 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_5 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_4 ), .A0(n19846), .DI1(\u_speaker/n45 ), 
    .DI0(\u_speaker/n46 ), .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), 
    .F0(\u_speaker/n46 ), .Q0(\u_speaker/u_DDS_2/count2_4 ), 
    .F1(\u_speaker/n45 ), .Q1(\u_speaker/u_DDS_2/count2_5 ));
  u_speaker_SLICE_840 \u_speaker/SLICE_840 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_7_adj_1088 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_6 ), .A0(n19846), 
    .DI1(\u_speaker/n43_adj_1089 ), .DI0(\u_speaker/n44 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n44 ), 
    .Q0(\u_speaker/u_DDS_2/count2_6 ), .F1(\u_speaker/n43_adj_1089 ), 
    .Q1(\u_speaker/u_DDS_2/count2_7 ));
  u_speaker_SLICE_841 \u_speaker/SLICE_841 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_9 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_8_adj_1181 ), .A0(n19846), 
    .DI1(\u_speaker/n41 ), .DI0(\u_speaker/n42_adj_1182 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n42_adj_1182 ), 
    .Q0(\u_speaker/u_DDS_2/count2_8 ), .F1(\u_speaker/n41 ), 
    .Q1(\u_speaker/u_DDS_2/count2_9 ));
  u_speaker_SLICE_842 \u_speaker/SLICE_842 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_11_adj_847 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_10_adj_1164 ), .A0(n19846), 
    .DI1(\u_speaker/n39_adj_848 ), .DI0(\u_speaker/n40_adj_1165 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n40_adj_1165 ), 
    .Q0(\u_speaker/u_DDS_2/count2_10 ), .F1(\u_speaker/n39_adj_848 ), 
    .Q1(\u_speaker/u_DDS_2/count2_11 ));
  u_speaker_SLICE_843 \u_speaker/SLICE_843 ( .C1(key_value_1), 
    .B1(\u_speaker/count_24_N_543_13_adj_1150 ), .A1(n19846), .C0(key_value_1), 
    .B0(\u_speaker/count_24_N_543_12_adj_1166 ), .A0(n19846), 
    .DI1(\u_speaker/n37_adj_1151 ), .DI0(\u_speaker/n38_adj_1167 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n38_adj_1167 ), 
    .Q0(\u_speaker/u_DDS_2/count2_12 ), .F1(\u_speaker/n37_adj_1151 ), 
    .Q1(\u_speaker/u_DDS_2/count2_13 ));
  u_speaker_SLICE_847 \u_speaker/SLICE_847 ( .C1(\u_speaker/n118_adj_888 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n117_adj_890 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n145_adj_889 ), 
    .DI0(\u_speaker/n144_adj_891 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n144_adj_891 ), .Q0(\u_speaker/u_DDS_3/n12 ), 
    .F1(\u_speaker/n145_adj_889 ), .Q1(\u_speaker/u_DDS_3/n13 ));
  u_speaker_SLICE_848 \u_speaker/SLICE_848 ( .C1(\u_speaker/n120_adj_865 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n119_adj_863 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n147_adj_866 ), 
    .DI0(\u_speaker/n146_adj_864 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n146_adj_864 ), .Q0(\u_speaker/u_DDS_3/n14 ), 
    .F1(\u_speaker/n147_adj_866 ), .Q1(\u_speaker/u_DDS_3/n15 ));
  u_speaker_SLICE_849 \u_speaker/SLICE_849 ( .C1(\u_speaker/n122_adj_869 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n121_adj_867 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n149_adj_870 ), 
    .DI0(\u_speaker/n148_adj_868 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n148_adj_868 ), .Q0(\u_speaker/u_DDS_3/n16 ), 
    .F1(\u_speaker/n149_adj_870 ), .Q1(\u_speaker/u_DDS_3/n17 ));
  u_speaker_SLICE_850 \u_speaker/SLICE_850 ( .C1(\u_speaker/n124_adj_873 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n123_adj_871 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n151_adj_874 ), 
    .DI0(\u_speaker/n150_adj_872 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n150_adj_872 ), .Q0(\u_speaker/u_DDS_3/n18 ), 
    .F1(\u_speaker/n151_adj_874 ), .Q1(\u_speaker/u_DDS_3/n19 ));
  u_speaker_SLICE_851 \u_speaker/SLICE_851 ( .C1(\u_speaker/n126_adj_877 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n125_adj_875 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n153_adj_878 ), 
    .DI0(\u_speaker/n152_adj_876 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n152_adj_876 ), .Q0(\u_speaker/u_DDS_3/n20 ), 
    .F1(\u_speaker/n153_adj_878 ), .Q1(\u_speaker/u_DDS_3/n21 ));
  u_speaker_SLICE_852 \u_speaker/SLICE_852 ( .C1(\u_speaker/n128_adj_881 ), 
    .B1(n19846), .A1(key_value_2), .C0(\u_speaker/n127_adj_879 ), .B0(n19846), 
    .A0(key_value_2), .DI1(\u_speaker/n155_adj_882 ), 
    .DI0(\u_speaker/n154_adj_880 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n154_adj_880 ), .Q0(\u_speaker/u_DDS_3/n22 ), 
    .F1(\u_speaker/n155_adj_882 ), .Q1(\u_speaker/u_DDS_3/n23 ));
  u_speaker_SLICE_853 \u_speaker/SLICE_853 ( .C1(rom2_3), 
    .B1(\u_speaker/n17004 ), .A1(\u_speaker/n18346 ), 
    .C0(\u_speaker/n129_adj_883 ), .B0(n19846), .A0(key_value_2), 
    .DI0(\u_speaker/n156_adj_884 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n156_adj_884 ), .Q0(\u_speaker/u_DDS_3/n24 ), 
    .F1(\u_speaker/n18347 ));
  u_speaker_SLICE_854 \u_speaker/SLICE_854 ( .C1(\u_speaker/n118_adj_946 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n117_adj_948 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n145_adj_947 ), 
    .DI0(\u_speaker/n144_adj_949 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n144_adj_949 ), .Q0(\u_speaker/u_DDS_4/n12 ), 
    .F1(\u_speaker/n145_adj_947 ), .Q1(\u_speaker/u_DDS_4/n13 ));
  u_speaker_SLICE_855 \u_speaker/SLICE_855 ( .C1(\u_speaker/n120_adj_918 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n119_adj_916 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n147_adj_919 ), 
    .DI0(\u_speaker/n146_adj_917 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n146_adj_917 ), .Q0(\u_speaker/u_DDS_4/n14 ), 
    .F1(\u_speaker/n147_adj_919 ), .Q1(\u_speaker/u_DDS_4/n15 ));
  u_speaker_SLICE_856 \u_speaker/SLICE_856 ( .C1(\u_speaker/n122_adj_922 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n121_adj_920 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n149_adj_923 ), 
    .DI0(\u_speaker/n148_adj_921 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n148_adj_921 ), .Q0(\u_speaker/u_DDS_4/n16 ), 
    .F1(\u_speaker/n149_adj_923 ), .Q1(\u_speaker/u_DDS_4/n17 ));
  u_speaker_SLICE_857 \u_speaker/SLICE_857 ( .C1(\u_speaker/n124_adj_926 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n123_adj_924 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n151_adj_927 ), 
    .DI0(\u_speaker/n150_adj_925 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n150_adj_925 ), .Q0(\u_speaker/u_DDS_4/n18 ), 
    .F1(\u_speaker/n151_adj_927 ), .Q1(\u_speaker/u_DDS_4/n19 ));
  u_speaker_SLICE_858 \u_speaker/SLICE_858 ( .C1(\u_speaker/n127_adj_938 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n126_adj_932 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n154_adj_939 ), 
    .DI0(\u_speaker/n153_adj_933 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n153_adj_933 ), .Q0(\u_speaker/u_DDS_4/n21 ), 
    .F1(\u_speaker/n154_adj_939 ), .Q1(\u_speaker/u_DDS_4/n22 ));
  u_speaker_SLICE_859 \u_speaker/SLICE_859 ( .C1(\u_speaker/n129_adj_942 ), 
    .B1(n19846), .A1(key_value_3), .C0(\u_speaker/n128_adj_940 ), .B0(n19846), 
    .A0(key_value_3), .DI1(\u_speaker/n156_adj_943 ), 
    .DI0(\u_speaker/n155_adj_941 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n155_adj_941 ), .Q0(\u_speaker/u_DDS_4/n23 ), 
    .F1(\u_speaker/n156_adj_943 ), .Q1(\u_speaker/u_DDS_4/n24 ));
  SLICE_860 SLICE_860( .C1(n18808), .B1(note_1), .A1(note_0), 
    .C0(\u_speaker/n125_adj_930 ), .B0(n19846), .A0(key_value_3), 
    .DI0(\u_speaker/n152_adj_931 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n152_adj_931 ), 
    .Q0(\u_speaker/u_DDS_4/n20_adj_836 ), .F1(n14_adj_1471));
  u_speaker_SLICE_861 \u_speaker/SLICE_861 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_3_adj_1191 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_2_adj_1229 ), .A0(n19846), 
    .DI1(\u_speaker/n47_adj_1192 ), .DI0(\u_speaker/n48_adj_1230 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n48_adj_1230 ), 
    .Q0(\u_speaker/u_DDS_5/count5_2 ), .F1(\u_speaker/n47_adj_1192 ), 
    .Q1(\u_speaker/u_DDS_5/count5_3 ));
  u_speaker_SLICE_862 \u_speaker/SLICE_862 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_5_adj_1195 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_4_adj_1231 ), .A0(n19846), 
    .DI1(\u_speaker/n45_adj_1196 ), .DI0(\u_speaker/n46_adj_1232 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n46_adj_1232 ), 
    .Q0(\u_speaker/u_DDS_5/count5_4 ), .F1(\u_speaker/n45_adj_1196 ), 
    .Q1(\u_speaker/u_DDS_5/count5_5 ));
  u_speaker_SLICE_863 \u_speaker/SLICE_863 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_7_adj_1185 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_6_adj_1227 ), .A0(n19846), 
    .DI1(\u_speaker/n43_adj_1186 ), .DI0(\u_speaker/n44_adj_1228 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n44_adj_1228 ), 
    .Q0(\u_speaker/u_DDS_5/count5_6 ), .F1(\u_speaker/n43_adj_1186 ), 
    .Q1(\u_speaker/u_DDS_5/count5_7 ));
  u_speaker_SLICE_864 \u_speaker/SLICE_864 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_9_adj_1183 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_8_adj_1178 ), .A0(n19846), 
    .DI1(\u_speaker/n41_adj_1184 ), .DI0(\u_speaker/n42_adj_1179 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n42_adj_1179 ), 
    .Q0(\u_speaker/u_DDS_5/count5_8 ), .F1(\u_speaker/n41_adj_1184 ), 
    .Q1(\u_speaker/u_DDS_5/count5_9 ));
  u_speaker_SLICE_865 \u_speaker/SLICE_865 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_11_adj_1090 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_10_adj_845 ), .A0(n19846), 
    .DI1(\u_speaker/n39_adj_1091 ), .DI0(\u_speaker/n40_adj_846 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n40_adj_846 ), 
    .Q0(\u_speaker/u_DDS_5/count5_10 ), .F1(\u_speaker/n39_adj_1091 ), 
    .Q1(\u_speaker/u_DDS_5/count5_11 ));
  u_speaker_SLICE_866 \u_speaker/SLICE_866 ( .C1(key_value_4), 
    .B1(\u_speaker/count_24_N_543_13_adj_1093 ), .A1(n19846), .C0(key_value_4), 
    .B0(\u_speaker/count_24_N_543_12_adj_1084 ), .A0(n19846), 
    .DI1(\u_speaker/n37_adj_1094 ), .DI0(\u_speaker/n38_adj_1085 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n38_adj_1085 ), 
    .Q0(\u_speaker/u_DDS_5/count5_12 ), .F1(\u_speaker/n37_adj_1094 ), 
    .Q1(\u_speaker/u_DDS_5/count5_13 ));
  SLICE_867 SLICE_867( .D1(\u_key_14/delay_cnt_5 ), 
    .C1(\u_key_14/delay_cnt_30 ), .B1(\u_key_14/delay_cnt_14 ), 
    .A1(\u_key_14/delay_cnt_27 ), .D0(\u_key_4/delay_cnt_5 ), 
    .C0(\u_key_4/delay_cnt_30 ), .B0(\u_key_4/delay_cnt_14 ), 
    .A0(\u_key_4/delay_cnt_27 ), .M1(n19839), .M0(n18717), .CLK(clk), 
    .F0(\u_key_4/n54 ), .Q0(\u_speaker/u_DDS_5/fcw_r_3 ), .F1(\u_key_14/n54 ), 
    .Q1(\u_speaker/u_DDS_5/fcw_r_4 ));
  SLICE_868 SLICE_868( .D1(n18784), .C1(n18785), .B1(n19846), .A1(yinjie_2), 
    .D0(n18784), .C0(n18785), .B0(n19846), .A0(yinjie_2), .DI1(n8146), 
    .DI0(n8147), .CLK(clk), .F0(n8147), .Q0(\u_speaker/u_DDS_5/fcw_r_5 ), 
    .F1(n8146), .Q1(\u_speaker/u_DDS_5/fcw_r_6 ));
  SLICE_869 SLICE_869( .D1(\u_key_15/delay_cnt_5 ), 
    .C1(\u_key_15/delay_cnt_30 ), .B1(\u_key_15/delay_cnt_14 ), 
    .A1(\u_key_15/delay_cnt_27 ), .D0(\u_key_15/delay_cnt_10 ), 
    .C0(\u_key_15/delay_cnt_26 ), .B0(\u_key_15/delay_cnt_28 ), 
    .A0(\u_key_15/delay_cnt_22 ), .M0(\u_speaker/n18705 ), .CLK(clk), 
    .F0(\u_key_15/n49 ), .Q0(\u_speaker/u_DDS_5/fcw_r_2_adj_838 ), 
    .F1(\u_key_15/n54 ));
  SLICE_870 SLICE_870( .D1(\u_key_3/delay_cnt_5 ), .C1(\u_key_3/delay_cnt_30 ), 
    .B1(\u_key_3/delay_cnt_14 ), .A1(\u_key_3/delay_cnt_27 ), 
    .D0(\u_key_6/delay_cnt_5 ), .C0(\u_key_6/delay_cnt_30 ), 
    .B0(\u_key_6/delay_cnt_14 ), .A0(\u_key_6/delay_cnt_27 ), 
    .M0(\u_speaker/n19840 ), .CLK(clk), .F0(\u_key_6/n54 ), 
    .Q0(\u_speaker/u_DDS_5/n6898 ), .F1(\u_key_3/n54 ));
  u_speaker_SLICE_871 \u_speaker/SLICE_871 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_4_adj_1381 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_3_adj_1379 ), .A0(n19846), 
    .DI1(\u_speaker/n46_adj_1382 ), .DI0(\u_speaker/n47_adj_1380 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n47_adj_1380 ), 
    .Q0(\u_speaker/u_DDS_6/count6_3 ), .F1(\u_speaker/n46_adj_1382 ), 
    .Q1(\u_speaker/u_DDS_6/count6_4 ));
  u_speaker_SLICE_872 \u_speaker/SLICE_872 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_6_adj_1385 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_5_adj_1383 ), .A0(n19846), 
    .DI1(\u_speaker/n44_adj_1386 ), .DI0(\u_speaker/n45_adj_1384 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n45_adj_1384 ), 
    .Q0(\u_speaker/u_DDS_6/count6_5 ), .F1(\u_speaker/n44_adj_1386 ), 
    .Q1(\u_speaker/u_DDS_6/count6_6 ));
  u_speaker_SLICE_873 \u_speaker/SLICE_873 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_8_adj_1389 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_7_adj_1387 ), .A0(n19846), 
    .DI1(\u_speaker/n42_adj_1390 ), .DI0(\u_speaker/n43_adj_1388 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n43_adj_1388 ), 
    .Q0(\u_speaker/u_DDS_6/count6_7 ), .F1(\u_speaker/n42_adj_1390 ), 
    .Q1(\u_speaker/u_DDS_6/count6_8 ));
  u_speaker_SLICE_874 \u_speaker/SLICE_874 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_10 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_9_adj_1391 ), .A0(n19846), 
    .DI1(\u_speaker/n40 ), .DI0(\u_speaker/n41_adj_1392 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n41_adj_1392 ), 
    .Q0(\u_speaker/u_DDS_6/count6_9 ), .F1(\u_speaker/n40 ), 
    .Q1(\u_speaker/u_DDS_6/count6_10 ));
  u_speaker_SLICE_875 \u_speaker/SLICE_875 ( .C1(key_value_5), 
    .B1(\u_speaker/count_24_N_543_12 ), .A1(n19846), .C0(key_value_5), 
    .B0(\u_speaker/count_24_N_543_11 ), .A0(n19846), .DI1(\u_speaker/n38 ), 
    .DI0(\u_speaker/n39 ), .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), 
    .F0(\u_speaker/n39 ), .Q0(\u_speaker/u_DDS_6/count6_11 ), 
    .F1(\u_speaker/n38 ), .Q1(\u_speaker/u_DDS_6/count6_12 ));
  SLICE_876 SLICE_876( .D1(n18706), .C1(n18610), .B1(\u_buzzer/n18640 ), 
    .A1(n19846), .C0(key_value_5), .B0(\u_speaker/count_24_N_543_13_adj_1082 ), 
    .A0(n19846), .DI0(\u_speaker/n37_adj_1083 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n37_adj_1083 ), 
    .Q0(\u_speaker/u_DDS_6/count6_13 ), .F1(\u_buzzer/clk_N_168_enable_522 ));
  SLICE_877 SLICE_877( .D1(\u_key_7/delay_cnt_5 ), .C1(\u_key_7/delay_cnt_30 ), 
    .B1(\u_key_7/delay_cnt_14 ), .A1(\u_key_7/delay_cnt_27 ), 
    .C0(count_note_6), .B0(n18841), .A0(n17227), .M0(fcw_r_15_N_495_5), 
    .CLK(clk), .F0(n17124), .Q0(\u_speaker/u_DDS_6/fcw_r_5 ), 
    .F1(\u_key_7/n54 ));
  SLICE_878 SLICE_878( .D1(n18785), .C1(n18784), .B1(n19846), .A1(yinjie_2), 
    .D0(n18690), .C0(\u_speaker/n18705 ), .B0(fcw_r_15_N_495_11), .A0(n18757), 
    .DI0(\u_speaker/n16936 ), .CLK(clk), .F0(\u_speaker/n16936 ), 
    .Q0(\u_speaker/u_DDS_6/fcw_r_6 ), .F1(n18690));
  u_speaker_SLICE_879 \u_speaker/SLICE_879 ( .D1(n19839), 
    .C1(fcw_r_15_N_495_11), .B1(\u_speaker/n18634 ), .A1(n18717), 
    .D0(\u_speaker/n18608 ), .C0(n18785), .B0(n18784), .A0(n18757), 
    .DI1(\u_speaker/u_DDS_6/n7921 ), .DI0(\u_speaker/n7920 ), .CLK(clk), 
    .F0(\u_speaker/n7920 ), .Q0(\u_speaker/u_DDS_6/n6874 ), 
    .F1(\u_speaker/u_DDS_6/n7921 ), .Q1(\u_speaker/u_DDS_6/n6875 ));
  u_speaker_SLICE_880 \u_speaker/SLICE_880 ( .D1(n18785), .C1(n19846), 
    .B1(\u_speaker/yinjie_box_1 ), .A1(yinjie_1), .D0(\u_speaker/n18634 ), 
    .C0(\u_speaker/n18716 ), .B0(fcw_r_15_N_495_11), .A0(n18757), 
    .DI0(\u_speaker/n15966 ), .CLK(clk), .F0(\u_speaker/n15966 ), 
    .Q0(\u_speaker/u_DDS_6/n6876 ), .F1(\u_speaker/n18716 ));
  SLICE_881 SLICE_881( .D1(\u_key_1/delay_cnt_5 ), .C1(\u_key_1/delay_cnt_30 ), 
    .B1(\u_key_1/delay_cnt_14 ), .A1(\u_key_1/delay_cnt_27 ), 
    .D0(\u_key_9/delay_cnt_5 ), .C0(\u_key_9/delay_cnt_30 ), 
    .B0(\u_key_9/delay_cnt_14 ), .A0(\u_key_9/delay_cnt_27 ), .M1(n18717), 
    .M0(\u_speaker/n18705 ), .CLK(clk), .F0(\u_key_9/n54 ), 
    .Q0(\u_speaker/u_DDS_7/fcw_r_1 ), .F1(\u_key_1/n54 ), 
    .Q1(\u_speaker/u_DDS_7/fcw_r_2 ));
  SLICE_882 SLICE_882( .D1(\u_key_13/delay_cnt_5 ), 
    .C1(\u_key_13/delay_cnt_30 ), .B1(\u_key_13/delay_cnt_14 ), 
    .A1(\u_key_13/delay_cnt_27 ), .D0(\u_key_2/delay_cnt_5 ), 
    .C0(\u_key_2/delay_cnt_30 ), .B0(\u_key_2/delay_cnt_14 ), 
    .A0(\u_key_2/delay_cnt_27 ), .M1(\u_speaker/n19840 ), .M0(n19839), 
    .CLK(clk), .F0(\u_key_2/n54 ), .Q0(\u_speaker/u_DDS_7/fcw_r_3 ), 
    .F1(\u_key_13/n54 ), .Q1(\u_speaker/u_DDS_7/fcw_r_4 ));
  SLICE_883 SLICE_883( .D1(\u_key_12/delay_cnt_5 ), 
    .C1(\u_key_12/delay_cnt_30 ), .B1(\u_key_12/delay_cnt_14 ), 
    .A1(\u_key_12/delay_cnt_27 ), .D0(\u_key_11/delay_cnt_5 ), 
    .C0(\u_key_11/delay_cnt_30 ), .B0(\u_key_11/delay_cnt_14 ), 
    .A0(\u_key_11/delay_cnt_27 ), .M1(n18757), .M0(n18784), .CLK(clk), 
    .F0(\u_key_11/n54 ), .Q0(\u_speaker/u_DDS_7/fcw_r_9 ), .F1(\u_key_12/n54 ), 
    .Q1(\u_speaker/u_DDS_7/fcw_r_10 ));
  u_speaker_SLICE_884 \u_speaker/SLICE_884 ( .C1(\u_speaker/n118_adj_996 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n117_adj_998 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n145_adj_997 ), 
    .DI0(\u_speaker/n144_adj_999 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n144_adj_999 ), .Q0(\u_speaker/u_DDS_7/n12 ), 
    .F1(\u_speaker/n145_adj_997 ), .Q1(\u_speaker/u_DDS_7/n13 ));
  u_speaker_SLICE_885 \u_speaker/SLICE_885 ( .C1(\u_speaker/n120_adj_992 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n119_adj_994 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n147_adj_993 ), 
    .DI0(\u_speaker/n146_adj_995 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n146_adj_995 ), .Q0(\u_speaker/u_DDS_7/n14 ), 
    .F1(\u_speaker/n147_adj_993 ), .Q1(\u_speaker/u_DDS_7/n15 ));
  u_speaker_SLICE_886 \u_speaker/SLICE_886 ( .C1(\u_speaker/n122_adj_988 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n121_adj_990 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n149_adj_989 ), 
    .DI0(\u_speaker/n148_adj_991 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n148_adj_991 ), .Q0(\u_speaker/u_DDS_7/n16 ), 
    .F1(\u_speaker/n149_adj_989 ), .Q1(\u_speaker/u_DDS_7/n17 ));
  u_speaker_SLICE_887 \u_speaker/SLICE_887 ( .C1(\u_speaker/n124_adj_984 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n123_adj_986 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n151_adj_985 ), 
    .DI0(\u_speaker/n150_adj_987 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n150_adj_987 ), .Q0(\u_speaker/u_DDS_7/n18 ), 
    .F1(\u_speaker/n151_adj_985 ), .Q1(\u_speaker/u_DDS_7/n19 ));
  u_speaker_SLICE_888 \u_speaker/SLICE_888 ( .C1(\u_speaker/n126_adj_980 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n125_adj_982 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n153_adj_981 ), 
    .DI0(\u_speaker/n152_adj_983 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n152_adj_983 ), .Q0(\u_speaker/u_DDS_7/n20 ), 
    .F1(\u_speaker/n153_adj_981 ), .Q1(\u_speaker/u_DDS_7/n21 ));
  u_speaker_SLICE_889 \u_speaker/SLICE_889 ( .C1(\u_speaker/n128_adj_976 ), 
    .B1(key_value_6), .A1(n19846), .C0(\u_speaker/n127_adj_978 ), 
    .B0(key_value_6), .A0(n19846), .DI1(\u_speaker/n155_adj_977 ), 
    .DI0(\u_speaker/n154_adj_979 ), .LSR(\u_speaker/pwm_out2_N_125 ), 
    .CLK(clk), .F0(\u_speaker/n154_adj_979 ), .Q0(\u_speaker/u_DDS_7/n22 ), 
    .F1(\u_speaker/n155_adj_977 ), .Q1(\u_speaker/u_DDS_7/n23 ));
  SLICE_890 SLICE_890( .D1(key_value_3), .C1(key_value_11), .B1(key_value_2), 
    .A1(key_value_6), .C0(\u_speaker/n129_adj_974 ), .B0(key_value_6), 
    .A0(n19846), .DI0(\u_speaker/n156_adj_975 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n156_adj_975 ), 
    .Q0(\u_speaker/u_DDS_7/n24 ), .F1(\u_buzzer/n22_adj_823 ));
  u_speaker_SLICE_891 \u_speaker/SLICE_891 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_3_adj_1348 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_2_adj_1350 ), .A0(n19846), 
    .DI1(\u_speaker/n47_adj_1349 ), .DI0(\u_speaker/n48_adj_1351 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n48_adj_1351 ), 
    .Q0(\u_speaker/u_DDS_8/count8_2 ), .F1(\u_speaker/n47_adj_1349 ), 
    .Q1(\u_speaker/u_DDS_8/count8_3 ));
  u_speaker_SLICE_892 \u_speaker/SLICE_892 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_5_adj_1344 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_4_adj_1346 ), .A0(n19846), 
    .DI1(\u_speaker/n45_adj_1345 ), .DI0(\u_speaker/n46_adj_1347 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n46_adj_1347 ), 
    .Q0(\u_speaker/u_DDS_8/count8_4 ), .F1(\u_speaker/n45_adj_1345 ), 
    .Q1(\u_speaker/u_DDS_8/count8_5 ));
  u_speaker_SLICE_893 \u_speaker/SLICE_893 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_7_adj_1340 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_6_adj_1342 ), .A0(n19846), 
    .DI1(\u_speaker/n43_adj_1341 ), .DI0(\u_speaker/n44_adj_1343 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n44_adj_1343 ), 
    .Q0(\u_speaker/u_DDS_8/count8_6 ), .F1(\u_speaker/n43_adj_1341 ), 
    .Q1(\u_speaker/u_DDS_8/count8_7 ));
  u_speaker_SLICE_894 \u_speaker/SLICE_894 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_9_adj_1336 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_8_adj_1338 ), .A0(n19846), 
    .DI1(\u_speaker/n41_adj_1337 ), .DI0(\u_speaker/n42_adj_1339 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n42_adj_1339 ), 
    .Q0(\u_speaker/u_DDS_8/count8_8 ), .F1(\u_speaker/n41_adj_1337 ), 
    .Q1(\u_speaker/u_DDS_8/count8_9 ));
  u_speaker_SLICE_895 \u_speaker/SLICE_895 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_11_adj_1328 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_10_adj_1332 ), .A0(n19846), 
    .DI1(\u_speaker/n39_adj_1329 ), .DI0(\u_speaker/n40_adj_1333 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n40_adj_1333 ), 
    .Q0(\u_speaker/u_DDS_8/count8_10 ), .F1(\u_speaker/n39_adj_1329 ), 
    .Q1(\u_speaker/u_DDS_8/count8_11 ));
  u_speaker_SLICE_896 \u_speaker/SLICE_896 ( .C1(key_value_7), 
    .B1(\u_speaker/count_24_N_543_13_adj_1354 ), .A1(n19846), .C0(key_value_7), 
    .B0(\u_speaker/count_24_N_543_12_adj_1326 ), .A0(n19846), 
    .DI1(\u_speaker/n37_adj_1355 ), .DI0(\u_speaker/n38_adj_1327 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n38_adj_1327 ), 
    .Q0(\u_speaker/u_DDS_8/count8_12 ), .F1(\u_speaker/n37_adj_1355 ), 
    .Q1(\u_speaker/u_DDS_8/count8_13 ));
  SLICE_897 SLICE_897( .D1(\u_key_10/delay_cnt_5 ), 
    .C1(\u_key_10/delay_cnt_30 ), .B1(\u_key_10/delay_cnt_14 ), 
    .A1(\u_key_10/delay_cnt_27 ), .D0(\u_key_8/delay_cnt_5 ), 
    .C0(\u_key_8/delay_cnt_30 ), .B0(\u_key_8/delay_cnt_14 ), 
    .A0(\u_key_8/delay_cnt_27 ), .M1(n18757), .M0(n18784), .CLK(clk), 
    .F0(\u_key_8/n54 ), .Q0(\u_speaker/u_DDS_8/fcw_r_9 ), .F1(\u_key_10/n54 ), 
    .Q1(\u_speaker/u_DDS_8/fcw_r_10 ));
  u_speaker_SLICE_898 \u_speaker/SLICE_898 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_3_adj_1282 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_2_adj_1280 ), .A0(n19846), 
    .DI1(\u_speaker/n47_adj_1283 ), .DI0(\u_speaker/n48_adj_1281 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n48_adj_1281 ), 
    .Q0(\u_speaker/u_DDS_9/count9_2 ), .F1(\u_speaker/n47_adj_1283 ), 
    .Q1(\u_speaker/u_DDS_9/count9_3 ));
  u_speaker_SLICE_899 \u_speaker/SLICE_899 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_5_adj_1286 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_4_adj_1284 ), .A0(n19846), 
    .DI1(\u_speaker/n45_adj_1287 ), .DI0(\u_speaker/n46_adj_1285 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n46_adj_1285 ), 
    .Q0(\u_speaker/u_DDS_9/count9_4 ), .F1(\u_speaker/n45_adj_1287 ), 
    .Q1(\u_speaker/u_DDS_9/count9_5 ));
  u_speaker_SLICE_900 \u_speaker/SLICE_900 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_7_adj_1290 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_6_adj_1288 ), .A0(n19846), 
    .DI1(\u_speaker/n43_adj_1291 ), .DI0(\u_speaker/n44_adj_1289 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n44_adj_1289 ), 
    .Q0(\u_speaker/u_DDS_9/count9_6 ), .F1(\u_speaker/n43_adj_1291 ), 
    .Q1(\u_speaker/u_DDS_9/count9_7 ));
  u_speaker_SLICE_901 \u_speaker/SLICE_901 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_9_adj_1294 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_8_adj_1292 ), .A0(n19846), 
    .DI1(\u_speaker/n41_adj_1295 ), .DI0(\u_speaker/n42_adj_1293 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n42_adj_1293 ), 
    .Q0(\u_speaker/u_DDS_9/count9_8 ), .F1(\u_speaker/n41_adj_1295 ), 
    .Q1(\u_speaker/u_DDS_9/count9_9 ));
  u_speaker_SLICE_902 \u_speaker/SLICE_902 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_11_adj_1298 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_10_adj_1296 ), .A0(n19846), 
    .DI1(\u_speaker/n39_adj_1299 ), .DI0(\u_speaker/n40_adj_1297 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n40_adj_1297 ), 
    .Q0(\u_speaker/u_DDS_9/count9_10 ), .F1(\u_speaker/n39_adj_1299 ), 
    .Q1(\u_speaker/u_DDS_9/count9_11 ));
  u_speaker_SLICE_903 \u_speaker/SLICE_903 ( .C1(key_value_8), 
    .B1(\u_speaker/count_24_N_543_13_adj_1302 ), .A1(n19846), .C0(key_value_8), 
    .B0(\u_speaker/count_24_N_543_12_adj_1300 ), .A0(n19846), 
    .DI1(\u_speaker/n37_adj_1303 ), .DI0(\u_speaker/n38_adj_1301 ), 
    .LSR(\u_speaker/pwm_out2_N_125 ), .CLK(clk), .F0(\u_speaker/n38_adj_1301 ), 
    .Q0(\u_speaker/u_DDS_9/count9_12 ), .F1(\u_speaker/n37_adj_1303 ), 
    .Q1(\u_speaker/u_DDS_9/count9_13 ));
  SLICE_904 SLICE_904( .D1(\u_key_5/delay_cnt_5 ), .C1(\u_key_5/delay_cnt_30 ), 
    .B1(\u_key_5/delay_cnt_14 ), .A1(\u_key_5/delay_cnt_27 ), .D0(cnt_17), 
    .C0(cnt_3), .B0(cnt_12), .A0(cnt_28), .M1(n18757), .M0(n18784), .CLK(clk), 
    .F0(n40), .Q0(\u_speaker/u_DDS_9/fcw_r_9 ), .F1(\u_key_5/n54 ), 
    .Q1(\u_speaker/u_DDS_9/fcw_r_10 ));
  u_speaker_SLICE_905 \u_speaker/SLICE_905 ( .C1(\u_speaker/n3086 ), 
    .B1(\u_speaker/n2819 ), .A1(\u_speaker/n2789 ), .C0(\u_speaker/n3086 ), 
    .B0(\u_speaker/n2820 ), .A0(\u_speaker/n2790 ), 
    .DI1(\u_speaker/u_count1_24_N_142_15 ), 
    .DI0(\u_speaker/u_count1_24_N_142_14 ), .CLK(clk), 
    .F0(\u_speaker/u_count1_24_N_142_14 ), .Q0(\u_speaker/u_count1_14 ), 
    .F1(\u_speaker/u_count1_24_N_142_15 ), .Q1(\u_speaker/u_count1_15 ));
  u_speaker_SLICE_906 \u_speaker/SLICE_906 ( .C1(\u_speaker/n3086 ), 
    .B1(\u_speaker/n2817 ), .A1(\u_speaker/n2787 ), .C0(\u_speaker/n3086 ), 
    .B0(\u_speaker/n2818 ), .A0(\u_speaker/n2788 ), 
    .DI1(\u_speaker/u_count1_24_N_142_17 ), 
    .DI0(\u_speaker/u_count1_24_N_142_16 ), .CLK(clk), 
    .F0(\u_speaker/u_count1_24_N_142_16 ), .Q0(\u_speaker/u_count1_16 ), 
    .F1(\u_speaker/u_count1_24_N_142_17 ), .Q1(\u_speaker/u_count1_17 ));
  u_speaker_SLICE_907 \u_speaker/SLICE_907 ( .C1(\u_speaker/n3086 ), 
    .B1(\u_speaker/n2815 ), .A1(\u_speaker/n2785 ), .C0(\u_speaker/n3086 ), 
    .B0(\u_speaker/n2816 ), .A0(\u_speaker/n2786 ), 
    .DI1(\u_speaker/u_count1_24_N_142_19 ), 
    .DI0(\u_speaker/u_count1_24_N_142_18 ), .CLK(clk), 
    .F0(\u_speaker/u_count1_24_N_142_18 ), .Q0(\u_speaker/u_count1_18 ), 
    .F1(\u_speaker/u_count1_24_N_142_19 ), .Q1(\u_speaker/u_count1_19 ));
  u_speaker_SLICE_908 \u_speaker/SLICE_908 ( .C1(\u_speaker/n3086 ), 
    .B1(\u_speaker/n2813 ), .A1(\u_speaker/n2783 ), .C0(\u_speaker/n3086 ), 
    .B0(\u_speaker/n2814 ), .A0(\u_speaker/n2784 ), 
    .DI1(\u_speaker/u_count1_24_N_142_21 ), 
    .DI0(\u_speaker/u_count1_24_N_142_20 ), .CLK(clk), 
    .F0(\u_speaker/u_count1_24_N_142_20 ), .Q0(\u_speaker/u_count1_20 ), 
    .F1(\u_speaker/u_count1_24_N_142_21 ), .Q1(\u_speaker/u_count1_21 ));
  u_speaker_SLICE_909 \u_speaker/SLICE_909 ( .C1(\u_speaker/n3086 ), 
    .B1(\u_speaker/n2811 ), .A1(\u_speaker/n2781 ), .C0(\u_speaker/n3086 ), 
    .B0(\u_speaker/n2812 ), .A0(\u_speaker/n2782 ), 
    .DI1(\u_speaker/u_count1_24_N_142_23 ), 
    .DI0(\u_speaker/u_count1_24_N_142_22 ), .CLK(clk), 
    .F0(\u_speaker/u_count1_24_N_142_22 ), .Q0(\u_speaker/u_count1_22 ), 
    .F1(\u_speaker/u_count1_24_N_142_23 ), .Q1(\u_speaker/u_count1_23 ));
  SLICE_910 SLICE_910( .D1(cnt_11), .C1(cnt_22), .B1(cnt_9), .A1(cnt_13), 
    .C0(\u_speaker/n3086 ), .B0(\u_speaker/n2810 ), .A0(\u_speaker/n2780 ), 
    .DI0(\u_speaker/u_count1_24_N_142_24 ), .M1(n18785), .CLK(clk), 
    .F0(\u_speaker/u_count1_24_N_142_24 ), .Q0(\u_speaker/u_count1_24 ), 
    .F1(n17005), .Q1(\u_speaker/fcw_r_8_adj_1278 ));
  u_speaker_SLICE_911 \u_speaker/SLICE_911 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_14 ), .A1(\u_speaker/n3440 ), .C0(rom2_1), 
    .B0(\u_speaker/n3469 ), .A0(\u_speaker/n3498 ), .DI1(\u_speaker/n3692 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3665 ), .FXA(\u_speaker/n3638 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3665 ), .Q1(\u_speaker/u_count2_14 ), 
    .OFX1(\u_speaker/n3692 ));
  u_speaker_SLICE_912 \u_speaker/SLICE_912 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_15 ), .A1(\u_speaker/n3439 ), .C0(rom2_1), 
    .B0(\u_speaker/n3468 ), .A0(\u_speaker/n3497 ), .DI1(\u_speaker/n3691 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3664 ), .FXA(\u_speaker/n3637 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3664 ), .Q1(\u_speaker/u_count2_15 ), 
    .OFX1(\u_speaker/n3691 ));
  u_speaker_SLICE_913 \u_speaker/SLICE_913 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_16 ), .A1(\u_speaker/n3438 ), .C0(rom2_1), 
    .B0(\u_speaker/n3467 ), .A0(\u_speaker/n3496 ), .DI1(\u_speaker/n3690 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3663 ), .FXA(\u_speaker/n3636 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3663 ), .Q1(\u_speaker/u_count2_16 ), 
    .OFX1(\u_speaker/n3690 ));
  u_speaker_SLICE_914 \u_speaker/SLICE_914 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_17 ), .A1(\u_speaker/n3437 ), .C0(rom2_1), 
    .B0(\u_speaker/n3466 ), .A0(\u_speaker/n3495 ), .DI1(\u_speaker/n3689 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3662 ), .FXA(\u_speaker/n3635 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3662 ), .Q1(\u_speaker/u_count2_17 ), 
    .OFX1(\u_speaker/n3689 ));
  u_speaker_SLICE_915 \u_speaker/SLICE_915 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_18 ), .A1(\u_speaker/n3436 ), .C0(rom2_1), 
    .B0(\u_speaker/n3465 ), .A0(\u_speaker/n3494 ), .DI1(\u_speaker/n3688 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3661 ), .FXA(\u_speaker/n3634 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3661 ), .Q1(\u_speaker/u_count2_18 ), 
    .OFX1(\u_speaker/n3688 ));
  u_speaker_SLICE_916 \u_speaker/SLICE_916 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_19 ), .A1(\u_speaker/n3435 ), .C0(rom2_1), 
    .B0(\u_speaker/n3464 ), .A0(\u_speaker/n3493 ), .DI1(\u_speaker/n3687 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3660 ), .FXA(\u_speaker/n3633 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3660 ), .Q1(\u_speaker/u_count2_19 ), 
    .OFX1(\u_speaker/n3687 ));
  u_speaker_SLICE_917 \u_speaker/SLICE_917 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_20 ), .A1(\u_speaker/n3434 ), .C0(rom2_1), 
    .B0(\u_speaker/n3463 ), .A0(\u_speaker/n3492 ), .DI1(\u_speaker/n3686 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3659 ), .FXA(\u_speaker/n3632 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3659 ), .Q1(\u_speaker/u_count2_20 ), 
    .OFX1(\u_speaker/n3686 ));
  u_speaker_SLICE_918 \u_speaker/SLICE_918 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_21 ), .A1(\u_speaker/n3433 ), .C0(rom2_1), 
    .B0(\u_speaker/n3462 ), .A0(\u_speaker/n3491 ), .DI1(\u_speaker/n3685 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3658 ), .FXA(\u_speaker/n3631 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3658 ), .Q1(\u_speaker/u_count2_21 ), 
    .OFX1(\u_speaker/n3685 ));
  u_speaker_SLICE_919 \u_speaker/SLICE_919 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_22 ), .A1(\u_speaker/n3432 ), .C0(rom2_1), 
    .B0(\u_speaker/n3461 ), .A0(\u_speaker/n3490 ), .DI1(\u_speaker/n3684 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3657 ), .FXA(\u_speaker/n3630 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3657 ), .Q1(\u_speaker/u_count2_22 ), 
    .OFX1(\u_speaker/n3684 ));
  u_speaker_SLICE_920 \u_speaker/SLICE_920 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_23 ), .A1(\u_speaker/n3431 ), .C0(rom2_1), 
    .B0(\u_speaker/n3460 ), .A0(\u_speaker/n3489 ), .DI1(\u_speaker/n3683 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3656 ), .FXA(\u_speaker/n3629 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3656 ), .Q1(\u_speaker/u_count2_23 ), 
    .OFX1(\u_speaker/n3683 ));
  u_speaker_SLICE_921 \u_speaker/SLICE_921 ( .C1(rom2_3), 
    .B1(\u_speaker/count13_24 ), .A1(\u_speaker/n3430 ), .C0(rom2_1), 
    .B0(\u_speaker/n3459 ), .A0(\u_speaker/n3488 ), .DI1(\u_speaker/n3682 ), 
    .M1(\u_speaker/n23_adj_1092 ), .M0(\u_speaker/n3599 ), 
    .FXB(\u_speaker/n3655 ), .FXA(\u_speaker/n3628 ), .LSR(\u_speaker/n10964 ), 
    .CLK(clk), .OFX0(\u_speaker/n3655 ), .Q1(\u_speaker/u_count2_24 ), 
    .OFX1(\u_speaker/n3682 ));
  SLICE_922 SLICE_922( .D1(\u_key_state/delay_cnt_5 ), 
    .C1(\u_key_state/delay_cnt_30 ), .B1(\u_key_state/delay_cnt_14 ), 
    .A1(\u_key_state/delay_cnt_27 ), .D0(\u_key_state/delay_cnt_10 ), 
    .C0(\u_key_state/delay_cnt_26 ), .B0(\u_key_state/delay_cnt_28 ), 
    .A0(\u_key_state/delay_cnt_22 ), .M1(yinjie_box_2_N_394_0), 
    .M0(yinjie_box_2_N_394_1), .CE(stat), .CLK(clk), .F0(\u_key_state/n49 ), 
    .Q0(\u_speaker/yinjie_box_1 ), .F1(\u_key_state/n54 ), 
    .Q1(\u_speaker/fcw_r_15_N_527_0 ));
  SLICE_923 SLICE_923( .D1(n18669), .C1(yinjie_1), .B1(n19846), .A1(n73), 
    .D0(yinjie_0), .C0(n19846), .B0(n10074), .A0(n73), .DI1(yinjie_2_N_1_1), 
    .DI0(yinjie_2_N_1_0), .CLK(clk), .F0(yinjie_2_N_1_0), .Q0(yinjie_0), 
    .F1(yinjie_2_N_1_1), .Q1(yinjie_1));
  SLICE_924 SLICE_924( .D1(yinjie_1), .C1(n10074), .B1(n73), .A1(yinjie_0), 
    .D0(n13), .C0(yinjie_2), .B0(n19846), .A0(n73), .DI0(yinjie_2_N_1_2), 
    .CLK(clk), .F0(yinjie_2_N_1_2), .Q0(yinjie_2), .F1(n13));
  u_speaker_i12624_SLICE_925 \u_speaker/i12624/SLICE_925 ( .D1(n18808), 
    .C1(n18807), .B1(note_0), .A1(note_1), .D0(\u_speaker/rom1_1 ), 
    .C0(\u_speaker/rom1_0 ), .B0(\u_speaker/rom1_3 ), .A0(\u_speaker/rom1_2 ), 
    .M0(n19846), .OFX0(\u_speaker/n3086 ));
  u_speaker_i12600_SLICE_926 \u_speaker/i12600/SLICE_926 ( .D1(n18735), 
    .C1(key_flag_6), .B1(key_value_6), .A1(rom2_1), .D0(n18754), .C0(rom2_1), 
    .B0(key_value_3), .A0(key_flag_3), .M0(rom2_0), .OFX0(\u_speaker/n18599 ));
  u_speaker_i12596_SLICE_927 \u_speaker/i12596/SLICE_927 ( .B1(key_flag_9), 
    .A1(\u_speaker/rom2_2 ), .C0(key_flag_7), .B0(\u_speaker/rom2_2 ), 
    .A0(key_flag_11), .M0(rom2_1), .OFX0(\u_speaker/n17004 ));
  u_speaker_i11954_SLICE_928 \u_speaker/i11954/SLICE_928 ( .C1(key_flag_6), 
    .B1(key_flag_5), .A1(\u_speaker/rom1_0 ), .C0(\u_speaker/rom1_0 ), 
    .B0(key_flag_4), .A0(key_flag_3), .M0(\u_speaker/rom1_1 ), 
    .OFX0(\u_speaker/n17245 ));
  u_speaker_mux_1492_i11_SLICE_929 \u_speaker/mux_1492_i11/SLICE_929 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_24 ), 
    .A1(\u_speaker/count11_24 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2625 ), .A0(\u_speaker/n2596 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2810 ));
  u_speaker_mux_1492_i10_SLICE_930 \u_speaker/mux_1492_i10/SLICE_930 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_23 ), 
    .A1(\u_speaker/count11_23 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2626 ), .A0(\u_speaker/n2597 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2811 ));
  u_speaker_mux_1492_i9_SLICE_931 \u_speaker/mux_1492_i9/SLICE_931 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_22 ), 
    .A1(\u_speaker/count11_22 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2627 ), .A0(\u_speaker/n2598 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2812 ));
  u_speaker_mux_1492_i8_SLICE_932 \u_speaker/mux_1492_i8/SLICE_932 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_21 ), 
    .A1(\u_speaker/count11_21 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2628 ), .A0(\u_speaker/n2599 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2813 ));
  u_speaker_mux_1492_i7_SLICE_933 \u_speaker/mux_1492_i7/SLICE_933 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_20 ), 
    .A1(\u_speaker/count11_20 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2629 ), .A0(\u_speaker/n2600 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2814 ));
  u_speaker_mux_1492_i6_SLICE_934 \u_speaker/mux_1492_i6/SLICE_934 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_19 ), 
    .A1(\u_speaker/count11_19 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2630 ), .A0(\u_speaker/n2601 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2815 ));
  u_speaker_mux_1492_i5_SLICE_935 \u_speaker/mux_1492_i5/SLICE_935 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_18 ), 
    .A1(\u_speaker/count11_18 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2631 ), .A0(\u_speaker/n2602 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2816 ));
  u_speaker_mux_1492_i4_SLICE_936 \u_speaker/mux_1492_i4/SLICE_936 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_17 ), 
    .A1(\u_speaker/count11_17 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2632 ), .A0(\u_speaker/n2603 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2817 ));
  u_speaker_mux_1492_i3_SLICE_937 \u_speaker/mux_1492_i3/SLICE_937 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_16 ), 
    .A1(\u_speaker/count11_16 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2633 ), .A0(\u_speaker/n2604 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2818 ));
  u_speaker_mux_1492_i2_SLICE_938 \u_speaker/mux_1492_i2/SLICE_938 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_15 ), 
    .A1(\u_speaker/count11_15 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2634 ), .A0(\u_speaker/n2605 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2819 ));
  u_speaker_mux_1581_i11_SLICE_939 \u_speaker/mux_1581_i11/SLICE_939 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_24 ), 
    .A1(\u_speaker/count1_24 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_24 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2683 ));
  u_speaker_mux_1581_i10_SLICE_940 \u_speaker/mux_1581_i10/SLICE_940 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_23 ), 
    .A1(\u_speaker/count1_23 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_23 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2684 ));
  u_speaker_mux_1581_i9_SLICE_941 \u_speaker/mux_1581_i9/SLICE_941 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_22 ), 
    .A1(\u_speaker/count1_22 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_22 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2685 ));
  u_speaker_mux_1581_i8_SLICE_942 \u_speaker/mux_1581_i8/SLICE_942 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_21 ), 
    .A1(\u_speaker/count1_21 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_21 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2686 ));
  u_speaker_mux_1581_i7_SLICE_943 \u_speaker/mux_1581_i7/SLICE_943 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_20 ), 
    .A1(\u_speaker/count1_20 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_20 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2687 ));
  u_speaker_mux_1581_i6_SLICE_944 \u_speaker/mux_1581_i6/SLICE_944 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_19 ), 
    .A1(\u_speaker/count1_19 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_19 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2688 ));
  u_speaker_mux_1581_i5_SLICE_945 \u_speaker/mux_1581_i5/SLICE_945 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_18 ), 
    .A1(\u_speaker/count1_18 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_18 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2689 ));
  u_speaker_mux_1581_i4_SLICE_946 \u_speaker/mux_1581_i4/SLICE_946 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_17 ), 
    .A1(\u_speaker/count1_17 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_17 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2690 ));
  u_speaker_mux_1581_i3_SLICE_947 \u_speaker/mux_1581_i3/SLICE_947 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_16 ), 
    .A1(\u_speaker/count1_16 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_16 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2691 ));
  u_speaker_mux_1581_i2_SLICE_948 \u_speaker/mux_1581_i2/SLICE_948 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_15 ), 
    .A1(\u_speaker/count1_15 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_15 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2692 ));
  u_speaker_mux_1492_i1_SLICE_949 \u_speaker/mux_1492_i1/SLICE_949 ( 
    .C1(\u_speaker/n3074 ), .B1(\u_speaker/count13_14 ), 
    .A1(\u_speaker/count11_14 ), .C0(\u_speaker/n3080 ), 
    .B0(\u_speaker/n2635 ), .A0(\u_speaker/n2606 ), .M0(\u_speaker/n3084 ), 
    .OFX0(\u_speaker/n2820 ));
  u_speaker_mux_1581_i1_SLICE_950 \u_speaker/mux_1581_i1/SLICE_950 ( 
    .C1(\u_speaker/n3064 ), .B1(\u_speaker/count2_14 ), 
    .A1(\u_speaker/count1_14 ), .B0(\u_speaker/n3062 ), 
    .A0(\u_speaker/count12_14 ), .M0(\u_speaker/n3076 ), 
    .OFX0(\u_speaker/n2693 ));
  u_speaker_mux_1579_i2_SLICE_951 \u_speaker/mux_1579_i2/SLICE_951 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_15 ), 
    .A1(\u_speaker/count5_15 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_15 ), .A0(\u_speaker/count3_15 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2723 ), 
    .FXA(\u_speaker/n2692 ), .OFX0(\u_speaker/n2723 ), 
    .OFX1(\u_speaker/n2789 ));
  u_speaker_mux_1579_i3_SLICE_952 \u_speaker/mux_1579_i3/SLICE_952 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_16 ), 
    .A1(\u_speaker/count5_16 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_16 ), .A0(\u_speaker/count3_16 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2722 ), 
    .FXA(\u_speaker/n2691 ), .OFX0(\u_speaker/n2722 ), 
    .OFX1(\u_speaker/n2788 ));
  u_speaker_mux_1579_i4_SLICE_953 \u_speaker/mux_1579_i4/SLICE_953 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_17 ), 
    .A1(\u_speaker/count5_17 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_17 ), .A0(\u_speaker/count3_17 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2721 ), 
    .FXA(\u_speaker/n2690 ), .OFX0(\u_speaker/n2721 ), 
    .OFX1(\u_speaker/n2787 ));
  u_speaker_mux_1579_i5_SLICE_954 \u_speaker/mux_1579_i5/SLICE_954 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_18 ), 
    .A1(\u_speaker/count5_18 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_18 ), .A0(\u_speaker/count3_18 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2720 ), 
    .FXA(\u_speaker/n2689 ), .OFX0(\u_speaker/n2720 ), 
    .OFX1(\u_speaker/n2786 ));
  u_speaker_i12656_SLICE_955 \u_speaker/i12656/SLICE_955 ( 
    .C1(\u_speaker/n18858 ), .B1(\u_speaker/n18857 ), .A1(\u_speaker/rom1_3 ), 
    .D0(\u_speaker/rom1_0 ), .C0(\u_speaker/rom1_3 ), .B0(key_flag_0), 
    .A0(\u_speaker/n163 ), .M0(\u_speaker/rom1_1 ), .OFX0(\u_speaker/n18970 ));
  u_speaker_mux_1579_i6_SLICE_956 \u_speaker/mux_1579_i6/SLICE_956 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_19 ), 
    .A1(\u_speaker/count5_19 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_19 ), .A0(\u_speaker/count3_19 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2719 ), 
    .FXA(\u_speaker/n2688 ), .OFX0(\u_speaker/n2719 ), 
    .OFX1(\u_speaker/n2785 ));
  u_speaker_mux_1579_i7_SLICE_957 \u_speaker/mux_1579_i7/SLICE_957 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_20 ), 
    .A1(\u_speaker/count5_20 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_20 ), .A0(\u_speaker/count3_20 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2718 ), 
    .FXA(\u_speaker/n2687 ), .OFX0(\u_speaker/n2718 ), 
    .OFX1(\u_speaker/n2784 ));
  u_speaker_mux_1579_i8_SLICE_958 \u_speaker/mux_1579_i8/SLICE_958 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_21 ), 
    .A1(\u_speaker/count5_21 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_21 ), .A0(\u_speaker/count3_21 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2717 ), 
    .FXA(\u_speaker/n2686 ), .OFX0(\u_speaker/n2717 ), 
    .OFX1(\u_speaker/n2783 ));
  u_speaker_mux_1579_i9_SLICE_959 \u_speaker/mux_1579_i9/SLICE_959 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_22 ), 
    .A1(\u_speaker/count5_22 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_22 ), .A0(\u_speaker/count3_22 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2716 ), 
    .FXA(\u_speaker/n2685 ), .OFX0(\u_speaker/n2716 ), 
    .OFX1(\u_speaker/n2782 ));
  u_speaker_mux_1579_i10_SLICE_960 \u_speaker/mux_1579_i10/SLICE_960 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_23 ), 
    .A1(\u_speaker/count5_23 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_23 ), .A0(\u_speaker/count3_23 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2715 ), 
    .FXA(\u_speaker/n2684 ), .OFX0(\u_speaker/n2715 ), 
    .OFX1(\u_speaker/n2781 ));
  u_speaker_mux_1579_i11_SLICE_961 \u_speaker/mux_1579_i11/SLICE_961 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_24 ), 
    .A1(\u_speaker/count5_24 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_24 ), .A0(\u_speaker/count3_24 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2714 ), 
    .FXA(\u_speaker/n2683 ), .OFX0(\u_speaker/n2714 ), 
    .OFX1(\u_speaker/n2780 ));
  u_speaker_mux_1579_i1_SLICE_962 \u_speaker/mux_1579_i1/SLICE_962 ( 
    .C1(\u_speaker/n3068 ), .B1(\u_speaker/count6_14 ), 
    .A1(\u_speaker/count5_14 ), .C0(\u_speaker/n3066 ), 
    .B0(\u_speaker/count4_14 ), .A0(\u_speaker/count3_14 ), 
    .M1(\u_speaker/n3082 ), .M0(\u_speaker/n3078 ), .FXB(\u_speaker/n2724 ), 
    .FXA(\u_speaker/n2693 ), .OFX0(\u_speaker/n2724 ), 
    .OFX1(\u_speaker/n2790 ));
  u_speaker_i12612_SLICE_963 \u_speaker/i12612/SLICE_963 ( 
    .C1(\u_speaker/n18659 ), .B1(note_1), .A1(note_0), .D0(\u_speaker/rom1_1 ), 
    .C0(\u_speaker/rom1_0 ), .B0(\u_speaker/rom1_3 ), .A0(\u_speaker/rom1_2 ), 
    .M0(n19846), .OFX0(\u_speaker/n3084 ));
  u_speaker_i12610_SLICE_964 \u_speaker/i12610/SLICE_964 ( .D1(n18808), 
    .C1(n18803), .B1(n18737), .A1(n18807), .D0(\u_speaker/rom1_0 ), 
    .C0(\u_speaker/rom1_3 ), .B0(\u_speaker/rom1_2 ), .A0(\u_speaker/rom1_1 ), 
    .M0(n19846), .OFX0(\u_speaker/n3062 ));
  u_speaker_i12608_SLICE_965 \u_speaker/i12608/SLICE_965 ( .D1(note_0), 
    .C1(note_1), .B1(n18808), .A1(n18807), .D0(\u_speaker/rom1_3 ), 
    .C0(\u_speaker/rom1_2 ), .B0(\u_speaker/rom1_0 ), .A0(\u_speaker/rom1_1 ), 
    .M0(n19846), .OFX0(\u_speaker/n3076 ));
  u_speaker_i12638_SLICE_966 \u_speaker/i12638/SLICE_966 ( .C1(key_value_2), 
    .B1(key_value_0), .A1(\u_speaker/rom1_1 ), .B0(\u_speaker/rom1_1 ), 
    .A0(key_value_1), .M0(\u_speaker/rom1_0 ), .OFX0(\u_speaker/n18924 ));
  u_speaker_i12606_SLICE_967 \u_speaker/i12606/SLICE_967 ( .D1(n18808), 
    .C1(n18807), .B1(note_1), .A1(note_0), .D0(\u_speaker/rom1_3 ), 
    .C0(\u_speaker/rom1_1 ), .B0(\u_speaker/rom1_0 ), .A0(\u_speaker/rom1_2 ), 
    .M0(n19846), .OFX0(\u_speaker/n3082 ));
  u_speaker_i12636_SLICE_968 \u_speaker/i12636/SLICE_968 ( .C1(key_value_10), 
    .B1(key_value_8), .A1(\u_speaker/rom1_1 ), .C0(key_value_9), 
    .B0(\u_speaker/rom1_1 ), .A0(key_value_7), .M1(\u_speaker/rom1_3 ), 
    .M0(\u_speaker/rom1_0 ), .FXB(\u_speaker/n18921 ), 
    .FXA(\u_speaker/n18924 ), .OFX0(\u_speaker/n18921 ), 
    .OFX1(\u_speaker/n18925 ));
  u_speaker_i12604_SLICE_969 \u_speaker/i12604/SLICE_969 ( .D1(note_0), 
    .C1(note_1), .B1(n18808), .A1(n18807), .D0(\u_speaker/rom1_2 ), 
    .C0(\u_speaker/rom1_1 ), .B0(\u_speaker/rom1_0 ), .A0(\u_speaker/rom1_3 ), 
    .M0(n19846), .OFX0(\u_speaker/n3070 ));
  u_speaker_i11844_SLICE_970 \u_speaker/i11844/SLICE_970 ( 
    .C1(\u_speaker/n10946 ), .B1(\u_speaker/n17236 ), .A1(\u_speaker/rom2_2 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/n18599 ), .A0(n18850), .M0(rom2_3), 
    .OFX0(n17135));
  u_speaker_i12602_SLICE_971 \u_speaker/i12602/SLICE_971 ( .D1(note_2), 
    .C1(note_3), .B1(note_4), .A1(\u_speaker/n18732 ), .D0(\u_speaker/rom1_1 ), 
    .C0(\u_speaker/rom1_0 ), .B0(\u_speaker/rom1_3 ), .A0(\u_speaker/rom1_2 ), 
    .M0(n19846), .OFX0(\u_speaker/n3064 ));
  u_speaker_i12626_SLICE_972 \u_speaker/i12626/SLICE_972 ( .C1(key_flag_12), 
    .B1(key_flag_4), .A1(rom2_3), .C0(rom2_3), .B0(key_flag_0), 
    .A0(key_flag_8), .M0(\u_speaker/rom2_2 ), .OFX0(\u_speaker/n18856 ));
  u_speaker_mux_1600_i2_SLICE_973 \u_speaker/mux_1600_i2/SLICE_973 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_15 ), .A1(\u_speaker/count12_15 ), 
    .C0(rom2_0), .B0(\u_speaker/n3381 ), .A0(\u_speaker/n3410 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3637 ));
  u_speaker_mux_1600_i3_SLICE_974 \u_speaker/mux_1600_i3/SLICE_974 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_16 ), .A1(\u_speaker/count12_16 ), 
    .C0(rom2_0), .B0(\u_speaker/n3380 ), .A0(\u_speaker/n3409 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3636 ));
  u_speaker_i11951_SLICE_975 \u_speaker/i11951/SLICE_975 ( .C1(key_value_6), 
    .B1(key_value_5), .A1(\u_speaker/rom1_0 ), .C0(\u_speaker/rom1_0 ), 
    .B0(key_value_4), .A0(key_value_3), .M0(\u_speaker/rom1_1 ), 
    .OFX0(\u_speaker/n17242 ));
  u_speaker_mux_1600_i4_SLICE_976 \u_speaker/mux_1600_i4/SLICE_976 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_17 ), .A1(\u_speaker/count12_17 ), 
    .C0(rom2_0), .B0(\u_speaker/n3379 ), .A0(\u_speaker/n3408 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3635 ));
  u_speaker_mux_1600_i5_SLICE_977 \u_speaker/mux_1600_i5/SLICE_977 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_18 ), .A1(\u_speaker/count12_18 ), 
    .C0(rom2_0), .B0(\u_speaker/n3378 ), .A0(\u_speaker/n3407 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3634 ));
  u_speaker_mux_1600_i6_SLICE_978 \u_speaker/mux_1600_i6/SLICE_978 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_19 ), .A1(\u_speaker/count12_19 ), 
    .C0(rom2_0), .B0(\u_speaker/n3377 ), .A0(\u_speaker/n3406 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3633 ));
  u_speaker_mux_1600_i7_SLICE_979 \u_speaker/mux_1600_i7/SLICE_979 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_20 ), .A1(\u_speaker/count12_20 ), 
    .C0(rom2_0), .B0(\u_speaker/n3376 ), .A0(\u_speaker/n3405 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3632 ));
  u_speaker_mux_1600_i8_SLICE_980 \u_speaker/mux_1600_i8/SLICE_980 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_21 ), .A1(\u_speaker/count12_21 ), 
    .C0(rom2_0), .B0(\u_speaker/n3375 ), .A0(\u_speaker/n3404 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3631 ));
  u_speaker_mux_1600_i9_SLICE_981 \u_speaker/mux_1600_i9/SLICE_981 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_22 ), .A1(\u_speaker/count12_22 ), 
    .C0(rom2_0), .B0(\u_speaker/n3374 ), .A0(\u_speaker/n3403 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3630 ));
  u_speaker_mux_1600_i10_SLICE_982 \u_speaker/mux_1600_i10/SLICE_982 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_23 ), .A1(\u_speaker/count12_23 ), 
    .C0(rom2_0), .B0(\u_speaker/n3373 ), .A0(\u_speaker/n3402 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3629 ));
  u_speaker_mux_1600_i11_SLICE_983 \u_speaker/mux_1600_i11/SLICE_983 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_24 ), .A1(\u_speaker/count12_24 ), 
    .C0(rom2_0), .B0(\u_speaker/n3372 ), .A0(\u_speaker/n3401 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3628 ));
  u_speaker_i11945_SLICE_984 \u_speaker/i11945/SLICE_984 ( .D1(n18771), 
    .C1(key_value_9), .B1(key_flag_9), .A1(rom2_0), .D0(n18815), .C0(rom2_0), 
    .B0(key_flag_8), .A0(key_value_8), .M0(rom2_1), .OFX0(\u_speaker/n17236 ));
  u_speaker_mux_1600_i1_SLICE_985 \u_speaker/mux_1600_i1/SLICE_985 ( 
    .C1(rom2_1), .B1(\u_speaker/count10_14 ), .A1(\u_speaker/count12_14 ), 
    .C0(rom2_0), .B0(\u_speaker/n3382 ), .A0(\u_speaker/n3411 ), .M0(rom2_3), 
    .OFX0(\u_speaker/n3638 ));
  i12620_SLICE_986 \i12620/SLICE_986 ( .D1(count_note_2), .C1(count_note_1), 
    .B1(count_note_3), .A1(count_note_4), .D0(count_note_2), .C0(count_note_1), 
    .B0(count_note_3), .A0(count_note_4), .M0(count_note_0), .OFX0(n18847));
  i12542_SLICE_987 \i12542/SLICE_987 ( .D1(count_note_1), .C1(count_note_3), 
    .B1(count_note_0), .A1(count_note_2), .D0(count_note_1), .C0(count_note_3), 
    .B0(count_note_0), .A0(count_note_2), .M1(count_note_4), .M0(count_note_5), 
    .FXB(n18458), .FXA(n18461), .OFX0(n18458), .OFX1(n18462));
  i12545_SLICE_988 \i12545/SLICE_988 ( .D1(count_note_2), .C1(count_note_0), 
    .B1(count_note_1), .A1(count_note_5), .D0(count_note_2), .C0(count_note_0), 
    .B0(count_note_1), .A0(count_note_5), .M0(count_note_3), .OFX0(n18461));
  i12536_SLICE_989 \i12536/SLICE_989 ( .C1(count_note_4), .B1(count_note_1), 
    .A1(count_note_2), .D0(count_note_0), .C0(count_note_4), .B0(count_note_1), 
    .A0(count_note_2), .M0(count_note_5), .OFX0(n18443));
  i12618_SLICE_990 \i12618/SLICE_990 ( .D1(count_note_2), .C1(count_note_1), 
    .B1(count_note_3), .A1(count_note_4), .D0(count_note_2), .C0(count_note_1), 
    .B0(count_note_3), .A0(count_note_4), .M0(count_note_0), .OFX0(n18844));
  i12616_SLICE_991 \i12616/SLICE_991 ( .D1(count_note_2), .C1(count_note_1), 
    .B1(count_note_3), .A1(count_note_4), .D0(count_note_2), .C0(count_note_1), 
    .B0(count_note_3), .A0(count_note_4), .M0(count_note_0), .OFX0(n18841));
  u_buzzer_i12622_SLICE_992 \u_buzzer/i12622/SLICE_992 ( .D1(key_flag_2), 
    .C1(n18721), .B1(key_value_2), .A1(rom2_1), .C0(rom2_1), .B0(key_value_1), 
    .A0(key_flag_1), .M0(rom2_0), .OFX0(n18850));
  u_buzzer_CNT_17__I_0_91_i32_SLICE_993 
    \u_buzzer/CNT_17__I_0_91_i32/SLICE_993 ( .C1(\u_buzzer/n12 ), 
    .B1(\u_buzzer/cycle_17 ), .A1(CNT_16), .D0(\u_buzzer/n4_adj_805 ), 
    .C0(\u_buzzer/n26_adj_802 ), .B0(\u_buzzer/n17088 ), 
    .A0(\u_buzzer/n18741 ), .M1(\u_buzzer/n17091 ), .M0(\u_buzzer/n17097 ), 
    .FXB(\u_buzzer/n32 ), .FXA(\u_buzzer/n24 ), .OFX0(\u_buzzer/n32 ), 
    .OFX1(\u_buzzer/n34 ));
  u_buzzer_i9369_SLICE_994 \u_buzzer/i9369/SLICE_994 ( .D1(note_1), 
    .C1(n18807), .B1(n18808), .A1(note_0), .D0(n18709), .C0(n18706), 
    .B0(n18707), .A0(n18725), .M0(n19846), .OFX0(\u_buzzer/n14162 ));
  u_buzzer_CNT_17__I_0_91_i24_SLICE_995 
    \u_buzzer/CNT_17__I_0_91_i24/SLICE_995 ( .D1(\u_buzzer/n6 ), 
    .C1(\u_buzzer/n20 ), .B1(\u_buzzer/n17066 ), .A1(\u_buzzer/n18744 ), 
    .C0(\u_buzzer/n8 ), .B0(\u_buzzer/cycle_10 ), .A0(CNT_9), 
    .M0(\u_buzzer/n17071 ), .OFX0(\u_buzzer/n24 ));
  i12614_SLICE_996 \i12614/SLICE_996 ( .D1(count_note_4), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_5), .D0(count_note_4), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_5), .M0(count_note_0), .OFX0(n18837));
  mux_617_Mux_0_i109_SLICE_997 \mux_617_Mux_0_i109/SLICE_997 ( 
    .D1(count_note_3), .C1(count_note_2), .B1(count_note_1), .A1(count_note_0), 
    .D0(count_note_3), .C0(count_note_2), .B0(count_note_1), .A0(count_note_0), 
    .M0(count_note_4), .OFX0(n109_adj_1509));
  i21_SLICE_998 \i21/SLICE_998 ( .C1(count_note_2), .B1(count_note_1), 
    .A1(count_note_4), .D0(count_note_5), .C0(count_note_4), .B0(n18779), 
    .A0(count_note_3), .M0(count_note_6), .OFX0(n10));
  i11897_SLICE_999 \i11897/SLICE_999 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M0(count_note_4), .OFX0(n17188));
  i11894_SLICE_1000 \i11894/SLICE_1000 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M0(count_note_4), .OFX0(n17185));
  i11891_SLICE_1001 \i11891/SLICE_1001 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_6), .M0(count_note_4), 
    .FXB(n17184), .FXA(n17181), .OFX0(n17182), .OFX1(n17117));
  i11871_SLICE_1002 \i11871/SLICE_1002 ( .D1(count_note_0), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_3), .C0(count_note_2), .B0(count_note_1), 
    .A0(count_note_3), .M0(count_note_4), .OFX0(n17162));
  i11845_SLICE_1003 \i11845/SLICE_1003 ( .D1(count_note_3), .C1(count_note_0), 
    .B1(count_note_1), .A1(count_note_2), .D0(count_note_3), .C0(count_note_0), 
    .B0(count_note_1), .A0(count_note_2), .M0(count_note_4), .OFX0(n17136));
  i11835_SLICE_1004 \i11835/SLICE_1004 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M0(count_note_4), .OFX0(n17126));
  i11836_SLICE_1005 \i11836/SLICE_1005 ( .D1(count_note_3), .C1(count_note_1), 
    .B1(count_note_2), .A1(count_note_0), .D0(count_note_3), .C0(count_note_1), 
    .B0(count_note_2), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17127), .FXA(n17126), .OFX0(n17127), .OFX1(n17130));
  i11837_SLICE_1006 \i11837/SLICE_1006 ( .D1(count_note_3), .C1(count_note_0), 
    .B1(count_note_1), .A1(count_note_2), .D0(count_note_3), .C0(count_note_0), 
    .B0(count_note_1), .A0(count_note_2), .M1(count_note_6), .M0(count_note_4), 
    .FXB(n17131), .FXA(n17130), .OFX0(n17128), .OFX1(n17132));
  i11846_SLICE_1007 \i11846/SLICE_1007 ( .D1(count_note_2), .C1(count_note_3), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_2), .C0(count_note_3), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17137), .FXA(n17136), .OFX0(n17137), .OFX1(n17138));
  i11852_SLICE_1008 \i11852/SLICE_1008 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_6), .M0(count_note_4), 
    .FXB(n17145), .FXA(n17138), .OFX0(n17143), .OFX1(n17208));
  i11853_SLICE_1009 \i11853/SLICE_1009 ( .D1(count_note_0), .C1(count_note_3), 
    .B1(count_note_2), .A1(count_note_1), .D0(count_note_0), .C0(count_note_3), 
    .B0(count_note_2), .A0(count_note_1), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17144), .FXA(n17143), .OFX0(n17144), .OFX1(n17145));
  i11855_SLICE_1010 \i11855/SLICE_1010 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M0(count_note_4), .OFX0(n17146));
  i11856_SLICE_1011 \i11856/SLICE_1011 ( .D1(count_note_2), .C1(count_note_3), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_2), .C0(count_note_3), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17147), .FXA(n17146), .OFX0(n17147), .OFX1(n17148));
  i11862_SLICE_1012 \i11862/SLICE_1012 ( .D1(count_note_3), .C1(count_note_0), 
    .B1(count_note_1), .A1(count_note_2), .D0(count_note_3), .C0(count_note_0), 
    .B0(count_note_1), .A0(count_note_2), .M0(count_note_4), .OFX0(n17153));
  i11863_SLICE_1013 \i11863/SLICE_1013 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17154), .FXA(n17153), .OFX0(n17154), .OFX1(n17155));
  i11865_SLICE_1014 \i11865/SLICE_1014 ( .D1(count_note_2), .C1(count_note_1), 
    .B1(count_note_3), .A1(count_note_0), .D0(n37_adj_1467), .C0(count_note_3), 
    .B0(n18773), .A0(count_note_0), .M1(count_note_6), .M0(count_note_4), 
    .FXB(n17158), .FXA(n17155), .OFX0(n17156), .OFX1(n17218));
  i11866_SLICE_1015 \i11866/SLICE_1015 ( .D1(n37_adj_1467), .C1(n18781), 
    .B1(count_note_3), .A1(count_note_2), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17157), .FXA(n17156), .OFX0(n17157), .OFX1(n17158));
  i11872_SLICE_1016 \i11872/SLICE_1016 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17163), .FXA(n17162), .OFX0(n17163), .OFX1(n17164));
  i11878_SLICE_1017 \i11878/SLICE_1017 ( .D1(count_note_3), .C1(count_note_1), 
    .B1(count_note_0), .A1(count_note_2), .D0(count_note_3), .C0(count_note_1), 
    .B0(count_note_0), .A0(count_note_2), .M1(count_note_6), .M0(count_note_4), 
    .FXB(n17171), .FXA(n17164), .OFX0(n17169), .OFX1(n17249));
  i11879_SLICE_1018 \i11879/SLICE_1018 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17170), .FXA(n17169), .OFX0(n17170), .OFX1(n17171));
  i11888_SLICE_1019 \i11888/SLICE_1019 ( .D1(count_note_0), .C1(count_note_3), 
    .B1(count_note_2), .A1(count_note_1), .D0(count_note_0), .C0(count_note_3), 
    .B0(count_note_2), .A0(count_note_1), .M0(count_note_4), .OFX0(n17179));
  i11889_SLICE_1020 \i11889/SLICE_1020 ( .D1(count_note_2), .C1(count_note_3), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_2), .C0(count_note_3), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17180), .FXA(n17179), .OFX0(n17180), .OFX1(n17181));
  i11892_SLICE_1021 \i11892/SLICE_1021 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17183), .FXA(n17182), .OFX0(n17183), .OFX1(n17184));
  i11895_SLICE_1022 \i11895/SLICE_1022 ( .D1(count_note_1), .C1(count_note_2), 
    .B1(count_note_3), .A1(count_note_0), .D0(count_note_1), .C0(count_note_2), 
    .B0(count_note_3), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17186), .FXA(n17185), .OFX0(n17186), .OFX1(n17187));
  i11898_SLICE_1023 \i11898/SLICE_1023 ( .D1(count_note_3), .C1(count_note_0), 
    .B1(count_note_2), .A1(count_note_1), .D0(count_note_3), .C0(count_note_0), 
    .B0(count_note_2), .A0(count_note_1), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17189), .FXA(n17188), .OFX0(n17189), .OFX1(n17190));
  i11904_SLICE_1024 \i11904/SLICE_1024 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_6), .M0(count_note_4), 
    .FXB(n17197), .FXA(n17190), .OFX0(n17195), .OFX1(n17120));
  i11905_SLICE_1025 \i11905/SLICE_1025 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17196), .FXA(n17195), .OFX0(n17196), .OFX1(n17197));
  i11911_SLICE_1026 \i11911/SLICE_1026 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M0(count_note_4), .OFX0(n17202));
  i11912_SLICE_1027 \i11912/SLICE_1027 ( .C1(n91), .B1(n37_adj_1467), 
    .A1(count_note_3), .D0(count_note_3), .C0(count_note_1), .B0(count_note_2), 
    .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), .FXB(n17203), 
    .FXA(n17202), .OFX0(n17203), .OFX1(n17204));
  i11914_SLICE_1028 \i11914/SLICE_1028 ( .D1(count_note_1), .C1(count_note_0), 
    .B1(count_note_3), .A1(count_note_2), .D0(count_note_1), .C0(count_note_0), 
    .B0(count_note_3), .A0(count_note_2), .M0(count_note_4), .OFX0(n17205));
  i11915_SLICE_1029 \i11915/SLICE_1029 ( .D1(count_note_3), .C1(count_note_0), 
    .B1(count_note_2), .A1(count_note_1), .D0(count_note_3), .C0(count_note_0), 
    .B0(count_note_2), .A0(count_note_1), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17206), .FXA(n17205), .OFX0(n17206), .OFX1(n17207));
  i11924_SLICE_1030 \i11924/SLICE_1030 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_6), .M0(count_note_4), 
    .FXB(n17217), .FXA(n17207), .OFX0(n17215), .OFX1(n17123));
  i11925_SLICE_1031 \i11925/SLICE_1031 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17216), .FXA(n17215), .OFX0(n17216), .OFX1(n17217));
  i11934_SLICE_1032 \i11934/SLICE_1032 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M0(count_note_4), .OFX0(n17225));
  i11935_SLICE_1033 \i11935/SLICE_1033 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17226), .FXA(n17225), .OFX0(n17226), .OFX1(n17227));
  LessThan_51_i10_SLICE_1034 \LessThan_51_i10/SLICE_1034 ( .C1(n6_adj_1451), 
    .B1(beat_4), .A1(count_beat_4), .D0(count_beat_0), .C0(count_beat_1), 
    .B0(beat_1), .A0(beat_0), .M0(n17020), .OFX0(n201));
  i11939_SLICE_1035 \i11939/SLICE_1035 ( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_3), .C0(count_note_2), 
    .B0(count_note_1), .A0(count_note_0), .M0(count_note_4), .OFX0(n17230));
  i11838_SLICE_1036 \i11838/SLICE_1036 ( .D1(count_note_2), .C1(count_note_3), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_2), .C0(count_note_3), 
    .B0(count_note_1), .A0(count_note_0), .M1(count_note_5), .M0(count_note_4), 
    .FXB(n17129), .FXA(n17128), .OFX0(n17129), .OFX1(n17131));
  u_speaker_SLICE_1037 \u_speaker/SLICE_1037 ( .D1(\u_speaker/rom2_2 ), 
    .C1(rom2_3), .B1(key_flag_10), .A1(key_flag_6), .D0(key_flag_2), 
    .C0(rom2_3), .B0(\u_speaker/rom2_2 ), .A0(\u_speaker/n121_adj_915 ), 
    .F0(\u_speaker/n18344 ), .F1(\u_speaker/n121_adj_915 ));
  u_speaker_SLICE_1038 \u_speaker/SLICE_1038 ( .D1(\u_speaker/n18705 ), 
    .C1(n18690), .B1(fcw_r_15_N_495_11), .A1(n18757), .D0(\u_speaker/n18634 ), 
    .C0(fcw_r_15_N_495_11), .B0(\u_speaker/n18716 ), .A0(n18757), .M1(n18785), 
    .M0(fcw_r_15_N_495_11), .CLK(clk), .F0(\u_speaker/n18608 ), 
    .Q0(\u_speaker/u_DDS_11/fcw_r_11 ), .F1(\u_speaker/n18634 ), 
    .Q1(\u_speaker/fcw_r_6_adj_1219 ));
  SLICE_1039 SLICE_1039( .D1(n5_adj_1445), .C1(n6_adj_1443), .B1(key_value_5), 
    .A1(key_flag_5), .D0(n895), .C0(n6_adj_1443), .B0(n18813), .A0(n18720), 
    .F0(\u_speaker/n18662 ), .F1(n895));
  SLICE_1040 SLICE_1040( .D1(n12156), .C1(n18747), .B1(key_flag_6), 
    .A1(key_value_6), .D0(n456), .C0(n18747), .B0(\u_speaker/n18764 ), 
    .A0(n18754), .F0(\u_speaker/n18664 ), .F1(n456));
  u_speaker_SLICE_1041 \u_speaker/SLICE_1041 ( .D1(\u_speaker/n923 ), 
    .C1(\u_speaker/n12287 ), .B1(n18814), .A1(n18761), .D0(n5_adj_1447), 
    .C0(\u_speaker/n12287 ), .B0(key_flag_12), .A0(key_value_12), 
    .F0(\u_speaker/n923 ), .F1(\u_speaker/n18660 ));
  u_speaker_SLICE_1042 \u_speaker/SLICE_1042 ( .D1(\u_speaker/n468 ), 
    .C1(n18770), .B1(n12156), .A1(n18771), .D0(n18768), .C0(n18770), 
    .B0(rom2_0), .A0(rom2_1), .F0(\u_speaker/n468 ), .F1(\u_speaker/n3799 ));
  u_speaker_SLICE_1043 \u_speaker/SLICE_1043 ( .C1(rom2_1), .B1(key_flag_5), 
    .A1(key_flag_3), .D0(rom2_1), .C0(key_flag_1), .B0(\u_speaker/rom2_2 ), 
    .A0(\u_speaker/n137_adj_912 ), .F0(\u_speaker/n18346 ), 
    .F1(\u_speaker/n137_adj_912 ));
  u_speaker_SLICE_1044 \u_speaker/SLICE_1044 ( .D1(n5_adj_1445), .C1(n6), 
    .B1(key_flag_1), .A1(key_value_1), .D0(\u_speaker/n879 ), .C0(n6), 
    .B0(n18813), .A0(n18722), .F0(\u_speaker/n18663 ), .F1(\u_speaker/n879 ));
  SLICE_1045 SLICE_1045( .D1(n5_adj_1445), .C1(n6_adj_1446), .B1(key_value_9), 
    .A1(key_flag_9), .D0(n911), .C0(n6_adj_1446), .B0(n18813), .A0(n18771), 
    .F0(\u_speaker/n18661 ), .F1(n911));
  SLICE_1046 SLICE_1046( .D1(n16_adj_1439), .C1(count_note_6), 
    .B1(count_note_3), .A1(n18444), .C0(count_note_3), .B0(n18837), 
    .A0(n18443), .F0(n18444), .F1(n17219));
  SLICE_1047 SLICE_1047( .D1(n5_adj_1447), .C1(n6), .B1(key_flag_0), 
    .A1(key_value_0), .B0(\u_speaker/rom1_1 ), .A0(\u_speaker/rom1_0 ), 
    .F0(n5_adj_1447), .F1(n18713));
  SLICE_1048 SLICE_1048( .D1(n5_adj_1447), .C1(n6_adj_1446), .B1(key_flag_8), 
    .A1(key_value_8), .B0(\u_speaker/rom1_3 ), .A0(\u_speaker/rom1_2 ), 
    .F0(n6_adj_1446), .F1(n907));
  SLICE_1049 SLICE_1049( .D1(n18814), .C1(n6_adj_1443), .B1(key_value_3), 
    .A1(key_flag_3), .D0(n891), .C0(n887), .B0(n18677), .A0(n895), 
    .F0(\u_speaker/n16929 ), .F1(n887));
  SLICE_1050 SLICE_1050( .D1(key_value_10), .C1(\u_buzzer/n20_adj_821 ), 
    .B1(\u_buzzer/n24_adj_820 ), .A1(key_value_0), .D0(n18713), .C0(n9292), 
    .B0(\u_speaker/n879 ), .A0(\u_speaker/n18712 ), .F0(\u_speaker/n18621 ), 
    .F1(n9292));
  SLICE_1051 SLICE_1051( .D1(n5), .C1(n18724), .B1(key_flag_0), 
    .A1(key_value_0), .D0(n9292), .C0(n18679), .B0(n436), .A0(n18676), 
    .F0(\u_speaker/n18622 ), .F1(n18679));
  u_speaker_SLICE_1052 \u_speaker/SLICE_1052 ( .C1(rom2_1), 
    .B1(\u_speaker/n18344 ), .A1(\u_speaker/n18856 ), .D0(n19846), .C0(rom2_0), 
    .B0(\u_speaker/n18345 ), .A0(\u_speaker/n18347 ), 
    .F0(\u_speaker/clk_N_168_enable_524 ), .F1(\u_speaker/n18345 ));
  u_speaker_SLICE_1053 \u_speaker/SLICE_1053 ( .D1(n18814), 
    .C1(\u_speaker/n12287 ), .B1(key_flag_11), .A1(key_value_11), 
    .B0(\u_speaker/rom1_3 ), .A0(\u_speaker/rom1_2 ), .F0(\u_speaker/n12287 ), 
    .F1(\u_speaker/n18718 ));
  SLICE_1054 SLICE_1054( .D1(n18758), .C1(n18747), .B1(key_value_3), 
    .A1(key_flag_3), .B0(rom2_3), .A0(\u_speaker/rom2_2 ), .F0(n18747), 
    .F1(n444));
  SLICE_1055 SLICE_1055( .B1(key_value_5), .A1(key_flag_5), .D0(n18754), 
    .C0(\u_speaker/n18764 ), .B0(rom2_3), .A0(\u_speaker/rom2_2 ), 
    .F0(\u_speaker/n18689 ), .F1(n18754));
  u_speaker_SLICE_1056 \u_speaker/SLICE_1056 ( .C1(\u_speaker/rom1_3 ), 
    .B1(\u_speaker/n18966 ), .A1(\u_speaker/n17245 ), .D0(n19846), 
    .C0(\u_speaker/rom1_2 ), .B0(\u_speaker/n18967 ), .A0(\u_speaker/n18970 ), 
    .F0(\u_speaker/clk_N_168_enable_523 ), .F1(\u_speaker/n18967 ));
  SLICE_1057 SLICE_1057( .D1(n18813), .C1(n6_adj_1443), .B1(key_flag_6), 
    .A1(key_value_6), .B0(\u_speaker/rom1_3 ), .A0(\u_speaker/rom1_2 ), 
    .F0(n6_adj_1443), .F1(n18677));
  SLICE_1058 SLICE_1058( .B1(key_flag_6), .A1(key_value_6), .D0(n18720), 
    .C0(n31), .B0(n18815), .A0(n18755), .F0(n321), .F1(n18720));
  u_speaker_SLICE_1059 \u_speaker/SLICE_1059 ( .D1(n18813), .C1(n6), 
    .B1(key_flag_2), .A1(key_value_2), .B0(\u_speaker/rom1_3 ), 
    .A0(\u_speaker/rom1_2 ), .F0(n6), .F1(\u_speaker/n18712 ));
  u_speaker_SLICE_1060 \u_speaker/SLICE_1060 ( .D1(\u_speaker/rom2_2 ), 
    .C1(rom2_1), .B1(rom2_0), .A1(rom2_3), .B0(n19846), 
    .A0(\u_speaker/n17920 ), .F0(\u_speaker/n10964 ), .F1(\u_speaker/n17920 ));
  SLICE_1061 SLICE_1061( .D1(n18758), .C1(n18770), .B1(key_flag_7), 
    .A1(key_value_7), .B0(rom2_1), .A0(rom2_0), .F0(n18758), .F1(n37));
  SLICE_1062 SLICE_1062( .D1(n18771), .C1(n18761), .B1(n18763), .A1(n351), 
    .B0(key_flag_11), .A0(key_value_11), .F0(n18761), .F1(n414));
  SLICE_1063 SLICE_1063( .B1(key_flag_10), .A1(key_value_10), .D0(n18763), 
    .C0(n18771), .B0(key_flag_11), .A0(key_value_11), .F0(\u_speaker/n18653 ), 
    .F1(n18771));
  SLICE_1064 SLICE_1064( .B1(key_value_9), .A1(key_flag_9), .D0(n18771), 
    .C0(n18768), .B0(key_flag_11), .A0(key_value_11), .F0(n18620), .F1(n18768));
  u_speaker_SLICE_1065 \u_speaker/SLICE_1065 ( .B1(rom2_1), .A1(rom2_0), 
    .D0(n18763), .C0(n5), .B0(rom2_3), .A0(\u_speaker/rom2_2 ), 
    .F0(\u_speaker/n480 ), .F1(n5));
  SLICE_1066 SLICE_1066( .D1(\u_buzzer/n18617 ), .C1(n18763), .B1(n18651), 
    .A1(n18612), .B0(key_flag_12), .A0(key_value_12), .F0(n18763), 
    .F1(\u_buzzer/clk_N_168_enable_510 ));
  u_speaker_SLICE_1067 \u_speaker/SLICE_1067 ( .D1(n18768), .C1(n18761), 
    .B1(\u_speaker/n18675 ), .A1(n18771), .C0(n19846), .B0(key_flag_12), 
    .A0(key_value_12), .F0(\u_speaker/n18675 ), .F1(n16920));
  u_speaker_SLICE_1068 \u_speaker/SLICE_1068 ( .D1(n18725), 
    .C1(\u_speaker/n18764 ), .B1(rom2_3), .A1(\u_speaker/rom2_2 ), .B0(rom2_0), 
    .A0(rom2_1), .F0(\u_speaker/n18764 ), .F1(n436));
  SLICE_1069 SLICE_1069( .D1(key_value_8), .C1(key_flag_8), .B1(key_flag_7), 
    .A1(key_value_7), .D0(n18720), .C0(n16876), .B0(n18619), .A0(n18685), 
    .F0(clk_N_168_enable_512), .F1(n18685));
  SLICE_1070 SLICE_1070( .B1(key_value_3), .A1(key_flag_3), .D0(n18725), 
    .C0(n18722), .B0(n18735), .A0(n18736), .F0(n247), .F1(n18736));
  SLICE_1071 SLICE_1071( .B1(key_value_4), .A1(key_flag_4), .D0(n18725), 
    .C0(n18722), .B0(n18735), .A0(n18736), .F0(\u_speaker/n8 ), .F1(n18735));
  SLICE_1072 SLICE_1072( .D1(key_value_6), .C1(key_flag_6), .B1(key_flag_7), 
    .A1(key_value_7), .D0(n18754), .C0(n18708), .B0(n18735), .A0(n18736), 
    .F0(n9), .F1(n18708));
  u_speaker_SLICE_1073 \u_speaker/SLICE_1073 ( .D1(\u_speaker/n18659 ), 
    .C1(\u_speaker/n16843 ), .B1(\u_speaker/n18732 ), .A1(n19846), 
    .D0(\u_speaker/rom1_2 ), .C0(\u_speaker/rom1_1 ), .B0(\u_speaker/rom1_3 ), 
    .A0(\u_speaker/rom1_0 ), .F0(\u_speaker/n16843 ), .F1(\u_speaker/n3072 ));
  u_speaker_SLICE_1074 \u_speaker/SLICE_1074 ( .D1(n18808), 
    .C1(\u_speaker/n10301 ), .B1(n18803), .A1(n19846), .D0(\u_speaker/rom1_0 ), 
    .C0(\u_speaker/rom1_3 ), .B0(\u_speaker/rom1_1 ), .A0(\u_speaker/rom1_2 ), 
    .F0(\u_speaker/n10301 ), .F1(\u_speaker/n3066 ));
  u_speaker_SLICE_1075 \u_speaker/SLICE_1075 ( .B1(\u_speaker/rom1_3 ), 
    .A1(\u_speaker/rom1_0 ), .D0(n19846), .C0(\u_speaker/n18767 ), 
    .B0(\u_speaker/rom1_1 ), .A0(\u_speaker/rom1_2 ), .F0(\u_speaker/n3074 ), 
    .F1(\u_speaker/n18767 ));
  u_speaker_SLICE_1076 \u_speaker/SLICE_1076 ( .D1(n18769), 
    .C1(\u_speaker/n16871 ), .B1(n18808), .A1(n19846), .D0(\u_speaker/rom1_3 ), 
    .C0(\u_speaker/rom1_2 ), .B0(\u_speaker/rom1_1 ), .A0(\u_speaker/rom1_0 ), 
    .F0(\u_speaker/n16871 ), .F1(\u_speaker/n3078 ));
  SLICE_1077 SLICE_1077( .D1(n5), .C1(n18770), .B1(key_flag_8), 
    .A1(key_value_8), .B0(rom2_3), .A0(\u_speaker/rom2_2 ), .F0(n18770), 
    .F1(n464));
  u_speaker_SLICE_1078 \u_speaker/SLICE_1078 ( .B1(rom2_1), .A1(rom2_0), 
    .D0(n18771), .C0(n12156), .B0(rom2_3), .A0(\u_speaker/rom2_2 ), 
    .F0(\u_speaker/n18699 ), .F1(n12156));
  u_speaker_SLICE_1079 \u_speaker/SLICE_1079 ( .D1(n18815), 
    .C1(\u_speaker/n18693 ), .B1(\u_speaker/n3799 ), .A1(n464), .D0(rom2_0), 
    .C0(rom2_1), .B0(rom2_3), .A0(\u_speaker/rom2_2 ), .F0(\u_speaker/n18693 ), 
    .F1(\u_speaker/n10269 ));
  SLICE_1080 SLICE_1080( .D1(n16920), .C1(n18685), .B1(n18649), .A1(n10337), 
    .D0(n18720), .C0(n18736), .B0(n18735), .A0(n18754), .F0(n10337), 
    .F1(\u_buzzer/clk_N_168_enable_515 ));
  SLICE_1081 SLICE_1081( .D1(key_value_2), .C1(key_flag_2), .B1(key_value_3), 
    .A1(key_flag_3), .D0(n18708), .C0(n18707), .B0(n18735), .A0(n18754), 
    .F0(n10160), .F1(n18707));
  u_speaker_SLICE_1082 \u_speaker/SLICE_1082 ( .B1(key_flag_1), 
    .A1(key_value_1), .D0(n18725), .C0(n18707), .B0(n18735), .A0(n18754), 
    .F0(n269), .F1(n18725));
  SLICE_1083 SLICE_1083( .B1(note_1), .A1(note_0), .D0(n18769), 
    .C0(\u_speaker/n16004 ), .B0(\u_speaker/n18659 ), .A0(n19846), 
    .F0(\u_speaker/n3080 ), .F1(n18769));
  u_speaker_SLICE_1084 \u_speaker/SLICE_1084 ( .D1(\u_speaker/n18611 ), 
    .C1(n18680), .B1(n18655), .A1(\u_speaker/n18666 ), .D0(n18768), 
    .C0(n18709), .B0(n18685), .A0(n18771), .F0(\u_speaker/n18611 ), 
    .F1(clk_N_168_enable_507));
  SLICE_1085 SLICE_1085( .B1(key_flag_8), .A1(key_value_8), .D0(n18768), 
    .C0(n18761), .B0(n18755), .A0(n18771), .F0(n18612), .F1(n18755));
  SLICE_1086 SLICE_1086( .B1(key_flag_7), .A1(key_value_7), .D0(n18755), 
    .C0(n18815), .B0(n18768), .A0(n18771), .F0(n16959), .F1(n18815));
  SLICE_1087 SLICE_1087( .D1(\u_buzzer/n18648 ), .C1(n18709), .B1(n18623), 
    .A1(n16888), .D0(n18755), .C0(n18708), .B0(n18768), .A0(n18771), 
    .F0(n18623), .F1(\u_buzzer/clk_N_168_enable_520 ));
  SLICE_1088 SLICE_1088( .C1(n18808), .B1(note_1), .A1(note_0), .C0(note_4), 
    .B0(note_3), .A0(note_2), .F0(n18808), .F1(\u_buzzer/n7_adj_819 ));
  u_speaker_SLICE_1089 \u_speaker/SLICE_1089 ( .D1(n18808), 
    .C1(\u_speaker/n4_adj_1099 ), .B1(\u_speaker/n18732 ), .A1(n19846), 
    .D0(\u_speaker/rom1_0 ), .C0(\u_speaker/rom1_3 ), .B0(\u_speaker/rom1_1 ), 
    .A0(\u_speaker/rom1_2 ), .F0(\u_speaker/n4_adj_1099 ), 
    .F1(\u_speaker/n3068 ));
  SLICE_1090 SLICE_1090( .D1(n18813), .C1(n6_adj_1446), .B1(key_flag_10), 
    .A1(key_value_10), .B0(\u_speaker/rom1_0 ), .A0(\u_speaker/rom1_1 ), 
    .F0(n18813), .F1(n18719));
  SLICE_1091 SLICE_1091( .D1(key_flag_9), .C1(key_value_9), .B1(key_flag_10), 
    .A1(key_value_10), .D0(n18709), .C0(n18720), .B0(n18685), .A0(n18667), 
    .F0(n18606), .F1(n18667));
  SLICE_1092 SLICE_1092( .B1(key_flag_0), .A1(key_value_0), .D0(n9292), 
    .C0(n6), .B0(n5_adj_1447), .A0(n18721), .F0(\u_speaker/n18643 ), 
    .F1(n18721));
  SLICE_1093 SLICE_1093( .D1(n18815), .C1(n18755), .B1(key_flag_6), 
    .A1(key_value_6), .D0(n18761), .C0(n18668), .B0(n18763), .A0(n18667), 
    .F0(n18610), .F1(n18668));
  SLICE_1094 SLICE_1094( .D1(n464), .C1(n3800), .B1(n37), .A1(n456), 
    .D0(\u_speaker/n18698 ), .C0(\u_speaker/n18699 ), .B0(\u_speaker/n468 ), 
    .A0(\u_speaker/n480 ), .F0(n3800), .F1(n3815));
  SLICE_1095 SLICE_1095( .D1(n18725), .C1(n18722), .B1(key_flag_0), 
    .A1(key_value_0), .B0(key_flag_2), .A0(key_value_2), .F0(n18722), 
    .F1(n18649));
  u_speaker_SLICE_1096 \u_speaker/SLICE_1096 ( .B1(rom2_3), 
    .A1(\u_speaker/rom2_2 ), .D0(n12156), .C0(n18724), .B0(key_flag_2), 
    .A0(key_value_2), .F0(n18676), .F1(n18724));
  SLICE_1097 SLICE_1097( .D1(n18736), .C1(n18706), .B1(n18680), .A1(n18684), 
    .D0(key_value_2), .C0(key_flag_2), .B0(key_flag_1), .A0(key_value_1), 
    .F0(n18684), .F1(n16876));
  SLICE_1098 SLICE_1098( .D1(n19846), .C1(n18682), .B1(n18709), .A1(n18771), 
    .D0(key_value_0), .C0(key_flag_0), .B0(key_flag_1), .A0(key_value_1), 
    .F0(n18682), .F1(\u_buzzer/n8_adj_828 ));
  SLICE_1099 SLICE_1099( .D1(n18735), .C1(n18725), .B1(n18722), .A1(n18736), 
    .D0(n16828), .C0(n18668), .B0(n18667), .A0(n18754), .F0(\u_speaker/n362 ), 
    .F1(n16828));
  SLICE_1100 SLICE_1100( .D1(key_flag_4), .C1(key_value_4), .B1(key_value_5), 
    .A1(key_flag_5), .D0(n18668), .C0(n18706), .B0(n18707), .A0(n18667), 
    .F0(\u_speaker/n16_adj_1086 ), .F1(n18706));
  SLICE_1101 SLICE_1101( .D1(n18754), .C1(n19846), .B1(key_value_4), 
    .A1(key_flag_4), .D0(n18668), .C0(n18709), .B0(n16888), .A0(n18667), 
    .F0(n18616), .F1(n16888));
  u_speaker_SLICE_1102 \u_speaker/SLICE_1102 ( .D1(\u_speaker/n18718 ), 
    .C1(n18719), .B1(n911), .A1(\u_speaker/n923 ), .D0(n907), 
    .C0(\u_speaker/n903 ), .B0(n18677), .A0(\u_speaker/n3894 ), 
    .F0(\u_speaker/n3909 ), .F1(\u_speaker/n3894 ));
  SLICE_1103 SLICE_1103( .D1(n18754), .C1(n18735), .B1(n18736), .A1(n18684), 
    .D0(n31), .C0(n18720), .B0(n18685), .A0(n18768), .F0(n351), .F1(n31));
  SLICE_1104 SLICE_1104( .D1(n18815), .C1(n18768), .B1(key_flag_8), 
    .A1(key_value_8), .D0(n16917), .C0(n18720), .B0(n16876), 
    .A0(\u_speaker/n18653 ), .F0(clk_N_168_enable_518), .F1(n16917));
  u_speaker_u_DDS_6_SLICE_1105 \u_speaker/u_DDS_6/SLICE_1105 ( 
    .D1(\u_speaker/u_DDS_6/n6874 ), .C1(\u_speaker/u_DDS_6/n6875 ), 
    .B1(\u_speaker/u_DDS_6/n18759 ), .A1(\u_speaker/fcw_r_1 ), 
    .B0(\u_speaker/fcw_r_0_adj_886 ), .A0(\u_speaker/u_DDS_6/n6876 ), 
    .F0(\u_speaker/u_DDS_6/n18759 ), .F1(\u_speaker/u_DDS_6/n4_adj_839 ));
  u_speaker_u_DDS_5_SLICE_1106 \u_speaker/u_DDS_5/SLICE_1106 ( 
    .B1(\u_speaker/fcw_r_0_adj_886 ), .A1(\u_speaker/u_DDS_5/fcw_r_3 ), 
    .D0(\u_speaker/u_DDS_5/n6898 ), .C0(\u_speaker/u_DDS_5/fcw_r_4 ), 
    .B0(\u_speaker/u_DDS_5/n18723 ), .A0(\u_speaker/fcw_r_1 ), 
    .F0(\u_speaker/u_DDS_5/n4 ), .F1(\u_speaker/u_DDS_5/n18723 ));
  u_speaker_u_DDS_4_SLICE_1107 \u_speaker/u_DDS_4/SLICE_1107 ( 
    .B1(\u_speaker/fcw_r_0_adj_886 ), .A1(\u_speaker/u_DDS_4/n6926 ), 
    .D0(\u_speaker/u_DDS_4/n6924 ), .C0(\u_speaker/u_DDS_4/n6925 ), 
    .B0(\u_speaker/u_DDS_4/n18777 ), .A0(\u_speaker/fcw_r_1 ), 
    .F0(\u_speaker/u_DDS_4/n4_adj_835 ), .F1(\u_speaker/u_DDS_4/n18777 ));
  u_speaker_u_DDS_4_SLICE_1108 \u_speaker/u_DDS_4/SLICE_1108 ( 
    .C1(\u_speaker/u_DDS_4/n6924 ), .B1(\u_speaker/u_DDS_4/n18702 ), 
    .A1(\u_speaker/fcw_r_2_adj_1393 ), .D0(\u_speaker/fcw_r_1 ), 
    .C0(\u_speaker/u_DDS_4/n6925 ), .B0(\u_speaker/fcw_r_0_adj_886 ), 
    .A0(\u_speaker/u_DDS_4/n6926 ), .F0(\u_speaker/u_DDS_4/n18702 ), 
    .F1(\u_speaker/u_DDS_4/n20 ));
  u_speaker_u_DDS_3_SLICE_1109 \u_speaker/u_DDS_3/SLICE_1109 ( 
    .B1(\u_speaker/fcw_r_0_adj_886 ), .A1(\u_speaker/u_DDS_3/n6848 ), 
    .D0(\u_speaker/u_DDS_3/n6846 ), .C0(\u_speaker/u_DDS_3/n6847 ), 
    .B0(\u_speaker/u_DDS_3/n18778 ), .A0(\u_speaker/fcw_r_1 ), 
    .F0(\u_speaker/u_DDS_3/n4_adj_833 ), .F1(\u_speaker/u_DDS_3/n18778 ));
  u_speaker_u_DDS_12_SLICE_1110 \u_speaker/u_DDS_12/SLICE_1110 ( 
    .B1(\u_speaker/fcw_r_0_adj_886 ), .A1(\u_speaker/u_DDS_12/n6818 ), 
    .D0(\u_speaker/u_DDS_12/n6816 ), .C0(\u_speaker/u_DDS_12/n6817 ), 
    .B0(\u_speaker/u_DDS_12/n18776 ), .A0(\u_speaker/fcw_r_1 ), 
    .F0(\u_speaker/u_DDS_12/n4 ), .F1(\u_speaker/u_DDS_12/n18776 ));
  u_key_state_SLICE_1111 \u_key_state/SLICE_1111 ( .D1(\u_key_state/n50 ), 
    .C1(\u_key_state/n49 ), .B1(\u_key_state/n60 ), .A1(\u_key_state/n55 ), 
    .B0(\u_key_state/n10264 ), .A0(\u_key_state/delay_cnt_0 ), 
    .F0(\u_key_state/clk_N_168_enable_505 ), .F1(\u_key_state/n10264 ));
  u_key_state_SLICE_1112 \u_key_state/SLICE_1112 ( 
    .D1(\u_key_state/delay_cnt_13 ), .C1(\u_key_state/delay_cnt_4 ), 
    .B1(\u_key_state/delay_cnt_16 ), .A1(\u_key_state/delay_cnt_20 ), 
    .D0(\u_key_state/delay_cnt_3 ), .C0(\u_key_state/delay_cnt_31 ), 
    .B0(\u_key_state/n48 ), .A0(\u_key_state/delay_cnt_15 ), 
    .F0(\u_key_state/n55 ), .F1(\u_key_state/n48 ));
  u_key_state_SLICE_1113 \u_key_state/SLICE_1113 ( 
    .B1(\u_key_state/delay_cnt_11 ), .A1(\u_key_state/delay_cnt_7 ), 
    .D0(\u_key_state/n40_adj_830 ), .C0(\u_key_state/n52 ), 
    .B0(\u_key_state/n58 ), .A0(\u_key_state/n39_adj_829 ), 
    .F0(\u_key_state/n60 ), .F1(\u_key_state/n40_adj_830 ));
  u_key_state_SLICE_1114 \u_key_state/SLICE_1114 ( 
    .B1(\u_key_state/delay_cnt_23 ), .A1(\u_key_state/delay_cnt_24 ), 
    .D0(\u_key_state/delay_cnt_12 ), .C0(\u_key_state/n44 ), 
    .B0(\u_key_state/n54 ), .A0(\u_key_state/delay_cnt_9 ), 
    .F0(\u_key_state/n58 ), .F1(\u_key_state/n44 ));
  SLICE_1115 SLICE_1115( .D1(count_note_4), .C1(count_note_5), 
    .B1(n92_adj_1474), .A1(n17230), .D0(count_note_0), .C0(count_note_3), 
    .B0(count_note_2), .A0(count_note_1), .F0(n92_adj_1474), .F1(n94));
  SLICE_1116 SLICE_1116( .D1(key_flag_13), .C1(yinjie_2), .B1(key_value_13), 
    .A1(yinjie_1), .C0(n10074), .B0(n73), .A0(yinjie_0), .F0(n18669), 
    .F1(n10074));
  SLICE_1117 SLICE_1117( .D1(cnt_18), .C1(cnt_5), .B1(n17005), 
    .A1(n9_adj_1506), .D0(n42), .C0(n46), .B0(cnt_15), .A0(n41), 
    .F0(n9_adj_1506), .F1(n10216));
  SLICE_1118 SLICE_1118( .B1(cnt_29), .A1(cnt_23), .D0(n26_adj_1449), .C0(n38), 
    .B0(n44), .A0(n25_adj_1450), .F0(n46), .F1(n26_adj_1449));
  SLICE_1119 SLICE_1119( .B1(cnt_25), .A1(cnt_27), .D0(cnt_31), .C0(n30), 
    .B0(n40), .A0(cnt_2), .F0(n44), .F1(n30));
  SLICE_1120 SLICE_1120( .D1(count_note_3), .C1(count_note_2), 
    .B1(count_note_1), .A1(count_note_0), .D0(count_note_4), .C0(count_note_5), 
    .B0(n16847), .A0(n18812), .F0(clk_N_168_enable_456), .F1(n18812));
  SLICE_1121 SLICE_1121( .D1(count_note_5), .C1(n16847), .B1(n13027), 
    .A1(clk_N_168_enable_533), .B0(count_note_6), .A0(count_note_7), 
    .F0(n16847), .F1(n10968));
  SLICE_1122 SLICE_1122( .B1(yinjie_1), .A1(yinjie_0), .D0(yinjie_2), 
    .C0(key_flag_14), .B0(n12259), .A0(key_value_14), .F0(n73), .F1(n12259));
  SLICE_1123 SLICE_1123( .D1(count_note_0), .C1(count_note_3), 
    .B1(count_note_2), .A1(count_note_1), .D0(count_note_4), .C0(n18671), 
    .B0(n16847), .A0(count_note_5), .F0(clk_N_168_enable_534), .F1(n18671));
  SLICE_1124 SLICE_1124( .D1(n4), .C1(count_note_6), .B1(n18774), .A1(n17187), 
    .B0(count_note_3), .A0(count_note_0), .F0(n18774), .F1(n17118));
  u_buzzer_SLICE_1125 \u_buzzer/SLICE_1125 ( .D1(\u_buzzer/n17069 ), 
    .C1(\u_buzzer/n18739 ), .B1(\u_buzzer/n18740 ), .A1(\u_buzzer/n18741 ), 
    .B0(\u_buzzer/cycle_15 ), .A0(CNT_14), .F0(\u_buzzer/n18740 ), 
    .F1(\u_buzzer/n17411 ));
  u_buzzer_SLICE_1126 \u_buzzer/SLICE_1126 ( .D1(\u_buzzer/n11 ), 
    .C1(\u_buzzer/n18748 ), .B1(\u_buzzer/n18749 ), .A1(\u_buzzer/n18739 ), 
    .B0(\u_buzzer/cycle_14 ), .A0(CNT_13), .F0(\u_buzzer/n18739 ), 
    .F1(\u_buzzer/n17081 ));
  u_buzzer_SLICE_1127 \u_buzzer/SLICE_1127 ( .C1(\u_buzzer/n14_adj_801 ), 
    .B1(\u_buzzer/cycle_16 ), .A1(CNT_15), .C0(\u_buzzer/cycle_14 ), 
    .B0(\u_buzzer/cycle_15 ), .A0(CNT_14), .F0(\u_buzzer/n14_adj_801 ), 
    .F1(\u_buzzer/n26_adj_802 ));
  u_buzzer_SLICE_1128 \u_buzzer/SLICE_1128 ( .D1(\u_buzzer/n18738 ), 
    .C1(\u_buzzer/n18740 ), .B1(\u_buzzer/n17081 ), .A1(\u_buzzer/n18741 ), 
    .B0(\u_buzzer/cycle_16 ), .A0(CNT_15), .F0(\u_buzzer/n18741 ), 
    .F1(\u_buzzer/n17097 ));
  u_buzzer_SLICE_1129 \u_buzzer/SLICE_1129 ( .D1(\u_buzzer/n17052 ), 
    .C1(\u_buzzer/n18752 ), .B1(\u_buzzer/n18742 ), .A1(\u_buzzer/n18743 ), 
    .B0(\u_buzzer/cycle_11 ), .A0(CNT_10), .F0(\u_buzzer/n18742 ), 
    .F1(\u_buzzer/n17413 ));
  u_buzzer_SLICE_1130 \u_buzzer/SLICE_1130 ( .D1(\u_buzzer/n17050 ), 
    .C1(\u_buzzer/n18742 ), .B1(\u_buzzer/n18743 ), .A1(\u_buzzer/n18744 ), 
    .B0(\u_buzzer/cycle_12 ), .A0(CNT_11), .F0(\u_buzzer/n18743 ), 
    .F1(\u_buzzer/n17069 ));
  u_buzzer_SLICE_1131 \u_buzzer/SLICE_1131 ( .C1(\u_buzzer/n18 ), 
    .B1(\u_buzzer/cycle_13 ), .A1(CNT_12), .C0(\u_buzzer/cycle_11 ), 
    .B0(\u_buzzer/cycle_12 ), .A0(CNT_11), .F0(\u_buzzer/n18 ), 
    .F1(\u_buzzer/n20 ));
  u_buzzer_SLICE_1132 \u_buzzer/SLICE_1132 ( .D1(\u_buzzer/n17028 ), 
    .C1(\u_buzzer/n18745 ), .B1(\u_buzzer/n11 ), .A1(\u_buzzer/n18748 ), 
    .B0(\u_buzzer/cycle_5 ), .A0(CNT_4), .F0(\u_buzzer/n18745 ), 
    .F1(\u_buzzer/n17037 ));
  u_buzzer_SLICE_1133 \u_buzzer/SLICE_1133 ( .C1(\u_buzzer/n10 ), 
    .B1(\u_buzzer/cycle_8 ), .A1(CNT_7), .C0(\u_buzzer/cycle_6 ), 
    .B0(\u_buzzer/cycle_7 ), .A0(CNT_6), .F0(\u_buzzer/n10 ), 
    .F1(\u_buzzer/n12 ));
  u_buzzer_SLICE_1134 \u_buzzer/SLICE_1134 ( .D1(\u_buzzer/n17037 ), 
    .C1(\u_buzzer/n18749 ), .B1(\u_buzzer/n18751 ), .A1(\u_buzzer/n18752 ), 
    .B0(\u_buzzer/cycle_8 ), .A0(CNT_7), .F0(\u_buzzer/n18749 ), 
    .F1(\u_buzzer/n17050 ));
  u_buzzer_SLICE_1135 \u_buzzer/SLICE_1135 ( .D1(n16920), .C1(n18651), 
    .B1(\u_buzzer/n18640 ), .A1(n18755), .D0(n18722), .C0(n18736), .B0(n18725), 
    .A0(n18721), .F0(\u_buzzer/n18640 ), .F1(\u_buzzer/clk_N_168_enable_513 ));
  u_buzzer_SLICE_1136 \u_buzzer/SLICE_1136 ( .D1(\u_buzzer/n6_adj_807 ), 
    .C1(n10160), .B1(n16909), .A1(n9654), .D0(n18763), .C0(n19846), 
    .B0(n18725), .A0(n18721), .F0(\u_buzzer/n6_adj_807 ), 
    .F1(\u_buzzer/clk_N_168_enable_517 ));
  u_buzzer_SLICE_1137 \u_buzzer/SLICE_1137 ( .D1(n18606), .C1(n18696), 
    .B1(n18754), .A1(\u_buzzer/n18650 ), .D0(n19846), .C0(n18721), .B0(n18722), 
    .A0(n18725), .F0(\u_buzzer/n18650 ), .F1(\u_buzzer/clk_N_168_enable_509 ));
  u_buzzer_SLICE_1138 \u_buzzer/SLICE_1138 ( .D1(n18619), .C1(n10160), 
    .B1(n18755), .A1(n18652), .D0(n18771), .C0(n18768), .B0(n18763), 
    .A0(n18761), .F0(n18619), .F1(\u_buzzer/clk_N_168_enable_516 ));
  u_buzzer_SLICE_1139 \u_buzzer/SLICE_1139 ( .B1(key_value_9), 
    .A1(key_value_4), .D0(key_value_5), .C0(\u_buzzer/n16_adj_824 ), 
    .B0(\u_buzzer/n22_adj_823 ), .A0(key_value_12), 
    .F0(\u_buzzer/n24_adj_820 ), .F1(\u_buzzer/n16_adj_824 ));
  u_buzzer_SLICE_1140 \u_buzzer/SLICE_1140 ( .D1(CNT_0), .C1(CNT_5), 
    .B1(CNT_10), .A1(CNT_3), .C0(\u_buzzer/n30_adj_825 ), 
    .B0(\u_buzzer/n17345 ), .A0(\u_buzzer/n29 ), .F0(\u_buzzer/n15951 ), 
    .F1(\u_buzzer/n30_adj_825 ));
  u_buzzer_SLICE_1141 \u_buzzer/SLICE_1141 ( .D1(CNT_11), .C1(CNT_14), 
    .B1(CNT_6), .A1(CNT_1), .D0(CNT_2), .C0(\u_buzzer/n28_adj_827 ), 
    .B0(CNT_9), .A0(\u_buzzer/n31_adj_826 ), .F0(\u_buzzer/n17345 ), 
    .F1(\u_buzzer/n28_adj_827 ));
  SLICE_1142 SLICE_1142( .D1(key_value_8), .C1(key_flag_8), .B1(key_value_9), 
    .A1(key_flag_9), .D0(n18722), .C0(\u_buzzer/n8_adj_828 ), .B0(n9654), 
    .A0(n9), .F0(\u_buzzer/clk_N_168_enable_508 ), .F1(n9654));
  u_key_5_SLICE_1143 \u_key_5/SLICE_1143 ( .D1(\u_key_5/delay_cnt_13 ), 
    .C1(\u_key_5/delay_cnt_4 ), .B1(\u_key_5/delay_cnt_16 ), 
    .A1(\u_key_5/delay_cnt_20 ), .D0(\u_key_5/delay_cnt_3 ), 
    .C0(\u_key_5/delay_cnt_31 ), .B0(\u_key_5/n48 ), 
    .A0(\u_key_5/delay_cnt_15 ), .F0(\u_key_5/n55 ), .F1(\u_key_5/n48 ));
  u_key_5_SLICE_1144 \u_key_5/SLICE_1144 ( .B1(\u_key_5/delay_cnt_11 ), 
    .A1(\u_key_5/delay_cnt_7 ), .D0(\u_key_5/n40_adj_799 ), .C0(\u_key_5/n52 ), 
    .B0(\u_key_5/n58 ), .A0(\u_key_5/n39_adj_798 ), .F0(\u_key_5/n60 ), 
    .F1(\u_key_5/n40_adj_799 ));
  u_key_5_SLICE_1145 \u_key_5/SLICE_1145 ( .B1(\u_key_5/delay_cnt_23 ), 
    .A1(\u_key_5/delay_cnt_24 ), .D0(\u_key_5/delay_cnt_12 ), 
    .C0(\u_key_5/n44 ), .B0(\u_key_5/n54 ), .A0(\u_key_5/delay_cnt_9 ), 
    .F0(\u_key_5/n58 ), .F1(\u_key_5/n44 ));
  SLICE_1146 SLICE_1146( .D1(n18815), .C1(n18754), .B1(key_flag_6), 
    .A1(key_value_6), .D0(n18736), .C0(n18735), .B0(n18654), .A0(n18722), 
    .F0(n312), .F1(n18654));
  SLICE_1147 SLICE_1147( .D1(count_note_3), .C1(n16847), .B1(n18804), 
    .A1(count_note_0), .B0(count_note_2), .A0(count_note_1), .F0(n18804), 
    .F1(n16854));
  u_key_8_SLICE_1148 \u_key_8/SLICE_1148 ( .D1(\u_key_8/n50 ), 
    .C1(\u_key_8/n49 ), .B1(\u_key_8/n60 ), .A1(\u_key_8/n55 ), 
    .B0(\u_key_8/n10240 ), .A0(\u_key_8/delay_cnt_0 ), 
    .F0(\u_key_8/clk_N_168_enable_232 ), .F1(\u_key_8/n10240 ));
  u_key_8_SLICE_1149 \u_key_8/SLICE_1149 ( .D1(\u_key_8/delay_cnt_13 ), 
    .C1(\u_key_8/delay_cnt_4 ), .B1(\u_key_8/delay_cnt_16 ), 
    .A1(\u_key_8/delay_cnt_20 ), .D0(\u_key_8/delay_cnt_3 ), 
    .C0(\u_key_8/delay_cnt_31 ), .B0(\u_key_8/n48 ), 
    .A0(\u_key_8/delay_cnt_15 ), .F0(\u_key_8/n55 ), .F1(\u_key_8/n48 ));
  u_key_8_SLICE_1150 \u_key_8/SLICE_1150 ( .B1(\u_key_8/delay_cnt_11 ), 
    .A1(\u_key_8/delay_cnt_7 ), .D0(\u_key_8/n40_adj_797 ), .C0(\u_key_8/n52 ), 
    .B0(\u_key_8/n58 ), .A0(\u_key_8/n39_adj_796 ), .F0(\u_key_8/n60 ), 
    .F1(\u_key_8/n40_adj_797 ));
  u_key_8_SLICE_1151 \u_key_8/SLICE_1151 ( .B1(\u_key_8/delay_cnt_23 ), 
    .A1(\u_key_8/delay_cnt_24 ), .D0(\u_key_8/delay_cnt_12 ), 
    .C0(\u_key_8/n44 ), .B0(\u_key_8/n54 ), .A0(\u_key_8/delay_cnt_9 ), 
    .F0(\u_key_8/n58 ), .F1(\u_key_8/n44 ));
  u_key_10_SLICE_1152 \u_key_10/SLICE_1152 ( .D1(\u_key_10/n50 ), 
    .C1(\u_key_10/n49 ), .B1(\u_key_10/n60 ), .A1(\u_key_10/n55 ), 
    .B0(\u_key_10/n10246 ), .A0(\u_key_10/delay_cnt_0 ), 
    .F0(\u_key_10/clk_N_168_enable_170 ), .F1(\u_key_10/n10246 ));
  u_key_10_SLICE_1153 \u_key_10/SLICE_1153 ( .D1(\u_key_10/delay_cnt_13 ), 
    .C1(\u_key_10/delay_cnt_4 ), .B1(\u_key_10/delay_cnt_16 ), 
    .A1(\u_key_10/delay_cnt_20 ), .D0(\u_key_10/delay_cnt_3 ), 
    .C0(\u_key_10/delay_cnt_31 ), .B0(\u_key_10/n48 ), 
    .A0(\u_key_10/delay_cnt_15 ), .F0(\u_key_10/n55 ), .F1(\u_key_10/n48 ));
  u_key_10_SLICE_1154 \u_key_10/SLICE_1154 ( .B1(\u_key_10/delay_cnt_11 ), 
    .A1(\u_key_10/delay_cnt_7 ), .D0(\u_key_10/n40_adj_793 ), 
    .C0(\u_key_10/n52 ), .B0(\u_key_10/n58 ), .A0(\u_key_10/n39_adj_792 ), 
    .F0(\u_key_10/n60 ), .F1(\u_key_10/n40_adj_793 ));
  u_key_10_SLICE_1155 \u_key_10/SLICE_1155 ( .B1(\u_key_10/delay_cnt_23 ), 
    .A1(\u_key_10/delay_cnt_24 ), .D0(\u_key_10/delay_cnt_12 ), 
    .C0(\u_key_10/n44 ), .B0(\u_key_10/n54 ), .A0(\u_key_10/delay_cnt_9 ), 
    .F0(\u_key_10/n58 ), .F1(\u_key_10/n44 ));
  u_key_11_SLICE_1156 \u_key_11/SLICE_1156 ( .D1(\u_key_11/n50 ), 
    .C1(\u_key_11/n49 ), .B1(\u_key_11/n60 ), .A1(\u_key_11/n55 ), 
    .B0(\u_key_11/n10249 ), .A0(\u_key_11/delay_cnt_0 ), 
    .F0(\u_key_11/clk_N_168_enable_139 ), .F1(\u_key_11/n10249 ));
  u_key_11_SLICE_1157 \u_key_11/SLICE_1157 ( .D1(\u_key_11/delay_cnt_13 ), 
    .C1(\u_key_11/delay_cnt_4 ), .B1(\u_key_11/delay_cnt_16 ), 
    .A1(\u_key_11/delay_cnt_20 ), .D0(\u_key_11/delay_cnt_3 ), 
    .C0(\u_key_11/delay_cnt_31 ), .B0(\u_key_11/n48 ), 
    .A0(\u_key_11/delay_cnt_15 ), .F0(\u_key_11/n55 ), .F1(\u_key_11/n48 ));
  u_key_11_SLICE_1158 \u_key_11/SLICE_1158 ( .B1(\u_key_11/delay_cnt_11 ), 
    .A1(\u_key_11/delay_cnt_7 ), .D0(\u_key_11/n40_adj_791 ), 
    .C0(\u_key_11/n52 ), .B0(\u_key_11/n58 ), .A0(\u_key_11/n39_adj_790 ), 
    .F0(\u_key_11/n60 ), .F1(\u_key_11/n40_adj_791 ));
  u_key_11_SLICE_1159 \u_key_11/SLICE_1159 ( .B1(\u_key_11/delay_cnt_23 ), 
    .A1(\u_key_11/delay_cnt_24 ), .D0(\u_key_11/delay_cnt_12 ), 
    .C0(\u_key_11/n44 ), .B0(\u_key_11/n54 ), .A0(\u_key_11/delay_cnt_9 ), 
    .F0(\u_key_11/n58 ), .F1(\u_key_11/n44 ));
  u_key_12_SLICE_1160 \u_key_12/SLICE_1160 ( .D1(\u_key_12/n50 ), 
    .C1(\u_key_12/n49 ), .B1(\u_key_12/n60 ), .A1(\u_key_12/n55 ), 
    .B0(\u_key_12/n10252 ), .A0(\u_key_12/delay_cnt_0 ), 
    .F0(\u_key_12/clk_N_168_enable_108 ), .F1(\u_key_12/n10252 ));
  u_key_12_SLICE_1161 \u_key_12/SLICE_1161 ( .D1(\u_key_12/delay_cnt_13 ), 
    .C1(\u_key_12/delay_cnt_4 ), .B1(\u_key_12/delay_cnt_16 ), 
    .A1(\u_key_12/delay_cnt_20 ), .D0(\u_key_12/delay_cnt_3 ), 
    .C0(\u_key_12/delay_cnt_31 ), .B0(\u_key_12/n48 ), 
    .A0(\u_key_12/delay_cnt_15 ), .F0(\u_key_12/n55 ), .F1(\u_key_12/n48 ));
  u_key_12_SLICE_1162 \u_key_12/SLICE_1162 ( .B1(\u_key_12/delay_cnt_11 ), 
    .A1(\u_key_12/delay_cnt_7 ), .D0(\u_key_12/n40_adj_789 ), 
    .C0(\u_key_12/n52 ), .B0(\u_key_12/n58 ), .A0(\u_key_12/n39_adj_788 ), 
    .F0(\u_key_12/n60 ), .F1(\u_key_12/n40_adj_789 ));
  u_key_12_SLICE_1163 \u_key_12/SLICE_1163 ( .B1(\u_key_12/delay_cnt_23 ), 
    .A1(\u_key_12/delay_cnt_24 ), .D0(\u_key_12/delay_cnt_12 ), 
    .C0(\u_key_12/n44 ), .B0(\u_key_12/n54 ), .A0(\u_key_12/delay_cnt_9 ), 
    .F0(\u_key_12/n58 ), .F1(\u_key_12/n44 ));
  u_key_2_SLICE_1164 \u_key_2/SLICE_1164 ( .D1(\u_key_2/delay_cnt_13 ), 
    .C1(\u_key_2/delay_cnt_4 ), .B1(\u_key_2/delay_cnt_16 ), 
    .A1(\u_key_2/delay_cnt_20 ), .D0(\u_key_2/delay_cnt_3 ), 
    .C0(\u_key_2/delay_cnt_31 ), .B0(\u_key_2/n48 ), 
    .A0(\u_key_2/delay_cnt_15 ), .F0(\u_key_2/n55 ), .F1(\u_key_2/n48 ));
  u_key_2_SLICE_1165 \u_key_2/SLICE_1165 ( .B1(\u_key_2/delay_cnt_11 ), 
    .A1(\u_key_2/delay_cnt_7 ), .D0(\u_key_2/n40_adj_787 ), .C0(\u_key_2/n52 ), 
    .B0(\u_key_2/n58 ), .A0(\u_key_2/n39_adj_786 ), .F0(\u_key_2/n60 ), 
    .F1(\u_key_2/n40_adj_787 ));
  u_key_2_SLICE_1166 \u_key_2/SLICE_1166 ( .B1(\u_key_2/delay_cnt_23 ), 
    .A1(\u_key_2/delay_cnt_24 ), .D0(\u_key_2/delay_cnt_12 ), 
    .C0(\u_key_2/n44 ), .B0(\u_key_2/n54 ), .A0(\u_key_2/delay_cnt_9 ), 
    .F0(\u_key_2/n58 ), .F1(\u_key_2/n44 ));
  u_key_13_SLICE_1167 \u_key_13/SLICE_1167 ( .D1(\u_key_13/n50 ), 
    .C1(\u_key_13/n49 ), .B1(\u_key_13/n60 ), .A1(\u_key_13/n55 ), 
    .B0(\u_key_13/n10255 ), .A0(\u_key_13/delay_cnt_0 ), 
    .F0(\u_key_13/clk_N_168_enable_77 ), .F1(\u_key_13/n10255 ));
  u_key_13_SLICE_1168 \u_key_13/SLICE_1168 ( .D1(\u_key_13/delay_cnt_13 ), 
    .C1(\u_key_13/delay_cnt_4 ), .B1(\u_key_13/delay_cnt_16 ), 
    .A1(\u_key_13/delay_cnt_20 ), .D0(\u_key_13/delay_cnt_3 ), 
    .C0(\u_key_13/delay_cnt_31 ), .B0(\u_key_13/n48 ), 
    .A0(\u_key_13/delay_cnt_15 ), .F0(\u_key_13/n55 ), .F1(\u_key_13/n48 ));
  u_key_13_SLICE_1169 \u_key_13/SLICE_1169 ( .B1(\u_key_13/delay_cnt_11 ), 
    .A1(\u_key_13/delay_cnt_7 ), .D0(\u_key_13/n40_adj_785 ), 
    .C0(\u_key_13/n52 ), .B0(\u_key_13/n58 ), .A0(\u_key_13/n39_adj_784 ), 
    .F0(\u_key_13/n60 ), .F1(\u_key_13/n40_adj_785 ));
  u_key_13_SLICE_1170 \u_key_13/SLICE_1170 ( .B1(\u_key_13/delay_cnt_23 ), 
    .A1(\u_key_13/delay_cnt_24 ), .D0(\u_key_13/delay_cnt_12 ), 
    .C0(\u_key_13/n44 ), .B0(\u_key_13/n54 ), .A0(\u_key_13/delay_cnt_9 ), 
    .F0(\u_key_13/n58 ), .F1(\u_key_13/n44 ));
  u_key_9_SLICE_1171 \u_key_9/SLICE_1171 ( .D1(\u_key_9/n50 ), 
    .C1(\u_key_9/n49 ), .B1(\u_key_9/n60 ), .A1(\u_key_9/n55 ), 
    .B0(\u_key_9/n10243 ), .A0(\u_key_9/delay_cnt_0 ), 
    .F0(\u_key_9/clk_N_168_enable_201 ), .F1(\u_key_9/n10243 ));
  u_key_9_SLICE_1172 \u_key_9/SLICE_1172 ( .D1(\u_key_9/delay_cnt_13 ), 
    .C1(\u_key_9/delay_cnt_4 ), .B1(\u_key_9/delay_cnt_16 ), 
    .A1(\u_key_9/delay_cnt_20 ), .D0(\u_key_9/delay_cnt_3 ), 
    .C0(\u_key_9/delay_cnt_31 ), .B0(\u_key_9/n48 ), 
    .A0(\u_key_9/delay_cnt_15 ), .F0(\u_key_9/n55 ), .F1(\u_key_9/n48 ));
  u_key_9_SLICE_1173 \u_key_9/SLICE_1173 ( .B1(\u_key_9/delay_cnt_11 ), 
    .A1(\u_key_9/delay_cnt_7 ), .D0(\u_key_9/n40_adj_783 ), .C0(\u_key_9/n52 ), 
    .B0(\u_key_9/n58 ), .A0(\u_key_9/n39_adj_782 ), .F0(\u_key_9/n60 ), 
    .F1(\u_key_9/n40_adj_783 ));
  u_key_9_SLICE_1174 \u_key_9/SLICE_1174 ( .B1(\u_key_9/delay_cnt_23 ), 
    .A1(\u_key_9/delay_cnt_24 ), .D0(\u_key_9/delay_cnt_12 ), 
    .C0(\u_key_9/n44 ), .B0(\u_key_9/n54 ), .A0(\u_key_9/delay_cnt_9 ), 
    .F0(\u_key_9/n58 ), .F1(\u_key_9/n44 ));
  u_key_1_SLICE_1175 \u_key_1/SLICE_1175 ( .D1(\u_key_1/delay_cnt_13 ), 
    .C1(\u_key_1/delay_cnt_4 ), .B1(\u_key_1/delay_cnt_16 ), 
    .A1(\u_key_1/delay_cnt_20 ), .D0(\u_key_1/delay_cnt_3 ), 
    .C0(\u_key_1/delay_cnt_31 ), .B0(\u_key_1/n48 ), 
    .A0(\u_key_1/delay_cnt_15 ), .F0(\u_key_1/n55 ), .F1(\u_key_1/n48 ));
  u_key_1_SLICE_1176 \u_key_1/SLICE_1176 ( .B1(\u_key_1/delay_cnt_11 ), 
    .A1(\u_key_1/delay_cnt_7 ), .D0(\u_key_1/n40_adj_779 ), .C0(\u_key_1/n52 ), 
    .B0(\u_key_1/n58 ), .A0(\u_key_1/n39_adj_778 ), .F0(\u_key_1/n60 ), 
    .F1(\u_key_1/n40_adj_779 ));
  u_key_1_SLICE_1177 \u_key_1/SLICE_1177 ( .B1(\u_key_1/delay_cnt_23 ), 
    .A1(\u_key_1/delay_cnt_24 ), .D0(\u_key_1/delay_cnt_12 ), 
    .C0(\u_key_1/n44 ), .B0(\u_key_1/n54 ), .A0(\u_key_1/delay_cnt_9 ), 
    .F0(\u_key_1/n58 ), .F1(\u_key_1/n44 ));
  u_key_7_SLICE_1178 \u_key_7/SLICE_1178 ( .D1(\u_key_7/n50 ), 
    .C1(\u_key_7/n49 ), .B1(\u_key_7/n60 ), .A1(\u_key_7/n55 ), 
    .B0(\u_key_7/n10237 ), .A0(\u_key_7/delay_cnt_0 ), 
    .F0(\u_key_7/clk_N_168_enable_263 ), .F1(\u_key_7/n10237 ));
  u_key_7_SLICE_1179 \u_key_7/SLICE_1179 ( .D1(\u_key_7/delay_cnt_13 ), 
    .C1(\u_key_7/delay_cnt_4 ), .B1(\u_key_7/delay_cnt_16 ), 
    .A1(\u_key_7/delay_cnt_20 ), .D0(\u_key_7/delay_cnt_3 ), 
    .C0(\u_key_7/delay_cnt_31 ), .B0(\u_key_7/n48 ), 
    .A0(\u_key_7/delay_cnt_15 ), .F0(\u_key_7/n55 ), .F1(\u_key_7/n48 ));
  u_key_7_SLICE_1180 \u_key_7/SLICE_1180 ( .B1(\u_key_7/delay_cnt_11 ), 
    .A1(\u_key_7/delay_cnt_7 ), .D0(\u_key_7/n40_adj_777 ), .C0(\u_key_7/n52 ), 
    .B0(\u_key_7/n58 ), .A0(\u_key_7/n39_adj_776 ), .F0(\u_key_7/n60 ), 
    .F1(\u_key_7/n40_adj_777 ));
  u_key_7_SLICE_1181 \u_key_7/SLICE_1181 ( .B1(\u_key_7/delay_cnt_23 ), 
    .A1(\u_key_7/delay_cnt_24 ), .D0(\u_key_7/delay_cnt_12 ), 
    .C0(\u_key_7/n44 ), .B0(\u_key_7/n54 ), .A0(\u_key_7/delay_cnt_9 ), 
    .F0(\u_key_7/n58 ), .F1(\u_key_7/n44 ));
  u_key_6_SLICE_1182 \u_key_6/SLICE_1182 ( .D1(\u_key_6/n50 ), 
    .C1(\u_key_6/n49 ), .B1(\u_key_6/n60 ), .A1(\u_key_6/n55 ), 
    .B0(\u_key_6/n10231 ), .A0(\u_key_6/delay_cnt_0 ), 
    .F0(\u_key_6/clk_N_168_enable_294 ), .F1(\u_key_6/n10231 ));
  u_key_6_SLICE_1183 \u_key_6/SLICE_1183 ( .D1(\u_key_6/delay_cnt_13 ), 
    .C1(\u_key_6/delay_cnt_4 ), .B1(\u_key_6/delay_cnt_16 ), 
    .A1(\u_key_6/delay_cnt_20 ), .D0(\u_key_6/delay_cnt_3 ), 
    .C0(\u_key_6/delay_cnt_31 ), .B0(\u_key_6/n48 ), 
    .A0(\u_key_6/delay_cnt_15 ), .F0(\u_key_6/n55 ), .F1(\u_key_6/n48 ));
  u_key_6_SLICE_1184 \u_key_6/SLICE_1184 ( .B1(\u_key_6/delay_cnt_11 ), 
    .A1(\u_key_6/delay_cnt_7 ), .D0(\u_key_6/n40_adj_775 ), .C0(\u_key_6/n52 ), 
    .B0(\u_key_6/n58 ), .A0(\u_key_6/n39_adj_774 ), .F0(\u_key_6/n60 ), 
    .F1(\u_key_6/n40_adj_775 ));
  u_key_6_SLICE_1185 \u_key_6/SLICE_1185 ( .B1(\u_key_6/delay_cnt_23 ), 
    .A1(\u_key_6/delay_cnt_24 ), .D0(\u_key_6/delay_cnt_12 ), 
    .C0(\u_key_6/n44 ), .B0(\u_key_6/n54 ), .A0(\u_key_6/delay_cnt_9 ), 
    .F0(\u_key_6/n58 ), .F1(\u_key_6/n44 ));
  SLICE_1186 SLICE_1186( .D1(beat_2), .C1(count_beat_2), .B1(n18726), 
    .A1(n18727), .B0(beat_3), .A0(count_beat_3), .F0(n18726), .F1(n17020));
  SLICE_1187 SLICE_1187( .D1(count_note_1), .C1(count_note_7), .B1(n16869), 
    .A1(n16859), .D0(count_note_6), .C0(count_note_5), .B0(count_note_3), 
    .A0(count_note_2), .F0(n16859), .F1(n18604));
  u_key_3_SLICE_1188 \u_key_3/SLICE_1188 ( .D1(\u_key_3/delay_cnt_13 ), 
    .C1(\u_key_3/delay_cnt_4 ), .B1(\u_key_3/delay_cnt_16 ), 
    .A1(\u_key_3/delay_cnt_20 ), .D0(\u_key_3/delay_cnt_3 ), 
    .C0(\u_key_3/delay_cnt_31 ), .B0(\u_key_3/n48 ), 
    .A0(\u_key_3/delay_cnt_15 ), .F0(\u_key_3/n55 ), .F1(\u_key_3/n48 ));
  u_key_3_SLICE_1189 \u_key_3/SLICE_1189 ( .B1(\u_key_3/delay_cnt_11 ), 
    .A1(\u_key_3/delay_cnt_7 ), .D0(\u_key_3/n40_adj_773 ), .C0(\u_key_3/n52 ), 
    .B0(\u_key_3/n58 ), .A0(\u_key_3/n39_adj_772 ), .F0(\u_key_3/n60 ), 
    .F1(\u_key_3/n40_adj_773 ));
  u_key_3_SLICE_1190 \u_key_3/SLICE_1190 ( .B1(\u_key_3/delay_cnt_23 ), 
    .A1(\u_key_3/delay_cnt_24 ), .D0(\u_key_3/delay_cnt_12 ), 
    .C0(\u_key_3/n44 ), .B0(\u_key_3/n54 ), .A0(\u_key_3/delay_cnt_9 ), 
    .F0(\u_key_3/n58 ), .F1(\u_key_3/n44 ));
  u_key_15_SLICE_1191 \u_key_15/SLICE_1191 ( .D1(\u_key_15/n50 ), 
    .C1(\u_key_15/n49 ), .B1(\u_key_15/n60 ), .A1(\u_key_15/n55 ), 
    .D0(\u_key_15/delay_cnt_0 ), .C0(\u_key_15/n10261 ), .B0(key_c_14), 
    .A0(\u_key_15/key_reg ), .F0(\u_key_15/clk_N_168_enable_462 ), 
    .F1(\u_key_15/n10261 ));
  u_key_15_SLICE_1192 \u_key_15/SLICE_1192 ( .D1(\u_key_15/delay_cnt_13 ), 
    .C1(\u_key_15/delay_cnt_4 ), .B1(\u_key_15/delay_cnt_16 ), 
    .A1(\u_key_15/delay_cnt_20 ), .D0(\u_key_15/delay_cnt_3 ), 
    .C0(\u_key_15/delay_cnt_31 ), .B0(\u_key_15/n48 ), 
    .A0(\u_key_15/delay_cnt_15 ), .F0(\u_key_15/n55 ), .F1(\u_key_15/n48 ));
  u_key_15_SLICE_1193 \u_key_15/SLICE_1193 ( .B1(\u_key_15/delay_cnt_11 ), 
    .A1(\u_key_15/delay_cnt_7 ), .D0(\u_key_15/n40_adj_771 ), 
    .C0(\u_key_15/n52 ), .B0(\u_key_15/n58 ), .A0(\u_key_15/n39_adj_770 ), 
    .F0(\u_key_15/n60 ), .F1(\u_key_15/n40_adj_771 ));
  u_key_15_SLICE_1194 \u_key_15/SLICE_1194 ( .B1(\u_key_15/delay_cnt_23 ), 
    .A1(\u_key_15/delay_cnt_24 ), .D0(\u_key_15/delay_cnt_12 ), 
    .C0(\u_key_15/n44 ), .B0(\u_key_15/n54 ), .A0(\u_key_15/delay_cnt_9 ), 
    .F0(\u_key_15/n58 ), .F1(\u_key_15/n44 ));
  u_key_4_SLICE_1195 \u_key_4/SLICE_1195 ( .D1(\u_key_4/delay_cnt_13 ), 
    .C1(\u_key_4/delay_cnt_4 ), .B1(\u_key_4/delay_cnt_16 ), 
    .A1(\u_key_4/delay_cnt_20 ), .D0(\u_key_4/delay_cnt_3 ), 
    .C0(\u_key_4/delay_cnt_31 ), .B0(\u_key_4/n48 ), 
    .A0(\u_key_4/delay_cnt_15 ), .F0(\u_key_4/n55 ), .F1(\u_key_4/n48 ));
  u_key_4_SLICE_1196 \u_key_4/SLICE_1196 ( .B1(\u_key_4/delay_cnt_11 ), 
    .A1(\u_key_4/delay_cnt_7 ), .D0(\u_key_4/n40_adj_769 ), .C0(\u_key_4/n52 ), 
    .B0(\u_key_4/n58 ), .A0(\u_key_4/n39_adj_768 ), .F0(\u_key_4/n60 ), 
    .F1(\u_key_4/n40_adj_769 ));
  u_key_4_SLICE_1197 \u_key_4/SLICE_1197 ( .B1(\u_key_4/delay_cnt_23 ), 
    .A1(\u_key_4/delay_cnt_24 ), .D0(\u_key_4/delay_cnt_12 ), 
    .C0(\u_key_4/n44 ), .B0(\u_key_4/n54 ), .A0(\u_key_4/delay_cnt_9 ), 
    .F0(\u_key_4/n58 ), .F1(\u_key_4/n44 ));
  u_key_14_SLICE_1198 \u_key_14/SLICE_1198 ( .D1(\u_key_14/n50 ), 
    .C1(\u_key_14/n49 ), .B1(\u_key_14/n60 ), .A1(\u_key_14/n55 ), 
    .B0(\u_key_14/n10258 ), .A0(\u_key_14/delay_cnt_0 ), 
    .F0(\u_key_14/clk_N_168_enable_46 ), .F1(\u_key_14/n10258 ));
  u_key_14_SLICE_1199 \u_key_14/SLICE_1199 ( .D1(\u_key_14/delay_cnt_13 ), 
    .C1(\u_key_14/delay_cnt_4 ), .B1(\u_key_14/delay_cnt_16 ), 
    .A1(\u_key_14/delay_cnt_20 ), .D0(\u_key_14/delay_cnt_3 ), 
    .C0(\u_key_14/delay_cnt_31 ), .B0(\u_key_14/n48 ), 
    .A0(\u_key_14/delay_cnt_15 ), .F0(\u_key_14/n55 ), .F1(\u_key_14/n48 ));
  u_key_14_SLICE_1200 \u_key_14/SLICE_1200 ( .B1(\u_key_14/delay_cnt_11 ), 
    .A1(\u_key_14/delay_cnt_7 ), .D0(\u_key_14/n40_adj_767 ), 
    .C0(\u_key_14/n52 ), .B0(\u_key_14/n58 ), .A0(\u_key_14/n39_adj_766 ), 
    .F0(\u_key_14/n60 ), .F1(\u_key_14/n40_adj_767 ));
  u_key_14_SLICE_1201 \u_key_14/SLICE_1201 ( .B1(\u_key_14/delay_cnt_23 ), 
    .A1(\u_key_14/delay_cnt_24 ), .D0(\u_key_14/delay_cnt_12 ), 
    .C0(\u_key_14/n44 ), .B0(\u_key_14/n54 ), .A0(\u_key_14/delay_cnt_9 ), 
    .F0(\u_key_14/n58 ), .F1(\u_key_14/n44 ));
  u_speaker_SLICE_1202 \u_speaker/SLICE_1202 ( .D1(rom2_0), .C1(rom2_1), 
    .B1(rom2_3), .A1(\u_speaker/rom2_2 ), .D0(rom2_0), .C0(rom2_1), 
    .B0(\u_speaker/rom2_2 ), .A0(rom2_3), .F0(\u_speaker/n23_adj_1092 ), 
    .F1(\u_speaker/n3599 ));
  u_speaker_SLICE_1203 \u_speaker/SLICE_1203 ( .D1(note_0), .C1(note_4), 
    .B1(note_3), .A1(note_2), .D0(note_0), .C0(note_4), .B0(note_3), 
    .A0(note_2), .F0(\u_speaker/n14_adj_855 ), .F1(n12983));
  u_speaker_SLICE_1204 \u_speaker/SLICE_1204 ( .D1(note_1), .C1(note_4), 
    .B1(note_3), .A1(note_2), .D0(note_1), .C0(note_4), .B0(note_3), 
    .A0(note_2), .F0(n18697), .F1(n9757));
  u_speaker_SLICE_1205 \u_speaker/SLICE_1205 ( .D1(note_0), .C1(note_2), 
    .B1(note_1), .A1(note_3), .D0(note_0), .C0(note_2), .B0(note_1), 
    .A0(note_3), .F0(\u_speaker/n3_adj_858 ), .F1(\u_speaker/n18656 ));
  u_speaker_SLICE_1206 \u_speaker/SLICE_1206 ( .D1(note_0), .C1(note_2), 
    .B1(note_1), .A1(note_3), .D0(note_0), .C0(note_2), .B0(note_1), 
    .A0(note_3), .F0(n3_adj_1473), .F1(n3));
  SLICE_1207 SLICE_1207( .D1(count_beat_0), .C1(n201), .B1(n19846), 
    .A1(clk_beat), .D0(count_beat_0), .C0(n201), .B0(n19846), .A0(clk_beat), 
    .F0(n18615), .F1(n18607));
  u_speaker_SLICE_1208 \u_speaker/SLICE_1208 ( .C1(note_4), .B1(note_3), 
    .A1(note_2), .C0(note_3), .B0(note_4), .A0(note_2), .F0(n18807), 
    .F1(\u_speaker/n18659 ));
  u_speaker_u_DDS_6_SLICE_1209 \u_speaker/u_DDS_6/SLICE_1209 ( 
    .C1(\u_speaker/u_DDS_6/n6875 ), .B1(\u_speaker/fcw_r_0_adj_886 ), 
    .A1(\u_speaker/u_DDS_6/n6876 ), .D0(\u_speaker/fcw_r_1 ), 
    .C0(\u_speaker/u_DDS_6/n6875 ), .B0(\u_speaker/fcw_r_0_adj_886 ), 
    .A0(\u_speaker/u_DDS_6/n6876 ), .F0(\u_speaker/u_DDS_6/n18694 ), 
    .F1(\u_speaker/u_DDS_6/n4 ));
  u_speaker_u_DDS_5_SLICE_1210 \u_speaker/u_DDS_5/SLICE_1210 ( 
    .C1(\u_speaker/u_DDS_5/fcw_r_4 ), .B1(\u_speaker/fcw_r_0_adj_886 ), 
    .A1(\u_speaker/u_DDS_5/fcw_r_3 ), .D0(\u_speaker/fcw_r_1 ), 
    .C0(\u_speaker/u_DDS_5/fcw_r_4 ), .B0(\u_speaker/fcw_r_0_adj_886 ), 
    .A0(\u_speaker/u_DDS_5/fcw_r_3 ), .F0(\u_speaker/u_DDS_5/n18674 ), 
    .F1(\u_speaker/u_DDS_5/n4_adj_837 ));
  u_speaker_u_DDS_3_SLICE_1211 \u_speaker/u_DDS_3/SLICE_1211 ( 
    .C1(\u_speaker/u_DDS_3/n6847 ), .B1(\u_speaker/fcw_r_0_adj_886 ), 
    .A1(\u_speaker/u_DDS_3/n6848 ), .D0(\u_speaker/fcw_r_1 ), 
    .C0(\u_speaker/u_DDS_3/n6847 ), .B0(\u_speaker/fcw_r_0_adj_886 ), 
    .A0(\u_speaker/u_DDS_3/n6848 ), .F0(\u_speaker/u_DDS_3/n18703 ), 
    .F1(\u_speaker/u_DDS_3/n4 ));
  u_speaker_u_DDS_12_SLICE_1212 \u_speaker/u_DDS_12/SLICE_1212 ( 
    .C1(\u_speaker/u_DDS_12/n6817 ), .B1(\u_speaker/fcw_r_0_adj_886 ), 
    .A1(\u_speaker/u_DDS_12/n6818 ), .D0(\u_speaker/fcw_r_1 ), 
    .C0(\u_speaker/u_DDS_12/n6817 ), .B0(\u_speaker/fcw_r_0_adj_886 ), 
    .A0(\u_speaker/u_DDS_12/n6818 ), .F0(\u_speaker/u_DDS_12/n18701 ), 
    .F1(\u_speaker/u_DDS_12/n4_adj_832 ));
  SLICE_1213 SLICE_1213( .C1(count_note_4), .B1(count_note_2), 
    .A1(count_note_1), .D0(count_note_4), .C0(count_note_2), .B0(count_note_1), 
    .A0(count_note_0), .F0(n16_adj_1439), .F1(n4));
  SLICE_1214 SLICE_1214( .D1(count_beat_3), .C1(n201), .B1(n19846), 
    .A1(clk_beat), .C0(n201), .B0(n19846), .A0(clk_beat), .F0(n4689), 
    .F1(n18613));
  SLICE_1215 SLICE_1215( .C1(count_note_2), .B1(count_note_1), 
    .A1(count_note_0), .C0(count_note_2), .B0(count_note_1), .A0(count_note_0), 
    .F0(n37_adj_1467), .F1(n91));
  u_buzzer_SLICE_1216 \u_buzzer/SLICE_1216 ( .C1(\u_buzzer/cycle_5 ), 
    .B1(\u_buzzer/cycle_9 ), .A1(CNT_8), .D0(CNT_4), .C0(\u_buzzer/cycle_5 ), 
    .B0(\u_buzzer/cycle_9 ), .A0(CNT_8), .F0(\u_buzzer/n17052 ), 
    .F1(\u_buzzer/n8 ));
  u_buzzer_SLICE_1217 \u_buzzer/SLICE_1217 ( .C1(\u_buzzer/cycle_3 ), 
    .B1(\u_buzzer/cycle_4 ), .A1(CNT_3), .D0(CNT_2), .C0(\u_buzzer/cycle_3 ), 
    .B0(\u_buzzer/cycle_4 ), .A0(CNT_3), .F0(\u_buzzer/n17028 ), 
    .F1(\u_buzzer/n6 ));
  u_key_1_SLICE_1218 \u_key_1/SLICE_1218 ( .D1(n18725), .C1(n19846), 
    .B1(key_flag_0), .A1(key_value_0), .C0(n19846), .B0(key_flag_0), 
    .A0(key_value_0), .F0(n18680), .F1(n18652));
  SLICE_1219 SLICE_1219( .D1(count_beat_1), .C1(n201), .B1(n19846), 
    .A1(clk_beat), .C0(n201), .B0(clk_beat), .A0(n19846), 
    .F0(clk_N_168_enable_533), .F1(n18614));
  u_speaker_SLICE_1220 \u_speaker/SLICE_1220 ( .C1(\u_speaker/rom1_0 ), 
    .B1(key_value_12), .A1(key_value_11), .C0(rom2_0), .B0(key_value_12), 
    .A0(key_value_11), .F0(\u_speaker/n10946 ), .F1(\u_speaker/n10879 ));
  u_speaker_SLICE_1221 \u_speaker/SLICE_1221 ( .B1(\u_speaker/rom1_1 ), 
    .A1(\u_speaker/rom1_0 ), .B0(\u_speaker/rom1_1 ), .A0(\u_speaker/rom1_0 ), 
    .F0(n5_adj_1445), .F1(n18814));
  u_speaker_SLICE_1222 \u_speaker/SLICE_1222 ( .D1(\u_speaker/rom1_0 ), 
    .C1(\u_speaker/rom1_1 ), .B1(\u_speaker/rom1_2 ), .A1(\u_speaker/rom1_3 ), 
    .D0(\u_speaker/rom1_0 ), .C0(key_flag_11), .B0(\u_speaker/rom1_1 ), 
    .A0(key_flag_12), .F0(\u_speaker/n18966 ), .F1(\u_speaker/n16004 ));
  u_speaker_SLICE_1223 \u_speaker/SLICE_1223 ( .B1(\u_speaker/en_0 ), 
    .A1(n19846), .C0(n19846), .B0(\u_speaker/en_0 ), .A0(\u_speaker/en_1 ), 
    .F0(\u_speaker/rom2_4__N_297 ), .F1(\u_speaker/rom1_4__N_289 ));
  u_speaker_SLICE_1224 \u_speaker/SLICE_1224 ( .C1(note_2), .B1(note_1), 
    .A1(note_3), .D0(n19846), .C0(note_3), .B0(note_4), .A0(note_2), 
    .F0(n17110), .F1(n18737));
  SLICE_1225 SLICE_1225( .D1(n18721), .C1(n18725), .B1(n18722), .A1(n18736), 
    .D0(n18736), .C0(n18725), .B0(key_flag_2), .A0(key_value_2), 
    .F0(\u_speaker/n18666 ), .F1(\u_buzzer/n18648 ));
  SLICE_1226 SLICE_1226( .B1(note_1), .A1(note_0), .B0(note_0), .A0(note_1), 
    .F0(\u_speaker/n18732 ), .F1(n18734));
  SLICE_1227 SLICE_1227( .D1(n18754), .C1(n18735), .B1(n18815), .A1(n18720), 
    .D0(n18754), .C0(n18720), .B0(\u_speaker/n8 ), .A0(n18771), 
    .F0(\u_speaker/n4 ), .F1(n18651));
  u_speaker_u_DDS_1_SLICE_1228 \u_speaker/u_DDS_1/SLICE_1228 ( .B1(yinjie_0), 
    .A1(yinjie_1), .C0(yinjie_0), .B0(yinjie_2), .A0(yinjie_1), 
    .F0(\u_speaker/u_DDS_1/n8 ), .F1(\u_speaker/u_DDS_1/n9471 ));
  SLICE_1229 SLICE_1229( .B1(key_pa_c), .A1(rst_n_c), .B0(key_pa_c), 
    .A0(rst_n_c), .F0(\u_speaker/pwm_out2_N_125 ), 
    .F1(\u_buzzer/pwm_out1_N_122 ));
  SLICE_1230 SLICE_1230( .D1(count_beat_2), .C1(n201), .B1(n19846), 
    .A1(clk_beat), .B0(n19846), .A0(clk_beat), .F0(n18760), .F1(n8_adj_1478));
  SLICE_1231 SLICE_1231( .D1(count_note_4), .C1(count_note_3), 
    .B1(count_note_2), .A1(count_note_1), .B0(count_note_2), .A0(count_note_1), 
    .F0(n18773), .F1(n13027));
  u_buzzer_SLICE_1232 \u_buzzer/SLICE_1232 ( .C1(\u_buzzer/n17413 ), 
    .B1(\u_buzzer/cycle_13 ), .A1(CNT_12), .B0(\u_buzzer/cycle_13 ), 
    .A0(CNT_12), .F0(\u_buzzer/n18744 ), .F1(\u_buzzer/n17071 ));
  u_buzzer_SLICE_1233 \u_buzzer/SLICE_1233 ( .D1(n18754), .C1(n18708), 
    .B1(n18755), .A1(n247), .D0(n18684), .C0(n18736), .B0(n18708), .A0(n18755), 
    .F0(\u_buzzer/n4 ), .F1(n331));
  u_buzzer_SLICE_1234 \u_buzzer/SLICE_1234 ( .C1(\u_buzzer/n17411 ), 
    .B1(\u_buzzer/cycle_17 ), .A1(CNT_16), .B0(\u_buzzer/cycle_17 ), 
    .A0(CNT_16), .F0(\u_buzzer/n18738 ), .F1(\u_buzzer/n17091 ));
  u_buzzer_SLICE_1235 \u_buzzer/SLICE_1235 ( .B1(note_1), .A1(note_0), 
    .B0(note_1), .A0(note_0), .F0(n18772), .F1(n18803));
  SLICE_1236 SLICE_1236( .D1(n18754), .C1(n18735), .B1(key_flag_6), 
    .A1(key_value_6), .D0(n18754), .C0(n18735), .B0(n18722), .A0(n18736), 
    .F0(n262), .F1(n18655));
  u_key_5_SLICE_1237 \u_key_5/SLICE_1237 ( .B1(\u_key_5/n10219 ), 
    .A1(\u_key_5/delay_cnt_0 ), .D0(\u_key_5/delay_cnt_0 ), 
    .C0(\u_key_5/n10219 ), .B0(key_c_4), .A0(\u_key_5/key_reg ), 
    .F0(\u_key_5/clk_N_168_enable_320 ), .F1(\u_key_5/clk_N_168_enable_325 ));
  SLICE_1238 SLICE_1238( .D1(key_flag_4), .C1(key_value_4), .B1(key_value_3), 
    .A1(key_flag_3), .D0(n5_adj_1447), .C0(n6_adj_1443), .B0(key_value_4), 
    .A0(key_flag_4), .F0(n891), .F1(n18696));
  u_key_11_SLICE_1239 \u_key_11/SLICE_1239 ( .D1(n18709), .C1(n321), 
    .B1(n18768), .A1(n18771), .D0(n18709), .C0(n312), .B0(n9654), .A0(n18771), 
    .F0(n417), .F1(n405));
  u_key_2_SLICE_1240 \u_key_2/SLICE_1240 ( .B1(\u_key_2/n10228 ), 
    .A1(\u_key_2/delay_cnt_0 ), .D0(\u_key_2/delay_cnt_0 ), 
    .C0(\u_key_2/n10228 ), .B0(key_c_1), .A0(\u_key_2/key_reg ), 
    .F0(\u_key_2/clk_N_168_enable_414 ), .F1(\u_key_2/clk_N_168_enable_419 ));
  u_key_1_SLICE_1241 \u_key_1/SLICE_1241 ( .B1(\u_key_1/n10222 ), 
    .A1(\u_key_1/delay_cnt_0 ), .D0(\u_key_1/delay_cnt_0 ), 
    .C0(\u_key_1/n10222 ), .B0(key_c_0), .A0(\u_key_1/key_reg ), 
    .F0(\u_key_1/clk_N_168_enable_445 ), .F1(\u_key_1/clk_N_168_enable_450 ));
  SLICE_1242 SLICE_1242( .D1(count_note_2), .C1(count_note_3), 
    .B1(count_note_6), .A1(count_note_5), .B0(count_note_6), .A0(count_note_5), 
    .F0(n18730), .F1(n16869));
  u_key_3_SLICE_1243 \u_key_3/SLICE_1243 ( .B1(\u_key_3/n10234 ), 
    .A1(\u_key_3/delay_cnt_0 ), .D0(\u_key_3/delay_cnt_0 ), 
    .C0(\u_key_3/n10234 ), .B0(key_c_2), .A0(\u_key_3/key_reg ), 
    .F0(\u_key_3/clk_N_168_enable_382 ), .F1(\u_key_3/clk_N_168_enable_387 ));
  u_key_4_SLICE_1244 \u_key_4/SLICE_1244 ( .B1(\u_key_4/n10225 ), 
    .A1(\u_key_4/delay_cnt_0 ), .D0(\u_key_4/delay_cnt_0 ), 
    .C0(\u_key_4/n10225 ), .B0(key_c_3), .A0(\u_key_4/key_reg ), 
    .F0(\u_key_4/clk_N_168_enable_351 ), .F1(\u_key_4/clk_N_168_enable_356 ));
  u_speaker_SLICE_1245 \u_speaker/SLICE_1245 ( .C1(rom2_1), 
    .B1(\u_speaker/count3_23 ), .A1(\u_speaker/count1_23 ), .C0(rom2_1), 
    .B0(\u_speaker/count3_24 ), .A0(\u_speaker/count1_24 ), 
    .F0(\u_speaker/n3372 ), .F1(\u_speaker/n3373 ));
  u_speaker_SLICE_1246 \u_speaker/SLICE_1246 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count6_19 ), .A1(\u_speaker/count2_19 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count6_23 ), 
    .A0(\u_speaker/count2_23 ), .F0(\u_speaker/n3402 ), .F1(\u_speaker/n3406 ));
  u_speaker_SLICE_1247 \u_speaker/SLICE_1247 ( .C1(rom2_1), 
    .B1(\u_speaker/count3_19 ), .A1(\u_speaker/count1_19 ), .C0(rom2_1), 
    .B0(\u_speaker/count3_20 ), .A0(\u_speaker/count1_20 ), 
    .F0(\u_speaker/n3376 ), .F1(\u_speaker/n3377 ));
  u_speaker_SLICE_1248 \u_speaker/SLICE_1248 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count6_18 ), .A1(\u_speaker/count2_18 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count6_24 ), 
    .A0(\u_speaker/count2_24 ), .F0(\u_speaker/n3401 ), .F1(\u_speaker/n3407 ));
  u_speaker_SLICE_1249 \u_speaker/SLICE_1249 ( .C1(rom2_0), 
    .B1(\u_speaker/count5_16 ), .A1(\u_speaker/count4_16 ), .C0(rom2_0), 
    .B0(\u_speaker/count5_14 ), .A0(\u_speaker/count4_14 ), 
    .F0(\u_speaker/n3440 ), .F1(\u_speaker/n3438 ));
  SLICE_1250 SLICE_1250( .D1(key_value_11), .C1(key_flag_11), .B1(key_flag_10), 
    .A1(key_value_10), .C0(\u_speaker/rom1_0 ), .B0(key_flag_10), 
    .A0(key_flag_9), .F0(\u_speaker/n18858 ), .F1(n16909));
  u_speaker_SLICE_1251 \u_speaker/SLICE_1251 ( .C1(\u_speaker/rom1_0 ), 
    .B1(key_flag_8), .A1(key_flag_7), .C0(\u_speaker/rom1_0 ), .B0(key_flag_2), 
    .A0(key_flag_1), .F0(\u_speaker/n18857 ), .F1(\u_speaker/n163 ));
  u_speaker_SLICE_1252 \u_speaker/SLICE_1252 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count6_17 ), .A1(\u_speaker/count2_17 ), .B0(rom2_3), 
    .A0(\u_speaker/rom2_2 ), .F0(\u_speaker/n18762 ), .F1(\u_speaker/n3408 ));
  u_speaker_SLICE_1253 \u_speaker/SLICE_1253 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count6_16 ), .A1(\u_speaker/count2_16 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count6_20 ), 
    .A0(\u_speaker/count2_20 ), .F0(\u_speaker/n3405 ), .F1(\u_speaker/n3409 ));
  u_speaker_SLICE_1254 \u_speaker/SLICE_1254 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count6_15 ), .A1(\u_speaker/count2_15 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count7_21 ), 
    .A0(\u_speaker/count11_21 ), .F0(\u_speaker/n3462 ), 
    .F1(\u_speaker/n3410 ));
  u_speaker_SLICE_1255 \u_speaker/SLICE_1255 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count7_24 ), .A1(\u_speaker/count11_24 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count7_15 ), 
    .A0(\u_speaker/count11_15 ), .F0(\u_speaker/n3468 ), 
    .F1(\u_speaker/n3459 ));
  u_speaker_SLICE_1256 \u_speaker/SLICE_1256 ( .C1(rom2_0), 
    .B1(\u_speaker/count9_24 ), .A1(\u_speaker/count8_24 ), .C0(rom2_0), 
    .B0(\u_speaker/count5_15 ), .A0(\u_speaker/count4_15 ), 
    .F0(\u_speaker/n3439 ), .F1(\u_speaker/n3488 ));
  u_speaker_SLICE_1257 \u_speaker/SLICE_1257 ( .C1(rom2_0), 
    .B1(\u_speaker/count9_23 ), .A1(\u_speaker/count8_23 ), .C0(rom2_0), 
    .B0(\u_speaker/count9_15 ), .A0(\u_speaker/count8_15 ), 
    .F0(\u_speaker/n3497 ), .F1(\u_speaker/n3489 ));
  u_speaker_SLICE_1258 \u_speaker/SLICE_1258 ( .C1(\u_speaker/n3072 ), 
    .B1(\u_speaker/count10_15 ), .A1(\u_speaker/count9_15 ), 
    .C0(\u_speaker/n3072 ), .B0(\u_speaker/count10_14 ), 
    .A0(\u_speaker/count9_14 ), .F0(\u_speaker/n2635 ), .F1(\u_speaker/n2634 ));
  u_speaker_SLICE_1259 \u_speaker/SLICE_1259 ( .C1(\u_speaker/n3070 ), 
    .B1(\u_speaker/count8_15 ), .A1(\u_speaker/count7_15 ), 
    .C0(\u_speaker/n3070 ), .B0(\u_speaker/count8_14 ), 
    .A0(\u_speaker/count7_14 ), .F0(\u_speaker/n2606 ), .F1(\u_speaker/n2605 ));
  u_speaker_SLICE_1260 \u_speaker/SLICE_1260 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count7_23 ), .A1(\u_speaker/count11_23 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count7_14 ), 
    .A0(\u_speaker/count11_14 ), .F0(\u_speaker/n3469 ), 
    .F1(\u_speaker/n3460 ));
  u_speaker_SLICE_1261 \u_speaker/SLICE_1261 ( .C1(rom2_0), 
    .B1(\u_speaker/count9_22 ), .A1(\u_speaker/count8_22 ), .C0(rom2_0), 
    .B0(\u_speaker/count9_14 ), .A0(\u_speaker/count8_14 ), 
    .F0(\u_speaker/n3498 ), .F1(\u_speaker/n3490 ));
  u_speaker_SLICE_1262 \u_speaker/SLICE_1262 ( .C1(rom2_0), 
    .B1(\u_speaker/count5_17 ), .A1(\u_speaker/count4_17 ), .C0(rom2_0), 
    .B0(\u_speaker/count5_24 ), .A0(\u_speaker/count4_24 ), 
    .F0(\u_speaker/n3430 ), .F1(\u_speaker/n3437 ));
  u_speaker_SLICE_1263 \u_speaker/SLICE_1263 ( .C1(rom2_0), 
    .B1(\u_speaker/count5_21 ), .A1(\u_speaker/count4_21 ), .C0(rom2_0), 
    .B0(\u_speaker/count5_23 ), .A0(\u_speaker/count4_23 ), 
    .F0(\u_speaker/n3431 ), .F1(\u_speaker/n3433 ));
  u_speaker_SLICE_1264 \u_speaker/SLICE_1264 ( .C1(\u_speaker/n3072 ), 
    .B1(\u_speaker/count10_16 ), .A1(\u_speaker/count9_16 ), 
    .C0(\u_speaker/n3072 ), .B0(\u_speaker/count10_24 ), 
    .A0(\u_speaker/count9_24 ), .F0(\u_speaker/n2625 ), .F1(\u_speaker/n2633 ));
  u_speaker_SLICE_1265 \u_speaker/SLICE_1265 ( .C1(rom2_0), 
    .B1(\u_speaker/count5_18 ), .A1(\u_speaker/count4_18 ), .C0(rom2_0), 
    .B0(\u_speaker/count5_22 ), .A0(\u_speaker/count4_22 ), 
    .F0(\u_speaker/n3432 ), .F1(\u_speaker/n3436 ));
  u_speaker_SLICE_1266 \u_speaker/SLICE_1266 ( .C1(\u_speaker/n3070 ), 
    .B1(\u_speaker/count8_16 ), .A1(\u_speaker/count7_16 ), 
    .C0(\u_speaker/n3070 ), .B0(\u_speaker/count8_24 ), 
    .A0(\u_speaker/count7_24 ), .F0(\u_speaker/n2596 ), .F1(\u_speaker/n2604 ));
  u_speaker_SLICE_1267 \u_speaker/SLICE_1267 ( .C1(\u_speaker/n3072 ), 
    .B1(\u_speaker/count10_17 ), .A1(\u_speaker/count9_17 ), 
    .C0(\u_speaker/n3072 ), .B0(\u_speaker/count10_23 ), 
    .A0(\u_speaker/count9_23 ), .F0(\u_speaker/n2626 ), .F1(\u_speaker/n2632 ));
  u_speaker_SLICE_1268 \u_speaker/SLICE_1268 ( .C1(\u_speaker/n3070 ), 
    .B1(\u_speaker/count8_17 ), .A1(\u_speaker/count7_17 ), 
    .C0(\u_speaker/n3070 ), .B0(\u_speaker/count8_23 ), 
    .A0(\u_speaker/count7_23 ), .F0(\u_speaker/n2597 ), .F1(\u_speaker/n2603 ));
  u_speaker_SLICE_1269 \u_speaker/SLICE_1269 ( .C1(\u_speaker/n3072 ), 
    .B1(\u_speaker/count10_18 ), .A1(\u_speaker/count9_18 ), 
    .C0(\u_speaker/n3072 ), .B0(\u_speaker/count10_22 ), 
    .A0(\u_speaker/count9_22 ), .F0(\u_speaker/n2627 ), .F1(\u_speaker/n2631 ));
  u_speaker_SLICE_1270 \u_speaker/SLICE_1270 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count7_22 ), .A1(\u_speaker/count11_22 ), 
    .C0(\u_speaker/n3070 ), .B0(\u_speaker/count8_22 ), 
    .A0(\u_speaker/count7_22 ), .F0(\u_speaker/n2598 ), .F1(\u_speaker/n3461 ));
  u_speaker_SLICE_1271 \u_speaker/SLICE_1271 ( .C1(rom2_0), 
    .B1(\u_speaker/count9_21 ), .A1(\u_speaker/count8_21 ), 
    .C0(\u_speaker/n3072 ), .B0(\u_speaker/count10_21 ), 
    .A0(\u_speaker/count9_21 ), .F0(\u_speaker/n2628 ), .F1(\u_speaker/n3491 ));
  u_speaker_SLICE_1272 \u_speaker/SLICE_1272 ( .C1(\u_speaker/n3070 ), 
    .B1(\u_speaker/count8_18 ), .A1(\u_speaker/count7_18 ), 
    .C0(\u_speaker/n3070 ), .B0(\u_speaker/count8_21 ), 
    .A0(\u_speaker/count7_21 ), .F0(\u_speaker/n2599 ), .F1(\u_speaker/n2602 ));
  u_speaker_SLICE_1273 \u_speaker/SLICE_1273 ( .C1(rom2_0), 
    .B1(\u_speaker/count9_20 ), .A1(\u_speaker/count8_20 ), 
    .C0(\u_speaker/n3072 ), .B0(\u_speaker/count10_20 ), 
    .A0(\u_speaker/count9_20 ), .F0(\u_speaker/n2629 ), .F1(\u_speaker/n3492 ));
  u_speaker_SLICE_1274 \u_speaker/SLICE_1274 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count7_20 ), .A1(\u_speaker/count11_20 ), 
    .C0(\u_speaker/n3070 ), .B0(\u_speaker/count8_20 ), 
    .A0(\u_speaker/count7_20 ), .F0(\u_speaker/n2600 ), .F1(\u_speaker/n3463 ));
  u_speaker_SLICE_1275 \u_speaker/SLICE_1275 ( .C1(rom2_0), 
    .B1(\u_speaker/count9_19 ), .A1(\u_speaker/count8_19 ), 
    .C0(\u_speaker/n3072 ), .B0(\u_speaker/count10_19 ), 
    .A0(\u_speaker/count9_19 ), .F0(\u_speaker/n2630 ), .F1(\u_speaker/n3493 ));
  u_speaker_SLICE_1276 \u_speaker/SLICE_1276 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count7_19 ), .A1(\u_speaker/count11_19 ), 
    .C0(\u_speaker/n3070 ), .B0(\u_speaker/count8_19 ), 
    .A0(\u_speaker/count7_19 ), .F0(\u_speaker/n2601 ), .F1(\u_speaker/n3464 ));
  u_speaker_SLICE_1277 \u_speaker/SLICE_1277 ( .C1(rom2_1), 
    .B1(\u_speaker/count3_18 ), .A1(\u_speaker/count1_18 ), .C0(rom2_1), 
    .B0(\u_speaker/count3_21 ), .A0(\u_speaker/count1_21 ), 
    .F0(\u_speaker/n3375 ), .F1(\u_speaker/n3378 ));
  u_speaker_SLICE_1278 \u_speaker/SLICE_1278 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count6_22 ), .A1(\u_speaker/count2_22 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count7_16 ), 
    .A0(\u_speaker/count11_16 ), .F0(\u_speaker/n3467 ), 
    .F1(\u_speaker/n3403 ));
  u_speaker_SLICE_1279 \u_speaker/SLICE_1279 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count6_14 ), .A1(\u_speaker/count2_14 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count6_21 ), 
    .A0(\u_speaker/count2_21 ), .F0(\u_speaker/n3404 ), .F1(\u_speaker/n3411 ));
  u_speaker_SLICE_1280 \u_speaker/SLICE_1280 ( .C1(rom2_0), 
    .B1(\u_speaker/count9_18 ), .A1(\u_speaker/count8_18 ), .C0(rom2_0), 
    .B0(\u_speaker/count5_20 ), .A0(\u_speaker/count4_20 ), 
    .F0(\u_speaker/n3434 ), .F1(\u_speaker/n3494 ));
  u_speaker_SLICE_1281 \u_speaker/SLICE_1281 ( .C1(rom2_0), 
    .B1(\u_speaker/count9_17 ), .A1(\u_speaker/count8_17 ), .C0(rom2_0), 
    .B0(\u_speaker/count9_16 ), .A0(\u_speaker/count8_16 ), 
    .F0(\u_speaker/n3496 ), .F1(\u_speaker/n3495 ));
  u_speaker_SLICE_1282 \u_speaker/SLICE_1282 ( .C1(\u_speaker/rom2_2 ), 
    .B1(\u_speaker/count7_18 ), .A1(\u_speaker/count11_18 ), 
    .C0(\u_speaker/rom2_2 ), .B0(\u_speaker/count7_17 ), 
    .A0(\u_speaker/count11_17 ), .F0(\u_speaker/n3466 ), 
    .F1(\u_speaker/n3465 ));
  u_speaker_SLICE_1283 \u_speaker/SLICE_1283 ( .C1(rom2_1), 
    .B1(\u_speaker/count3_17 ), .A1(\u_speaker/count1_17 ), .C0(rom2_1), 
    .B0(\u_speaker/count3_14 ), .A0(\u_speaker/count1_14 ), 
    .F0(\u_speaker/n3382 ), .F1(\u_speaker/n3379 ));
  SLICE_1284 SLICE_1284( .D1(n9292), .C1(n18724), .B1(n18721), .A1(n5), 
    .D0(\u_speaker/n18663 ), .C0(\u_speaker/n16929 ), .B0(n9292), .A0(n18713), 
    .F0(\u_speaker/n16930 ), .F1(n18644));
  u_speaker_SLICE_1285 \u_speaker/SLICE_1285 ( .C1(rom2_1), 
    .B1(\u_speaker/count3_16 ), .A1(\u_speaker/count1_16 ), .C0(rom2_1), 
    .B0(\u_speaker/count3_22 ), .A0(\u_speaker/count1_22 ), 
    .F0(\u_speaker/n3374 ), .F1(\u_speaker/n3380 ));
  SLICE_1286 SLICE_1286( .C1(count_note_6), .B1(n18844), .A1(n17204), 
    .C0(count_note_6), .B0(n109_adj_1509), .A0(n17148), .F0(n17209), 
    .F1(n17121));
  SLICE_1287 SLICE_1287( .B1(count_note_1), .A1(count_note_0), 
    .B0(count_note_1), .A0(count_note_2), .F0(n18779), .F1(n18781));
  u_buzzer_SLICE_1288 \u_buzzer/SLICE_1288 ( .D1(CNT_12), .C1(CNT_8), 
    .B1(CNT_7), .A1(CNT_13), .D0(CNT_13), .C0(\u_buzzer/cycle_14 ), 
    .B0(\u_buzzer/cycle_15 ), .A0(CNT_14), .F0(\u_buzzer/n17088 ), 
    .F1(\u_buzzer/n29 ));
  u_buzzer_SLICE_1289 \u_buzzer/SLICE_1289 ( .D1(n10160), .C1(n18755), 
    .B1(n18768), .A1(n18725), .D0(n18616), .C0(n18721), .B0(n18707), 
    .A0(n18725), .F0(\u_buzzer/clk_N_168_enable_15 ), .F1(n344));
  SLICE_1290 SLICE_1290( .B1(key_flag_7), .A1(key_value_7), .C0(key_value_7), 
    .B0(key_value_8), .A0(key_value_1), .F0(\u_buzzer/n20_adj_821 ), 
    .F1(n18756));
  u_buzzer_SLICE_1291 \u_buzzer/SLICE_1291 ( .D1(n18736), .C1(n19846), 
    .B1(n18682), .A1(n18722), .D0(n18610), .C0(n16888), .B0(n18682), 
    .A0(n18707), .F0(\u_buzzer/clk_N_168_enable_514 ), .F1(\u_buzzer/n18617 ));
  u_key_14_SLICE_1292 \u_key_14/SLICE_1292 ( .B1(\u_key_14/delay_cnt_29 ), 
    .A1(\u_key_14/delay_cnt_8 ), .D0(\u_key_14/delay_cnt_6 ), 
    .C0(\u_key_14/delay_cnt_21 ), .B0(\u_key_14/delay_cnt_25 ), 
    .A0(\u_key_14/delay_cnt_19 ), .F0(\u_key_14/n52 ), 
    .F1(\u_key_14/n39_adj_766 ));
  u_key_14_SLICE_1293 \u_key_14/SLICE_1293 ( .D1(\u_key_14/delay_cnt_10 ), 
    .C1(\u_key_14/delay_cnt_26 ), .B1(\u_key_14/delay_cnt_28 ), 
    .A1(\u_key_14/delay_cnt_22 ), .D0(\u_key_14/delay_cnt_2 ), 
    .C0(\u_key_14/delay_cnt_18 ), .B0(\u_key_14/delay_cnt_1 ), 
    .A0(\u_key_14/delay_cnt_17 ), .F0(\u_key_14/n50 ), .F1(\u_key_14/n49 ));
  u_key_4_SLICE_1294 \u_key_4/SLICE_1294 ( .B1(\u_key_4/delay_cnt_29 ), 
    .A1(\u_key_4/delay_cnt_8 ), .D0(\u_key_4/delay_cnt_6 ), 
    .C0(\u_key_4/delay_cnt_21 ), .B0(\u_key_4/delay_cnt_25 ), 
    .A0(\u_key_4/delay_cnt_19 ), .F0(\u_key_4/n52 ), 
    .F1(\u_key_4/n39_adj_768 ));
  u_key_4_SLICE_1295 \u_key_4/SLICE_1295 ( .D1(\u_key_4/delay_cnt_10 ), 
    .C1(\u_key_4/delay_cnt_26 ), .B1(\u_key_4/delay_cnt_28 ), 
    .A1(\u_key_4/delay_cnt_22 ), .D0(\u_key_4/delay_cnt_2 ), 
    .C0(\u_key_4/delay_cnt_18 ), .B0(\u_key_4/delay_cnt_1 ), 
    .A0(\u_key_4/delay_cnt_17 ), .F0(\u_key_4/n50 ), .F1(\u_key_4/n49 ));
  u_key_15_SLICE_1296 \u_key_15/SLICE_1296 ( .B1(\u_key_15/delay_cnt_29 ), 
    .A1(\u_key_15/delay_cnt_8 ), .D0(\u_key_15/delay_cnt_6 ), 
    .C0(\u_key_15/delay_cnt_21 ), .B0(\u_key_15/delay_cnt_25 ), 
    .A0(\u_key_15/delay_cnt_19 ), .F0(\u_key_15/n52 ), 
    .F1(\u_key_15/n39_adj_770 ));
  u_key_3_SLICE_1297 \u_key_3/SLICE_1297 ( .B1(\u_key_3/delay_cnt_29 ), 
    .A1(\u_key_3/delay_cnt_8 ), .D0(\u_key_3/delay_cnt_6 ), 
    .C0(\u_key_3/delay_cnt_21 ), .B0(\u_key_3/delay_cnt_25 ), 
    .A0(\u_key_3/delay_cnt_19 ), .F0(\u_key_3/n52 ), 
    .F1(\u_key_3/n39_adj_772 ));
  u_key_3_SLICE_1298 \u_key_3/SLICE_1298 ( .D1(\u_key_3/delay_cnt_10 ), 
    .C1(\u_key_3/delay_cnt_26 ), .B1(\u_key_3/delay_cnt_28 ), 
    .A1(\u_key_3/delay_cnt_22 ), .D0(\u_key_3/delay_cnt_2 ), 
    .C0(\u_key_3/delay_cnt_18 ), .B0(\u_key_3/delay_cnt_1 ), 
    .A0(\u_key_3/delay_cnt_17 ), .F0(\u_key_3/n50 ), .F1(\u_key_3/n49 ));
  u_key_6_SLICE_1299 \u_key_6/SLICE_1299 ( .B1(\u_key_6/delay_cnt_29 ), 
    .A1(\u_key_6/delay_cnt_8 ), .D0(\u_key_6/delay_cnt_6 ), 
    .C0(\u_key_6/delay_cnt_21 ), .B0(\u_key_6/delay_cnt_25 ), 
    .A0(\u_key_6/delay_cnt_19 ), .F0(\u_key_6/n52 ), 
    .F1(\u_key_6/n39_adj_774 ));
  u_key_6_SLICE_1300 \u_key_6/SLICE_1300 ( .D1(\u_key_6/delay_cnt_10 ), 
    .C1(\u_key_6/delay_cnt_26 ), .B1(\u_key_6/delay_cnt_28 ), 
    .A1(\u_key_6/delay_cnt_22 ), .D0(\u_key_6/delay_cnt_2 ), 
    .C0(\u_key_6/delay_cnt_18 ), .B0(\u_key_6/delay_cnt_1 ), 
    .A0(\u_key_6/delay_cnt_17 ), .F0(\u_key_6/n50 ), .F1(\u_key_6/n49 ));
  u_key_7_SLICE_1301 \u_key_7/SLICE_1301 ( .B1(\u_key_7/delay_cnt_29 ), 
    .A1(\u_key_7/delay_cnt_8 ), .D0(\u_key_7/delay_cnt_6 ), 
    .C0(\u_key_7/delay_cnt_21 ), .B0(\u_key_7/delay_cnt_25 ), 
    .A0(\u_key_7/delay_cnt_19 ), .F0(\u_key_7/n52 ), 
    .F1(\u_key_7/n39_adj_776 ));
  u_key_7_SLICE_1302 \u_key_7/SLICE_1302 ( .D1(\u_key_7/delay_cnt_10 ), 
    .C1(\u_key_7/delay_cnt_26 ), .B1(\u_key_7/delay_cnt_28 ), 
    .A1(\u_key_7/delay_cnt_22 ), .D0(\u_key_7/delay_cnt_2 ), 
    .C0(\u_key_7/delay_cnt_18 ), .B0(\u_key_7/delay_cnt_1 ), 
    .A0(\u_key_7/delay_cnt_17 ), .F0(\u_key_7/n50 ), .F1(\u_key_7/n49 ));
  u_key_1_SLICE_1303 \u_key_1/SLICE_1303 ( .B1(\u_key_1/delay_cnt_29 ), 
    .A1(\u_key_1/delay_cnt_8 ), .D0(\u_key_1/delay_cnt_6 ), 
    .C0(\u_key_1/delay_cnt_21 ), .B0(\u_key_1/delay_cnt_25 ), 
    .A0(\u_key_1/delay_cnt_19 ), .F0(\u_key_1/n52 ), 
    .F1(\u_key_1/n39_adj_778 ));
  u_key_1_SLICE_1304 \u_key_1/SLICE_1304 ( .D1(\u_key_1/delay_cnt_10 ), 
    .C1(\u_key_1/delay_cnt_26 ), .B1(\u_key_1/delay_cnt_28 ), 
    .A1(\u_key_1/delay_cnt_22 ), .D0(\u_key_1/delay_cnt_2 ), 
    .C0(\u_key_1/delay_cnt_18 ), .B0(\u_key_1/delay_cnt_1 ), 
    .A0(\u_key_1/delay_cnt_17 ), .F0(\u_key_1/n50 ), .F1(\u_key_1/n49 ));
  u_key_9_SLICE_1305 \u_key_9/SLICE_1305 ( .B1(\u_key_9/delay_cnt_29 ), 
    .A1(\u_key_9/delay_cnt_8 ), .D0(\u_key_9/delay_cnt_6 ), 
    .C0(\u_key_9/delay_cnt_21 ), .B0(\u_key_9/delay_cnt_25 ), 
    .A0(\u_key_9/delay_cnt_19 ), .F0(\u_key_9/n52 ), 
    .F1(\u_key_9/n39_adj_782 ));
  u_key_9_SLICE_1306 \u_key_9/SLICE_1306 ( .D1(\u_key_9/delay_cnt_10 ), 
    .C1(\u_key_9/delay_cnt_26 ), .B1(\u_key_9/delay_cnt_28 ), 
    .A1(\u_key_9/delay_cnt_22 ), .D0(\u_key_9/delay_cnt_2 ), 
    .C0(\u_key_9/delay_cnt_18 ), .B0(\u_key_9/delay_cnt_1 ), 
    .A0(\u_key_9/delay_cnt_17 ), .F0(\u_key_9/n50 ), .F1(\u_key_9/n49 ));
  u_key_13_SLICE_1307 \u_key_13/SLICE_1307 ( .B1(\u_key_13/delay_cnt_29 ), 
    .A1(\u_key_13/delay_cnt_8 ), .D0(\u_key_13/delay_cnt_6 ), 
    .C0(\u_key_13/delay_cnt_21 ), .B0(\u_key_13/delay_cnt_25 ), 
    .A0(\u_key_13/delay_cnt_19 ), .F0(\u_key_13/n52 ), 
    .F1(\u_key_13/n39_adj_784 ));
  u_key_13_SLICE_1308 \u_key_13/SLICE_1308 ( .D1(\u_key_13/delay_cnt_10 ), 
    .C1(\u_key_13/delay_cnt_26 ), .B1(\u_key_13/delay_cnt_28 ), 
    .A1(\u_key_13/delay_cnt_22 ), .D0(\u_key_13/delay_cnt_2 ), 
    .C0(\u_key_13/delay_cnt_18 ), .B0(\u_key_13/delay_cnt_1 ), 
    .A0(\u_key_13/delay_cnt_17 ), .F0(\u_key_13/n50 ), .F1(\u_key_13/n49 ));
  u_key_2_SLICE_1309 \u_key_2/SLICE_1309 ( .B1(\u_key_2/delay_cnt_29 ), 
    .A1(\u_key_2/delay_cnt_8 ), .D0(\u_key_2/delay_cnt_6 ), 
    .C0(\u_key_2/delay_cnt_21 ), .B0(\u_key_2/delay_cnt_25 ), 
    .A0(\u_key_2/delay_cnt_19 ), .F0(\u_key_2/n52 ), 
    .F1(\u_key_2/n39_adj_786 ));
  u_key_2_SLICE_1310 \u_key_2/SLICE_1310 ( .D1(\u_key_2/delay_cnt_10 ), 
    .C1(\u_key_2/delay_cnt_26 ), .B1(\u_key_2/delay_cnt_28 ), 
    .A1(\u_key_2/delay_cnt_22 ), .D0(\u_key_2/delay_cnt_2 ), 
    .C0(\u_key_2/delay_cnt_18 ), .B0(\u_key_2/delay_cnt_1 ), 
    .A0(\u_key_2/delay_cnt_17 ), .F0(\u_key_2/n50 ), .F1(\u_key_2/n49 ));
  u_key_12_SLICE_1311 \u_key_12/SLICE_1311 ( .B1(\u_key_12/delay_cnt_29 ), 
    .A1(\u_key_12/delay_cnt_8 ), .D0(\u_key_12/delay_cnt_6 ), 
    .C0(\u_key_12/delay_cnt_21 ), .B0(\u_key_12/delay_cnt_25 ), 
    .A0(\u_key_12/delay_cnt_19 ), .F0(\u_key_12/n52 ), 
    .F1(\u_key_12/n39_adj_788 ));
  u_key_12_SLICE_1312 \u_key_12/SLICE_1312 ( .D1(\u_key_12/delay_cnt_10 ), 
    .C1(\u_key_12/delay_cnt_26 ), .B1(\u_key_12/delay_cnt_28 ), 
    .A1(\u_key_12/delay_cnt_22 ), .D0(\u_key_12/delay_cnt_2 ), 
    .C0(\u_key_12/delay_cnt_18 ), .B0(\u_key_12/delay_cnt_1 ), 
    .A0(\u_key_12/delay_cnt_17 ), .F0(\u_key_12/n50 ), .F1(\u_key_12/n49 ));
  u_key_11_SLICE_1313 \u_key_11/SLICE_1313 ( .B1(\u_key_11/delay_cnt_29 ), 
    .A1(\u_key_11/delay_cnt_8 ), .D0(\u_key_11/delay_cnt_6 ), 
    .C0(\u_key_11/delay_cnt_21 ), .B0(\u_key_11/delay_cnt_25 ), 
    .A0(\u_key_11/delay_cnt_19 ), .F0(\u_key_11/n52 ), 
    .F1(\u_key_11/n39_adj_790 ));
  u_key_11_SLICE_1314 \u_key_11/SLICE_1314 ( .D1(\u_key_11/delay_cnt_10 ), 
    .C1(\u_key_11/delay_cnt_26 ), .B1(\u_key_11/delay_cnt_28 ), 
    .A1(\u_key_11/delay_cnt_22 ), .D0(\u_key_11/delay_cnt_2 ), 
    .C0(\u_key_11/delay_cnt_18 ), .B0(\u_key_11/delay_cnt_1 ), 
    .A0(\u_key_11/delay_cnt_17 ), .F0(\u_key_11/n50 ), .F1(\u_key_11/n49 ));
  u_key_10_SLICE_1315 \u_key_10/SLICE_1315 ( .B1(\u_key_10/delay_cnt_29 ), 
    .A1(\u_key_10/delay_cnt_8 ), .D0(\u_key_10/delay_cnt_6 ), 
    .C0(\u_key_10/delay_cnt_21 ), .B0(\u_key_10/delay_cnt_25 ), 
    .A0(\u_key_10/delay_cnt_19 ), .F0(\u_key_10/n52 ), 
    .F1(\u_key_10/n39_adj_792 ));
  u_key_10_SLICE_1316 \u_key_10/SLICE_1316 ( .D1(\u_key_10/delay_cnt_10 ), 
    .C1(\u_key_10/delay_cnt_26 ), .B1(\u_key_10/delay_cnt_28 ), 
    .A1(\u_key_10/delay_cnt_22 ), .D0(\u_key_10/delay_cnt_2 ), 
    .C0(\u_key_10/delay_cnt_18 ), .B0(\u_key_10/delay_cnt_1 ), 
    .A0(\u_key_10/delay_cnt_17 ), .F0(\u_key_10/n50 ), .F1(\u_key_10/n49 ));
  u_key_8_SLICE_1317 \u_key_8/SLICE_1317 ( .B1(\u_key_8/delay_cnt_29 ), 
    .A1(\u_key_8/delay_cnt_8 ), .D0(\u_key_8/delay_cnt_6 ), 
    .C0(\u_key_8/delay_cnt_21 ), .B0(\u_key_8/delay_cnt_25 ), 
    .A0(\u_key_8/delay_cnt_19 ), .F0(\u_key_8/n52 ), 
    .F1(\u_key_8/n39_adj_796 ));
  u_key_8_SLICE_1318 \u_key_8/SLICE_1318 ( .D1(\u_key_8/delay_cnt_10 ), 
    .C1(\u_key_8/delay_cnt_26 ), .B1(\u_key_8/delay_cnt_28 ), 
    .A1(\u_key_8/delay_cnt_22 ), .D0(\u_key_8/delay_cnt_2 ), 
    .C0(\u_key_8/delay_cnt_18 ), .B0(\u_key_8/delay_cnt_1 ), 
    .A0(\u_key_8/delay_cnt_17 ), .F0(\u_key_8/n50 ), .F1(\u_key_8/n49 ));
  u_key_5_SLICE_1319 \u_key_5/SLICE_1319 ( .B1(\u_key_5/delay_cnt_29 ), 
    .A1(\u_key_5/delay_cnt_8 ), .D0(\u_key_5/delay_cnt_6 ), 
    .C0(\u_key_5/delay_cnt_21 ), .B0(\u_key_5/delay_cnt_25 ), 
    .A0(\u_key_5/delay_cnt_19 ), .F0(\u_key_5/n52 ), 
    .F1(\u_key_5/n39_adj_798 ));
  u_key_5_SLICE_1320 \u_key_5/SLICE_1320 ( .D1(\u_key_5/delay_cnt_10 ), 
    .C1(\u_key_5/delay_cnt_26 ), .B1(\u_key_5/delay_cnt_28 ), 
    .A1(\u_key_5/delay_cnt_22 ), .D0(\u_key_5/delay_cnt_2 ), 
    .C0(\u_key_5/delay_cnt_18 ), .B0(\u_key_5/delay_cnt_1 ), 
    .A0(\u_key_5/delay_cnt_17 ), .F0(\u_key_5/n50 ), .F1(\u_key_5/n49 ));
  SLICE_1321 SLICE_1321( .B1(cnt_4), .A1(cnt_7), .D0(cnt_1), .C0(cnt_6), 
    .B0(cnt_20), .A0(cnt_30), .F0(n38), .F1(n25_adj_1450));
  SLICE_1322 SLICE_1322( .D1(cnt_21), .C1(cnt_16), .B1(cnt_19), .A1(cnt_24), 
    .D0(cnt_14), .C0(cnt_10), .B0(cnt_8), .A0(cnt_26), .F0(n42), .F1(n41));
  u_key_state_SLICE_1323 \u_key_state/SLICE_1323 ( 
    .B1(\u_key_state/delay_cnt_29 ), .A1(\u_key_state/delay_cnt_8 ), 
    .D0(\u_key_state/delay_cnt_6 ), .C0(\u_key_state/delay_cnt_21 ), 
    .B0(\u_key_state/delay_cnt_25 ), .A0(\u_key_state/delay_cnt_19 ), 
    .F0(\u_key_state/n52 ), .F1(\u_key_state/n39_adj_829 ));
  SLICE_1324 SLICE_1324( .D1(n5), .C1(n18747), .B1(key_value_4), 
    .A1(key_flag_4), .D0(\u_speaker/n3799 ), .C0(n464), 
    .B0(\u_speaker/n18664 ), .A0(n37), .F0(\u_speaker/n15925 ), .F1(n11464));
  u_buzzer_SLICE_1325 \u_buzzer/SLICE_1325 ( .B1(\u_buzzer/cycle_9 ), 
    .A1(CNT_8), .B0(\u_buzzer/cycle_10 ), .A0(CNT_9), .F0(\u_buzzer/n18752 ), 
    .F1(\u_buzzer/n18751 ));
  SLICE_1326 SLICE_1326( .C1(beat_2), .B1(beat_3), .A1(count_beat_3), 
    .B0(beat_4), .A0(count_beat_4), .F0(n18727), .F1(n6_adj_1451));
  u_buzzer_SLICE_1327 \u_buzzer/SLICE_1327 ( .B1(\u_buzzer/cycle_7 ), 
    .A1(CNT_6), .B0(\u_buzzer/cycle_6 ), .A0(CNT_5), .F0(\u_buzzer/n11 ), 
    .F1(\u_buzzer/n18748 ));
  u_buzzer_SLICE_1328 \u_buzzer/SLICE_1328 ( .D1(CNT_0), .C1(CNT_1), 
    .B1(\u_buzzer/cycle_2 ), .A1(\u_buzzer/cycle_1 ), .D0(CNT_10), 
    .C0(\u_buzzer/cycle_11 ), .B0(\u_buzzer/cycle_12 ), .A0(CNT_11), 
    .F0(\u_buzzer/n17066 ), .F1(\u_buzzer/n4_adj_805 ));
  u_speaker_SLICE_1329 \u_speaker/SLICE_1329 ( .C1(rom2_0), 
    .B1(\u_speaker/count5_19 ), .A1(\u_speaker/count4_19 ), .C0(rom2_1), 
    .B0(\u_speaker/count3_15 ), .A0(\u_speaker/count1_15 ), 
    .F0(\u_speaker/n3381 ), .F1(\u_speaker/n3435 ));
  key_10_ \key[10]_I ( .PADDI(key_c_10), .key10(key[10]));
  key_9_ \key[9]_I ( .PADDI(key_c_9), .key9(key[9]));
  key_11_ \key[11]_I ( .PADDI(key_c_11), .key11(key[11]));
  key_12_ \key[12]_I ( .PADDI(key_c_12), .key12(key[12]));
  key_13_ \key[13]_I ( .PADDI(key_c_13), .key13(key[13]));
  key_14_ \key[14]_I ( .PADDI(key_c_14), .key14(key[14]));
  rst_n rst_n_I( .PADDI(rst_n_c), .rst_n(rst_n));
  sys_clk sys_clk_I( .PADDI(sys_clk_c), .sys_clk(sys_clk));
  pwm_out2 pwm_out2_I( .PADDO(pwm_out2_c), .pwm_out2(pwm_out2));
  pwm_out1 pwm_out1_I( .PADDO(pwm_out1_c), .pwm_out1(pwm_out1));
  key_8_ \key[8]_I ( .PADDI(key_c_8), .key8(key[8]));
  key_7_ \key[7]_I ( .PADDI(key_c_7), .key7(key[7]));
  key_6_ \key[6]_I ( .PADDI(key_c_6), .key6(key[6]));
  key_5_ \key[5]_I ( .PADDI(key_c_5), .key5(key[5]));
  key_4_ \key[4]_I ( .PADDI(key_c_4), .key4(key[4]));
  key_3_ \key[3]_I ( .PADDI(key_c_3), .key3(key[3]));
  key_2_ \key[2]_I ( .PADDI(key_c_2), .key2(key[2]));
  key_1_ \key[1]_I ( .PADDI(key_c_1), .key1(key[1]));
  key_0_ \key[0]_I ( .PADDI(key_c_0), .key0(key[0]));
  key_pa key_pa_I( .PADDI(key_pa_c), .key_pa(key_pa));
  key_state key_state_I( .PADDI(key_state_c), .key_state(key_state));
  u_speaker_sin2_sin_rom_0_2_0 \u_speaker/sin2/sin_rom_0_2_0 ( 
    .ADA12(\u_speaker/u_count2_24 ), .ADA11(\u_speaker/u_count2_23 ), 
    .ADA10(\u_speaker/u_count2_22 ), .ADA9(\u_speaker/u_count2_21 ), 
    .ADA8(\u_speaker/u_count2_20 ), .ADA7(\u_speaker/u_count2_19 ), 
    .ADA6(\u_speaker/u_count2_18 ), .ADA5(\u_speaker/u_count2_17 ), 
    .ADA4(\u_speaker/u_count2_16 ), .ADA3(\u_speaker/u_count2_15 ), 
    .ADA2(\u_speaker/u_count2_14 ), .DOA3(\u_speaker/data_out2_11 ), 
    .DOA2(\u_speaker/data_out2_10 ), .DOA1(\u_speaker/data_out2_9 ), 
    .DOA0(\u_speaker/data_out2_8 ), .CEA(\u_speaker/en_1 ), 
    .OCEA(\u_speaker/en_1 ), .CLKA(clk));
  u_speaker_sin2_sin_rom_0_0_2 \u_speaker/sin2/sin_rom_0_0_2 ( 
    .ADA12(\u_speaker/u_count2_24 ), .ADA11(\u_speaker/u_count2_23 ), 
    .ADA10(\u_speaker/u_count2_22 ), .ADA9(\u_speaker/u_count2_21 ), 
    .ADA8(\u_speaker/u_count2_20 ), .ADA7(\u_speaker/u_count2_19 ), 
    .ADA6(\u_speaker/u_count2_18 ), .ADA5(\u_speaker/u_count2_17 ), 
    .ADA4(\u_speaker/u_count2_16 ), .ADA3(\u_speaker/u_count2_15 ), 
    .ADA2(\u_speaker/u_count2_14 ), .DOA3(\u_speaker/data_out2_3 ), 
    .DOA2(\u_speaker/data_out2_2 ), .DOA1(\u_speaker/data_out2_1 ), 
    .DOA0(data_out2_0), .CEA(\u_speaker/en_1 ), .OCEA(\u_speaker/en_1 ), 
    .CLKA(clk));
  u_speaker_sin2_sin_rom_0_1_1 \u_speaker/sin2/sin_rom_0_1_1 ( 
    .ADA12(\u_speaker/u_count2_24 ), .ADA11(\u_speaker/u_count2_23 ), 
    .ADA10(\u_speaker/u_count2_22 ), .ADA9(\u_speaker/u_count2_21 ), 
    .ADA8(\u_speaker/u_count2_20 ), .ADA7(\u_speaker/u_count2_19 ), 
    .ADA6(\u_speaker/u_count2_18 ), .ADA5(\u_speaker/u_count2_17 ), 
    .ADA4(\u_speaker/u_count2_16 ), .ADA3(\u_speaker/u_count2_15 ), 
    .ADA2(\u_speaker/u_count2_14 ), .DOA3(\u_speaker/data_out2_7 ), 
    .DOA2(\u_speaker/data_out2_6 ), .DOA1(\u_speaker/data_out2_5 ), 
    .DOA0(\u_speaker/data_out2_4 ), .CEA(\u_speaker/en_1 ), 
    .OCEA(\u_speaker/en_1 ), .CLKA(clk));
  u_speaker_sin1_sin_rom_0_2_0 \u_speaker/sin1/sin_rom_0_2_0 ( 
    .ADA12(\u_speaker/u_count1_24 ), .ADA11(\u_speaker/u_count1_23 ), 
    .ADA10(\u_speaker/u_count1_22 ), .ADA9(\u_speaker/u_count1_21 ), 
    .ADA8(\u_speaker/u_count1_20 ), .ADA7(\u_speaker/u_count1_19 ), 
    .ADA6(\u_speaker/u_count1_18 ), .ADA5(\u_speaker/u_count1_17 ), 
    .ADA4(\u_speaker/u_count1_16 ), .ADA3(\u_speaker/u_count1_15 ), 
    .ADA2(\u_speaker/u_count1_14 ), .DOA3(\u_speaker/data_out1_11 ), 
    .DOA2(\u_speaker/data_out1_10 ), .DOA1(\u_speaker/data_out1_9 ), 
    .DOA0(\u_speaker/data_out1_8 ), .CEA(\u_speaker/en_0 ), 
    .OCEA(\u_speaker/en_0 ), .CLKA(clk));
  u_speaker_sin1_sin_rom_0_1_1 \u_speaker/sin1/sin_rom_0_1_1 ( 
    .ADA12(\u_speaker/u_count1_24 ), .ADA11(\u_speaker/u_count1_23 ), 
    .ADA10(\u_speaker/u_count1_22 ), .ADA9(\u_speaker/u_count1_21 ), 
    .ADA8(\u_speaker/u_count1_20 ), .ADA7(\u_speaker/u_count1_19 ), 
    .ADA6(\u_speaker/u_count1_18 ), .ADA5(\u_speaker/u_count1_17 ), 
    .ADA4(\u_speaker/u_count1_16 ), .ADA3(\u_speaker/u_count1_15 ), 
    .ADA2(\u_speaker/u_count1_14 ), .DOA3(\u_speaker/data_out1_7 ), 
    .DOA2(\u_speaker/data_out1_6 ), .DOA1(\u_speaker/data_out1_5 ), 
    .DOA0(\u_speaker/data_out1_4 ), .CEA(\u_speaker/en_0 ), 
    .OCEA(\u_speaker/en_0 ), .CLKA(clk));
  u_speaker_sin1_sin_rom_0_0_2 \u_speaker/sin1/sin_rom_0_0_2 ( 
    .ADA12(\u_speaker/u_count1_24 ), .ADA11(\u_speaker/u_count1_23 ), 
    .ADA10(\u_speaker/u_count1_22 ), .ADA9(\u_speaker/u_count1_21 ), 
    .ADA8(\u_speaker/u_count1_20 ), .ADA7(\u_speaker/u_count1_19 ), 
    .ADA6(\u_speaker/u_count1_18 ), .ADA5(\u_speaker/u_count1_17 ), 
    .ADA4(\u_speaker/u_count1_16 ), .ADA3(\u_speaker/u_count1_15 ), 
    .ADA2(\u_speaker/u_count1_14 ), .DOA3(\u_speaker/data_out1_3 ), 
    .DOA2(\u_speaker/data_out1_2 ), .DOA1(\u_speaker/data_out1_1 ), 
    .DOA0(data_out1_0), .CEA(\u_speaker/en_0 ), .OCEA(\u_speaker/en_0 ), 
    .CLKA(clk));
  GSR_INST GSR_INST( .GSRNET(rst_n_c));
  u_clk_pll_PLLInst_0 \u_clk_pll/PLLInst_0 ( .CLKI(sys_clk_c), .CLKFB(clk), 
    .CLKOP(clk));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
endmodule

module SLICE_0 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i22( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i21( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i20( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i19( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_2 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i18( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_4 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_5 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_6 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_7 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_8 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \u_speaker/add_2219_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_SLICE_9 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/add_2219_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_SLICE_10 ( input B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20004 \u_speaker/add_2216_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vmuxregsre0003 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_SLICE_11 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \u_speaker/add_2216_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_12 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \u_speaker/add_2216_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_13 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \u_speaker/add_2216_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_14 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \u_speaker/add_2216_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_15 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \u_speaker/add_2216_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_16 ( input B1, A1, B0, A0, DI1, LSR, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20002 \u_speaker/add_2216_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_17 ( input FCI, output F0 );
  wire   GNDI;

  ccu20005 \u_speaker/add_2219_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_SLICE_18 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \u_speaker/add_2219_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_19 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \u_speaker/add_2219_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_20 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \u_speaker/add_2219_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_21 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \u_speaker/add_2219_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_22 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_9/add_2212_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_9_SLICE_23 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_9/add_2212_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_24 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_9/add_2212_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_25 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_9/add_2212_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_26 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_9/add_2212_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_27 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_9/add_2212_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_28 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_9/add_2212_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_29 ( input B1, A1, B0, A0, M0, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0003 \u_speaker/u_DDS_8/fcw_r_i1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20001 \u_speaker/u_DDS_9/add_2212_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_30 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_9/add_2212_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_31 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_9/add_2212_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_9_SLICE_32 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \u_speaker/u_DDS_9/add_2212_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_9_SLICE_33 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_9/add_2212_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_34 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_8/add_2211_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_35 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_8/add_2211_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_36 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_8/add_2211_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_37 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_8/add_2211_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_38 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_8/add_2211_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_39 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_8/add_2211_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_40 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_8/add_2211_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_41 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_8/add_2211_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_42 ( input B1, A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \u_speaker/u_DDS_8/add_2211_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_8_SLICE_43 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_8/add_2211_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_44 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_8/add_2211_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_8_SLICE_45 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_8/add_2211_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_46 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20009 \u_speaker/u_DDS_7/count_2229_add_4_26 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_7_SLICE_47 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_7/count_2229_add_4_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_48 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_7/count_2229_add_4_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_49 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_7/count_2229_add_4_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_50 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_7/count_2229_add_4_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_51 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_7/count_2229_add_4_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_52 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_7/count_2229_add_4_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_53 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 \u_speaker/u_DDS_7/count_2229_add_4_12 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_7_SLICE_54 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_7/count_2229_add_4_10 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_55 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_7/count_2229_add_4_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_56 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 \u_speaker/u_DDS_7/count_2229_add_4_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_57 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_7/count_2229_add_4_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_7_SLICE_58 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_7/count_2229_add_4_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_59 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20011 \u_speaker/u_DDS_6/add_15_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_6_SLICE_60 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_6/add_15_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_61 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_6/add_15_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_62 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_6/add_15_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_63 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_6/add_15_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_64 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_6/add_15_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_65 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_6/add_15_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_66 ( input A1, D0, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20012 \u_speaker/u_DDS_6/add_15_10 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h566a;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_6_SLICE_67 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20013 \u_speaker/u_DDS_6/add_15_8 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_6_SLICE_68 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20014 \u_speaker/u_DDS_6/add_15_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_6_SLICE_69 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_6/add_15_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_70 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_6/add_15_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_71 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_5/add_2210_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_72 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_5/add_2210_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_73 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_5/add_2210_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_74 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_5/add_2210_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_75 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_5/add_2210_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_76 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_5/add_2210_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_77 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_5/add_2210_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_78 ( input D1, C1, B1, A1, C0, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20015 \u_speaker/u_DDS_5/add_2210_10 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h566a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_5_SLICE_79 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20013 \u_speaker/u_DDS_5/add_2210_8 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_80 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_5/add_2210_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_81 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_5/add_2210_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_82 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_5/add_2210_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_83 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20009 \u_speaker/u_DDS_4/count_2228_add_4_26 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_84 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_4/count_2228_add_4_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_85 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_4/count_2228_add_4_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_86 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_4/count_2228_add_4_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_87 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_4/count_2228_add_4_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_88 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_4/count_2228_add_4_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_89 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_4/count_2228_add_4_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_90 ( input A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20016 \u_speaker/u_DDS_4/count_2228_add_4_12 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_4_SLICE_91 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20013 \u_speaker/u_DDS_4/count_2228_add_4_10 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_92 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20014 \u_speaker/u_DDS_4/count_2228_add_4_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_93 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_4/count_2228_add_4_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_94 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_4/count_2228_add_4_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_95 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_4/count_2228_add_4_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_96 ( input B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20017 \u_speaker/u_DDS_4/add_3609_7 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7888;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_4_SLICE_97 ( input B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20018 \u_speaker/u_DDS_4/add_3609_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf078;
  defparam inst1.INIT1 = 16'h9666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_4_SLICE_98 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20019 \u_speaker/u_DDS_4/add_3609_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hd1e2;
  defparam inst1.INIT1 = 16'hf066;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_4_SLICE_99 ( input D1, C1, B1, A1, DI1, CLK, output F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly;

  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20020 \u_speaker/u_DDS_4/add_3609_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h596a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_3_SLICE_100 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20009 \u_speaker/u_DDS_3/count_2227_add_4_26 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_101 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_3/count_2227_add_4_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_102 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_3/count_2227_add_4_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_103 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_3/count_2227_add_4_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_104 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_3/count_2227_add_4_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_105 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_3/count_2227_add_4_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_106 ( input A1, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_2/fcw_r_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/fcw_r_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu2 \u_speaker/u_DDS_3/count_2227_add_4_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_SLICE_107 ( input A1, D0, C0, B0, A0, M1, M0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_2/fcw_r_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/fcw_r_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20021 \u_speaker/u_DDS_3/count_2227_add_4_12 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h566a;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_SLICE_108 ( input C1, B1, A1, C0, B0, A0, M1, M0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_2/fcw_r_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/fcw_r_i1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20013 \u_speaker/u_DDS_3/count_2227_add_4_10 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_109 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20014 \u_speaker/u_DDS_3/count_2227_add_4_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_110 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_3/count_2227_add_4_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_111 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_3/count_2227_add_4_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_112 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_3/count_2227_add_4_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_113 ( input B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_3/fcw_r_ret2_i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_3/fcw_r_ret2_i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20022 \u_speaker/u_DDS_3/add_3687_7 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hd222;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_3_SLICE_114 ( input A1, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_3/fcw_r_ret2_i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_3/fcw_r_ret2_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu2 \u_speaker/u_DDS_3/add_3687_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_115 ( input C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_3/fcw_r_ret2_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_3/fcw_r_ret2_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20023 \u_speaker/u_DDS_3/add_3687_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5a96;
  defparam inst1.INIT1 = 16'hd2d2;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_3_SLICE_116 ( input D1, C1, B1, A1, DI1, M0, CLK, 
    output Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_3/fcw_r_ret2_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_3/fcw_r_ret2_i1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20020 \u_speaker/u_DDS_3/add_3687_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_117 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_2/add_2209_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_118 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_2/add_2209_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_119 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_2/add_2209_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_120 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_2/add_2209_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_121 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_2/add_2209_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_122 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_2/add_2209_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_123 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_2/add_2209_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_124 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_2/add_2209_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_125 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_2/add_2209_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_126 ( input B1, A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \u_speaker/u_DDS_2/add_2209_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_127 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \u_speaker/u_DDS_2/add_2209_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_2_SLICE_128 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_2/add_2209_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_129 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20009 \u_speaker/u_DDS_1/count_2226_add_4_26 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_130 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_1/count_2226_add_4_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_131 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_1/count_2226_add_4_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_132 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_1/count_2226_add_4_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_133 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_1/count_2226_add_4_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_134 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_1/count_2226_add_4_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_135 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_1/count_2226_add_4_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_136 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 \u_speaker/u_DDS_1/count_2226_add_4_12 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_137 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_1/count_2226_add_4_10 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_138 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_1/count_2226_add_4_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_139 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_1/count_2226_add_4_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_140 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_1/count_2226_add_4_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_141 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_1/count_2226_add_4_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_142 ( input A0, FCI, output F1 );
  wire   GNDI;

  ccu20011 \u_speaker/u_DDS_1/add_4165_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_143 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_1/add_4165_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_144 ( input B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \u_speaker/u_DDS_1/add_4165_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7888;
  defparam inst1.INIT1 = 16'hf000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_1_SLICE_145 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20025 \u_speaker/u_DDS_1/add_4165_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20025 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9666;
  defparam inst1.INIT1 = 16'h9666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_1_SLICE_146 ( input C1, B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20026 \u_speaker/u_DDS_1/add_4165_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_1_SLICE_147 ( input A0, DI0, LSR, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0027 \u_speaker/u_DDS_1/fcw_r_i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20011 \u_speaker/u_DDS_1/add_2977_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vmuxregsre0027 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module u_speaker_u_DDS_1_SLICE_148 ( input A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20028 \u_speaker/u_DDS_1/add_2977_6 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7878;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_1_SLICE_149 ( input C1, B1, A1, D0, C0, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \u_speaker/u_DDS_1/add_2977_4 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20029 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5a96;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_speaker_u_DDS_1_SLICE_150 ( input C1, B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20026 \u_speaker/u_DDS_1/add_2977_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_151 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_13/add_2218_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_152 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_13/add_2218_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_153 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_13/add_2218_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_154 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_13/add_2218_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_155 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_13/add_2218_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_156 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_13/add_2218_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_157 ( input A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20007 \u_speaker/u_DDS_13/add_2218_12 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_158 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_13/add_2218_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_159 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_13/add_2218_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_160 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_13/add_2218_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_161 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_13/add_2218_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_13_SLICE_162 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_13/add_2218_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_163 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20009 \u_speaker/u_DDS_12/count_2230_add_4_26 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_164 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_12/count_2230_add_4_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_165 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_12/count_2230_add_4_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_166 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_12/count_2230_add_4_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_167 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_12/count_2230_add_4_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_168 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_12/count_2230_add_4_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_169 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_speaker/u_DDS_12/count_2230_add_4_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_170 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20015 \u_speaker/u_DDS_12/count_2230_add_4_12 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_SLICE_171 ( input C1, B1, A1, C0, B0, A0, M1, M0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20013 \u_speaker/u_DDS_12/count_2230_add_4_10 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_172 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_12/count_2230_add_4_8 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_173 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_12/count_2230_add_4_6 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_174 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_12/count_2230_add_4_4 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_175 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_12/count_2230_add_4_2 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_176 ( input B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_12/fcw_r_ret0_i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_12/fcw_r_ret0_i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20017 \u_speaker/u_DDS_12/add_3786_7 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_177 ( input B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_12/fcw_r_ret0_i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_12/fcw_r_ret0_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20018 \u_speaker/u_DDS_12/add_3786_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_12/fcw_r_ret0_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_12/fcw_r_ret0_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20019 \u_speaker/u_DDS_12/add_3786_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_179 ( input D1, C1, B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly;

  vmuxregsre0003 \u_speaker/u_DDS_12/fcw_r_ret0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20020 \u_speaker/u_DDS_12/add_3786_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_180 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_11/add_2214_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_181 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_11/add_2214_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_182 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_11/add_2214_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_183 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_11/add_2214_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_184 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_11/add_2214_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_185 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_11/add_2214_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_186 ( input A1, B0, A0, M0, CLK, FCI, output F0, Q0, F1, 
    FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i3 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20007 \u_speaker/u_DDS_11/add_2214_12 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_SLICE_187 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  ccu20001 \u_speaker/u_DDS_11/add_2214_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_188 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_11/add_2214_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_189 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_11/add_2214_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_190 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_11/add_2214_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_11_SLICE_191 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_11/add_2214_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_192 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20011 \u_speaker/u_DDS_10/add_15_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_193 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_10/add_15_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_194 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_10/add_15_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_195 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_10/add_15_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_196 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_10/add_15_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_197 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_10/add_15_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_198 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \u_speaker/u_DDS_10/add_15_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_199 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_10/add_15_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_200 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_10/add_15_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_201 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_10/add_15_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_202 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20001 \u_speaker/u_DDS_10/add_15_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_10_SLICE_203 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20002 \u_speaker/u_DDS_10/add_15_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_state_SLICE_204 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_state/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ccu20030 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_key_state_SLICE_205 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ccu20031 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_key_state_SLICE_206 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_207 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_208 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_209 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_210 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_state/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_211 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, 
    FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_state/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_state/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module vmuxregsre0032 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module u_key_state_SLICE_212 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_state/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_213 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_state/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_214 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_215 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_state/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_216 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_217 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_state/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_218 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_219 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_state/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_state/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_state/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_220 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_state/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_state/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module ccu20033 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_221 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_222 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_223 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_224 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre cnt_2220__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20034 cnt_2220_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ccu20034 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_225 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0027 count_note_2222__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20009 count_note_2222_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_226 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0027 count_note_2222__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0027 count_note_2222__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 count_note_2222_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_227 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0027 count_note_2222__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0027 count_note_2222__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 count_note_2222_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_228 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0027 count_note_2222__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0027 count_note_2222__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 count_note_2222_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_229 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0027 count_note_2222__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20034 count_note_2222_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_230 ( input B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20035 sub_1378_add_2_19( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20035 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_231 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_1378_add_2_17( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20036 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_232 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_1378_add_2_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_233 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_1378_add_2_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_234 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_1378_add_2_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_235 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_1378_add_2_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_236 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_1378_add_2_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_237 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_1378_add_2_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_238 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_1378_add_2_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_239 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20037 sub_1378_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20037 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_buzzer_SLICE_240 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \u_buzzer/sub_6_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_241 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20009 \u_buzzer/CNT_2225_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_242 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_buzzer/CNT_2225_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_243 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_buzzer/CNT_2225_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_244 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_buzzer/CNT_2225_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_245 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_buzzer/CNT_2225_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_246 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_buzzer/CNT_2225_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_247 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_buzzer/CNT_2225_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_248 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 \u_buzzer/CNT_2225_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_249 ( input C1, B1, A1, D0, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20038 \u_buzzer/CNT_2225_add_4_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20038 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h596a;
  defparam inst1.INIT1 = 16'hd2d2;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_buzzer_SLICE_250 ( input D1, C1, B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20020 \u_buzzer/CNT_2225_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_251 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \u_buzzer/sub_6_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_252 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20033 \u_buzzer/sub_6_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_253 ( input A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20039 \u_buzzer/sub_6_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20039 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'hffff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module u_buzzer_SLICE_254 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \u_buzzer/sub_6_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_255 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \u_buzzer/sub_6_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_256 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \u_buzzer/sub_6_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_257 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \u_buzzer/sub_6_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_258 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \u_buzzer/sub_6_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_259 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \u_buzzer/sub_6_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_5_SLICE_260 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_5/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_261 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_262 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_263 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_264 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_265 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_266 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_5/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_267 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_5/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_5/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_5_SLICE_268 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_5/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_269 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_5/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_270 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_271 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_5/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_272 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_273 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_5/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_274 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_275 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_5/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_5/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_5/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_276 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_5/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_5/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_8_SLICE_277 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_8/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_278 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_279 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_280 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_281 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_282 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_283 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_8/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_284 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_8/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_8/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_8_SLICE_285 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_8/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_286 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_8/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_287 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_288 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_8/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_289 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_290 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_8/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_291 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_292 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_8/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_8/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_8/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_293 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_8/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_8/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_10_SLICE_294 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_295 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_10/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_296 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_297 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_10/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_298 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_299 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_300 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_10/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_10/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_10_SLICE_301 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_10/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_302 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_303 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_304 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_305 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_306 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_10/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_10/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_307 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_10/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_308 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_10/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_10/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_10_SLICE_309 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_10/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_10_SLICE_310 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_10/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_10/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_311 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_11/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_312 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_313 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_314 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_315 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_316 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_317 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_11/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_318 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_11/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_11/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_11_SLICE_319 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_11/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_320 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_11/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_321 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_322 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_11/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_323 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_324 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_11/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_325 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_326 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_11/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_11/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_11/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_327 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_11/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_11/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_12_SLICE_328 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_12/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_329 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_330 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_331 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_332 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_333 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_334 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_12/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_335 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_12/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_12/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_12_SLICE_336 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_12/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_337 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_12/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_338 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_339 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_12/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_340 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_341 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_12/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_342 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_343 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_12/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_12/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_12/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_344 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_12/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_12/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_2_SLICE_345 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_2/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_346 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_347 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_348 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_349 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_350 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_351 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_2/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_352 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_2/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_2/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_2_SLICE_353 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_2/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_354 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_2/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_355 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_356 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_2/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_357 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_358 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_2/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_359 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_360 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_2/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_2/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_2/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_361 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_2/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_2/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_13_SLICE_362 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_13/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_363 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_364 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_365 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_366 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_367 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_368 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_13/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_369 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_13/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_13/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_13_SLICE_370 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_13/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_371 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_13/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_372 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_373 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_13/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_374 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_375 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_13/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_376 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_377 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_13/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_13/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_13/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_378 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_13/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_13/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_9_SLICE_379 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_9/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_380 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_381 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_382 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_383 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_384 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_385 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_9/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_386 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_9/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_9/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_9_SLICE_387 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_9/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_388 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_9/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_389 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_390 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_9/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_391 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_392 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_9/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_393 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_394 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_9/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_9/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_9/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_395 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_9/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_9/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_1_SLICE_396 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_1/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_397 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_1/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_398 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_399 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_1/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_400 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_401 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_1/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_402 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_403 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_404 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_1/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_1/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_1_SLICE_405 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_1/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_406 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_407 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_408 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_409 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_410 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_1/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_1/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_411 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_1/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_1/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_1_SLICE_412 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_1/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_1/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_7_SLICE_413 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_7/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_414 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_415 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_416 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_417 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_418 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_419 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_7/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_420 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_7/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_7/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_7_SLICE_421 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_7/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_422 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_7/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_423 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_424 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_7/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_425 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_426 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_7/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_427 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_428 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_7/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_7/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_7/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_429 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_7/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_7/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_6_SLICE_430 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_6/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_431 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_432 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_433 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_434 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_435 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_436 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_6/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_437 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_6/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_6/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_6_SLICE_438 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_6/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_439 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_6/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_440 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_441 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_6/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_442 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_443 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_6/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_444 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_445 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_6/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_6/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_6/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_446 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_6/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_6/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_447 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre cnt_2220__i31( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20009 cnt_2220_add_4_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_448 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i30( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i29( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_449 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_3/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_3/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_3_SLICE_450 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_451 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_3/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_452 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_453 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_454 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_455 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_456 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_457 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_3/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_458 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_3/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_3/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_3_SLICE_459 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_3/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_460 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_3/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_461 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_462 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_3/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_463 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_464 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_3/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_465 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_3/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_3/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_3/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_466 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i28( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i27( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_467 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i26( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i25( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_468 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_15/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_469 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_470 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_471 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_472 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_473 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_474 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_15/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_475 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_15/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_15/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_15_SLICE_476 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_15/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_477 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_15/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_478 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_479 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_15/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_480 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_481 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_15/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_482 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_483 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_15/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_15/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_15/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_15_SLICE_484 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_15/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_15/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_485 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_2220__i24( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre cnt_2220__i23( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_2220_add_4_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_486 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_4/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_487 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_488 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_489 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_490 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_491 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_492 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_4/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_493 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_4/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_4/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_4_SLICE_494 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_4/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_495 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_4/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_496 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_497 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_4/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_498 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_499 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_4/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_500 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_501 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_4/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_4/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_4/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_502 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_4/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_4/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_14_SLICE_503 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20030 \u_key_14/sub_10_add_2_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_504 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_505 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_506 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_507 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_508 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_509 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_14/sub_10_add_2_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_510 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  vmuxregsre0032 \u_key_14/key_reg_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_14/sub_10_add_2_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_key_14_SLICE_511 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_14/sub_10_add_2_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_512 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_14/sub_10_add_2_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_513 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_514 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, 
    F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_14/sub_10_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_515 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_516 ( input A1, A0, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20031 \u_key_14/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_517 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_518 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \u_key_14/delay_cnt_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre \u_key_14/delay_cnt_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20031 \u_key_14/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_519 ( input A1, M0, CE, CLK, output Q0, F1, FCO );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0032 \u_key_14/key_value_28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20033 \u_key_14/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_520 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7935_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7458_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD0D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_521 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7937_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7936_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_522 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7939_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7938_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_523 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7941_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7940_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_524 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7943_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7942_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_525 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7945_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7944_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_526 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7947_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7946_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_527 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7949_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7948_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_528 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i7951_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i7950_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_buzzer/CNT_2225__i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_buzzer/CNT_2225__i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_529 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40040 i2_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 beat_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_530 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40042 i11834_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i11831_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 beat_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 beat_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_531 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40043 i2_4_lut_adj_58( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 i2_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 beat_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 beat_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_532 ( input B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40045 i12350_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 i12269_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0003 clk_beat_75( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_533 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40047 i10423_2_lut_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40048 i10415_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 count_beat_i4_2224__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_beat_i4_2224__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4C80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_534 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40049 i10437_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 i10430_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 count_beat_i4_2224__i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_beat_i4_2224__i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_535 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40050 i10433_2_lut_rep_423_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40047 i10444_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 count_beat_i4_2224__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_536 ( input B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \u_key_2/i12293_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \u_key_1/i12265_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0051 \u_key_2/key_flag_27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_1/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module vmuxregsre0051 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module SLICE_537 ( input B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \u_key_4/i12288_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \u_key_3/i12295_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0051 \u_key_4/key_flag_27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_3/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_538 ( input B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \u_key_6/i12297_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \u_key_5/i12281_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0051 \u_key_6/key_flag_27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_5/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_539 ( input B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \u_key_8/i12301_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \u_key_7/i12299_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0051 \u_key_8/key_flag_27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_7/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_540 ( input B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \u_key_10/i12305_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \u_key_9/i12303_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0051 \u_key_10/key_flag_27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_9/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_541 ( input B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \u_key_12/i12316_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \u_key_11/i12307_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0051 \u_key_12/key_flag_27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_11/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_542 ( input B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \u_key_14/i12320_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \u_key_13/i12318_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0051 \u_key_14/key_flag_27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_13/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_key_15_SLICE_543 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40052 \u_key_15/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \u_key_15/i12322_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0051 \u_key_15/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_state_SLICE_544 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40052 \u_key_state/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \u_key_state/i12327_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0051 \u_key_state/key_flag_27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_561 ( input C0, B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, M1_dly;

  lut40053 i12370_3_lut_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0051 stat_71( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 stat_71_rep_637( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD2D2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_562 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40042 i11929_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i11919_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 note_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 note_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_563 ( input C1, B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40042 i11959_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i11960_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 note_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_564 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 mux_617_Mux_4_i127_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i11828_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 note_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 note_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0ACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_565 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40055 \u_speaker/i7292_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \u_speaker/i7296_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0057 \u_speaker/rom2_4__I_7_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3032) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0057 ( input D0, D1, SD, SP, CK, LSR, output Q );
  wire   Q_INT, D_INT, LSRB, L_IN;

  MUX41 INST10( .D0(Q_INT), .D1(Q_INT), .D2(D0), .D3(D1), .SD1(SD), .SD2(SP), 
    .Z(D_INT));
  INV INST20( .A(LSR), .Z(LSRB));
  AND2 INST30( .A(LSRB), .B(D_INT), .Z(L_IN));
  FD1S1A INST50( .D(L_IN), .CK(CK), .Q(Q_INT));
  defparam INST50.GSR = "DISABLED";
  BUFBA INST80( .A(Q_INT), .Z(Q));
endmodule

module u_speaker_SLICE_566 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40058 \u_speaker/i1_4_lut_adj_44 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \u_speaker/i1_4_lut_adj_43 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0057 \u_speaker/rom2_4__I_7_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_567 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40059 \u_speaker/i301_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \u_speaker/i2_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0057 \u_speaker/rom2_4__I_7_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_569 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_buzzer/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \u_buzzer/i7439_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0060 \u_buzzer/PWM_89 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vmuxregsre0060 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_570 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40061 \u_speaker/i5_2_lut_rep_527_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40062 \u_buzzer/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_buzzer/cycle_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAABA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_571 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_571/u_buzzer/SLICE_571_K1_H1 , 
         \u_buzzer/SLICE_571/u_buzzer/mux_57_i2/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40063 \u_buzzer/SLICE_571_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_571/u_buzzer/SLICE_571_K1_H1 ));
  lut40064 \u_buzzer/mux_57_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_571/u_buzzer/mux_57_i2/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_571_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_571/u_buzzer/mux_57_i2/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_571/u_buzzer/SLICE_571_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB830) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_572 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \SLICE_572/SLICE_572_K1_H1 , \SLICE_572/u_speaker/i6407/GATE_H0 , 
         VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40065 SLICE_572_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_572/SLICE_572_K1_H1 ));
  lut40066 \u_speaker/i6407/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_572/u_speaker/i6407/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_572_K0K1MUX( .D0(\SLICE_572/u_speaker/i6407/GATE_H0 ), 
    .D1(\SLICE_572/SLICE_572_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_573 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_573/u_buzzer/SLICE_573_K1_H1 , 
         \u_buzzer/SLICE_573/u_buzzer/mux_57_i4/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40067 \u_buzzer/SLICE_573_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_573/u_buzzer/SLICE_573_K1_H1 ));
  lut40068 \u_buzzer/mux_57_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_573/u_buzzer/mux_57_i4/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_573_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_573/u_buzzer/mux_57_i4/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_573/u_buzzer/SLICE_573_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_574 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \u_buzzer/SLICE_574/u_buzzer/SLICE_574_K1_H1 , GNDI, 
         \u_buzzer/SLICE_574/u_buzzer/mux_57_i5/GATE_H0 , VCCI, CLK_NOTIN, 
         DI0_dly, CLK_dly, CE_dly;

  lut40063 \u_buzzer/SLICE_574_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_574/u_buzzer/SLICE_574_K1_H1 ));
  lut40069 \u_buzzer/mux_57_i5/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_buzzer/SLICE_574/u_buzzer/mux_57_i5/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_buzzer/cycle_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_buzzer/SLICE_574_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_574/u_buzzer/mux_57_i5/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_574/u_buzzer/SLICE_574_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC2C2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_575 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_575/u_buzzer/SLICE_575_K1_H1 , 
         \u_buzzer/SLICE_575/u_buzzer/i12480/GATE_H0 , VCCI, CLK_NOTIN, GNDI, 
         DI0_dly, CLK_dly, CE_dly;

  lut40070 \u_buzzer/SLICE_575_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_575/u_buzzer/SLICE_575_K1_H1 ));
  lut40071 \u_buzzer/i12480/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_575/u_buzzer/i12480/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_575_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_575/u_buzzer/i12480/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_575/u_buzzer/SLICE_575_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7344) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0E0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_576 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_576/u_buzzer/SLICE_576_K1_H1 , 
         \u_buzzer/SLICE_576/u_buzzer/mux_57_i7/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40072 \u_buzzer/SLICE_576_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_576/u_buzzer/SLICE_576_K1_H1 ));
  lut40073 \u_buzzer/mux_57_i7/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_576/u_buzzer/mux_57_i7/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_576_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_576/u_buzzer/mux_57_i7/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_576/u_buzzer/SLICE_576_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4F4A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_577 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \SLICE_577/SLICE_577_K1_H1 , \SLICE_577/u_speaker/i6399/GATE_H0 , 
         VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40065 SLICE_577_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_577/SLICE_577_K1_H1 ));
  lut40074 \u_speaker/i6399/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_577/u_speaker/i6399/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_577_K0K1MUX( .D0(\SLICE_577/u_speaker/i6399/GATE_H0 ), 
    .D1(\SLICE_577/SLICE_577_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5051) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_578 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_578/u_buzzer/SLICE_578_K1_H1 , 
         \u_buzzer/SLICE_578/u_buzzer/mux_57_i9/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40075 \u_buzzer/SLICE_578_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_578/u_buzzer/SLICE_578_K1_H1 ));
  lut40076 \u_buzzer/mux_57_i9/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_578/u_buzzer/mux_57_i9/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_578_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_578/u_buzzer/mux_57_i9/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_578/u_buzzer/SLICE_578_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5540) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_579 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_579/u_buzzer/SLICE_579_K1_H1 , 
         \u_buzzer/SLICE_579/u_buzzer/mux_57_i10/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40077 \u_buzzer/SLICE_579_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_579/u_buzzer/SLICE_579_K1_H1 ));
  lut40078 \u_buzzer/mux_57_i10/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_579/u_buzzer/mux_57_i10/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_579_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_579/u_buzzer/mux_57_i10/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_579/u_buzzer/SLICE_579_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF099) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_580 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \SLICE_580/SLICE_580_K1_H1 , \SLICE_580/u_key_8/i6554/GATE_H0 , VCCI, 
         CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40079 SLICE_580_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_580/SLICE_580_K1_H1 ));
  lut40080 \u_key_8/i6554/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_580/u_key_8/i6554/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_580_K0K1MUX( .D0(\SLICE_580/u_key_8/i6554/GATE_H0 ), 
    .D1(\SLICE_580/SLICE_580_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A3A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hABAF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_581 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_581/u_buzzer/SLICE_581_K1_H1 , 
         \u_buzzer/SLICE_581/u_buzzer/mux_57_i12/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40081 \u_buzzer/SLICE_581_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_581/u_buzzer/SLICE_581_K1_H1 ));
  lut40082 \u_buzzer/mux_57_i12/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_581/u_buzzer/mux_57_i12/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_581_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_581/u_buzzer/mux_57_i12/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_581/u_buzzer/SLICE_581_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3D1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00DC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_582 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_582/u_buzzer/SLICE_582_K1_H1 , 
         \u_buzzer/SLICE_582/u_buzzer/mux_57_i13/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40081 \u_buzzer/SLICE_582_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_582/u_buzzer/SLICE_582_K1_H1 ));
  lut40083 \u_buzzer/mux_57_i13/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_582/u_buzzer/mux_57_i13/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_582_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_582/u_buzzer/mux_57_i13/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_582/u_buzzer/SLICE_582_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5150) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_583 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_583/u_buzzer/SLICE_583_K1_H1 , 
         \u_buzzer/SLICE_583/u_buzzer/mux_57_i14/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40084 \u_buzzer/SLICE_583_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_583/u_buzzer/SLICE_583_K1_H1 ));
  lut40085 \u_buzzer/mux_57_i14/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_583/u_buzzer/mux_57_i14/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_583_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_583/u_buzzer/mux_57_i14/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_583/u_buzzer/SLICE_583_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB830) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDA8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_584 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, 
    CLK, output OFX0, Q0 );
  wire   \u_buzzer/SLICE_584/u_buzzer/SLICE_584_K1_H1 , 
         \u_buzzer/SLICE_584/u_buzzer/mux_57_i15/GATE_H0 , VCCI, CLK_NOTIN, 
         GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40086 \u_buzzer/SLICE_584_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_584/u_buzzer/SLICE_584_K1_H1 ));
  lut40078 \u_buzzer/mux_57_i15/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_584/u_buzzer/mux_57_i15/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/SLICE_584_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_584/u_buzzer/mux_57_i15/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_584/u_buzzer/SLICE_584_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE54) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_585 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \u_buzzer/SLICE_585/u_buzzer/SLICE_585_K1_H1 , GNDI, 
         \u_buzzer/SLICE_585/u_buzzer/i38/GATE_H0 , VCCI, CLK_NOTIN, DI0_dly, 
         CLK_dly, CE_dly;

  lut40087 \u_buzzer/SLICE_585_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/SLICE_585/u_buzzer/SLICE_585_K1_H1 ));
  lut40088 \u_buzzer/i38/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_buzzer/SLICE_585/u_buzzer/i38/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_buzzer/cycle_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_buzzer/SLICE_585_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_585/u_buzzer/i38/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_585/u_buzzer/SLICE_585_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6868) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_586 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \u_buzzer/SLICE_586/u_buzzer/SLICE_586_K1_H1 , 
         \u_buzzer/SLICE_586/u_buzzer/mux_57_i17/GATE_H0 , VCCI, CLK_NOTIN, 
         DI0_dly, CLK_dly, CE_dly;

  lut40089 \u_buzzer/SLICE_586_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_buzzer/SLICE_586/u_buzzer/SLICE_586_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \u_buzzer/mux_57_i17/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/SLICE_586/u_buzzer/mux_57_i17/GATE_H0 ));
  vmuxregsre0003 \u_buzzer/cycle_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_buzzer/SLICE_586_K0K1MUX ( 
    .D0(\u_buzzer/SLICE_586/u_buzzer/mux_57_i17/GATE_H0 ), 
    .D1(\u_buzzer/SLICE_586/u_buzzer/SLICE_586_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4240) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_587 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40091 \u_speaker/mux_63_Mux_17_i7_3_lut_3_lut_3_lut_4_lut_3_lut ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 \u_speaker/mux_57_i18_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_buzzer/cycle_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE7E7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4073) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_588 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40093 \u_speaker/i2280_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40094 \u_speaker/note_4__bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_buzzer/yinjie_box_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0095 \u_buzzer/yinjie_box_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD95D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0095 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module u_key_1_SLICE_589 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_key_1/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \u_key_1/i5525_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_1/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_1_SLICE_590 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_1/i7508_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_1/i7509_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_1/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_1/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF6F6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_1_SLICE_591 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_1/i7506_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_1/i7507_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_1/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_1/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_1_SLICE_592 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_1/i7504_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_1/i7505_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_1/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_1/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_1_SLICE_593 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_1/key_reg_I_0_2_lut_rep_620 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_1/i7503_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_1/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_10_SLICE_595 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_10/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40096 \u_key_10/i5543_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_10/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_10_SLICE_596 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_10/i7379_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_10/i7380_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_10/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_10/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_10_SLICE_597 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_10/i7377_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_10/i7378_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_10/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_10/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_10_SLICE_598 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_10/i7375_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_10/i7376_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_10/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_10/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_10_SLICE_599 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_10/key_reg_I_0_2_lut_rep_611 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_10/i7374_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_10/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_11_SLICE_601 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_11/i1_2_lut_3_lut_4_lut_adj_14 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40096 \u_key_11/i5545_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_11/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_11_SLICE_602 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_11/i7371_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_11/i7372_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_11/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_11/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_11_SLICE_603 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_11/i7369_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_11/i7370_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_11/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_11/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_11_SLICE_604 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_11/i7367_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_11/i7368_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_11/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_11/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_11_SLICE_605 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_11/key_reg_I_0_2_lut_rep_610 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_11/i7366_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_11/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_12_SLICE_607 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_12/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40096 \u_key_12/i5547_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_12/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_12_SLICE_608 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_12/i7364_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_12/i7365_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_12/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_12/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_12_SLICE_609 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_12/i7362_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_12/i7363_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_12/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_12/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_12_SLICE_610 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_12/i7360_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_12/i7361_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_12/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_12/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_12_SLICE_611 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_12/key_reg_I_0_2_lut_rep_609 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_12/i7359_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_12/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_13_SLICE_613 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_13/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40096 \u_key_13/i5549_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_13/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_13_SLICE_614 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_13/i7355_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_13/i7358_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_13/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_13/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_13_SLICE_615 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_13/i7353_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_13/i7354_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_13/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_13/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_13_SLICE_616 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_13/i7351_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_13/i7352_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_13/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_13/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_13_SLICE_617 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_13/key_reg_I_0_2_lut_rep_608 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_13/i7350_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_13/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_14_SLICE_619 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_14/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40096 \u_key_14/i5551_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_14/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_14_SLICE_620 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_14/i7343_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_14/i7344_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_14/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_14/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_14_SLICE_621 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_14/i7341_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_14/i7342_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_14/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_14/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_14_SLICE_622 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_14/i7339_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_14/i7340_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_14/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_14/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_14_SLICE_623 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_14/key_reg_I_0_2_lut_rep_607 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_14/i7338_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_14/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_15_SLICE_625 ( input B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40100 \u_key_15/i5552_2_lut_rep_436 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \u_key_15/i5553_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \u_key_15/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_15_SLICE_626 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_15/i7306_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_15/i7307_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_15/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_15/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_15_SLICE_627 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_15/i7300_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_15/i7301_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_15/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_15/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_15_SLICE_628 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_15/i7298_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_15/i7299_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_15/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_15/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_15_SLICE_629 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_15/key_reg_I_0_2_lut_rep_546 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_15/i7297_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_15/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_2_SLICE_631 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_key_2/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \u_key_2/i5527_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_2/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_2_SLICE_632 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_2/i7500_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_2/i7501_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_2/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_2/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_2_SLICE_633 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_2/i7498_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_2/i7499_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_2/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_2/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_2_SLICE_634 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_2/i7496_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_2/i7497_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_2/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_2/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_2_SLICE_635 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_2/key_reg_I_0_2_lut_rep_619 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_2/i7495_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_2/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_3_SLICE_637 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_key_3/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \u_key_3/i5529_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_3/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_3_SLICE_638 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_3/i7492_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_3/i7494_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_3/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_3/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_3_SLICE_639 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_3/i7490_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_3/i7491_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_3/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_3/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_3_SLICE_640 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_3/i7488_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_3/i7489_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_3/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_3/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_3_SLICE_641 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_3/key_reg_I_0_2_lut_rep_618 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_3/i7487_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_3/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_4_SLICE_643 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_key_4/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \u_key_4/i5531_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_4/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_4_SLICE_644 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_4/i7479_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_4/i7480_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_4/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_4/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_4_SLICE_645 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_4/i7476_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_4/i7478_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_4/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_4/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_4_SLICE_646 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_4/i7473_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_4/i7475_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_4/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_4/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_4_SLICE_647 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_4/key_reg_I_0_2_lut_rep_617 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_4/i7472_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_4/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_5_SLICE_649 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_key_5/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40096 \u_key_5/i5533_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_5/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_5_SLICE_650 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_5/i7465_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_5/i7466_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_5/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_5/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_5_SLICE_651 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_5/i7463_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_5/i7464_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_5/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_5/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_5_SLICE_652 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_5/i7461_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_5/i7462_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_5/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_5/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_5_SLICE_653 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_5/key_reg_I_0_2_lut_rep_616 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_5/i7460_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_5/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_6_SLICE_655 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_6/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40096 \u_key_6/i5535_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_6/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_6_SLICE_656 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_6/i7451_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_6/i7452_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_6/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_6/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_6_SLICE_657 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_6/i7447_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_6/i7448_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_6/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_6/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_6_SLICE_658 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_6/i7443_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_6/i7444_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_6/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_6/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_6_SLICE_659 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_6/key_reg_I_0_2_lut_rep_615 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_6/i7442_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_6/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_7_SLICE_661 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_7/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40096 \u_key_7/i5537_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_7/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_7_SLICE_662 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_7/i7433_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_7/i7434_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_7/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_7/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_7_SLICE_663 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_7/i7431_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_7/i7432_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_7/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_7/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_7_SLICE_664 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_7/i7429_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_7/i7430_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_7/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_7/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_7_SLICE_665 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_7/key_reg_I_0_2_lut_rep_614 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_7/i7428_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_7/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_8_SLICE_667 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_8/i1_2_lut_3_lut_4_lut_adj_15 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40096 \u_key_8/i5539_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_8/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_8_SLICE_668 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_8/i7409_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_8/i7410_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_8/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_8/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_8_SLICE_669 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_8/i7405_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_8/i7406_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_8/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_8/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_8_SLICE_670 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_8/i7401_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_8/i7402_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_8/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_8/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_8_SLICE_671 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_8/key_reg_I_0_2_lut_rep_613 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_8/i7400_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_8/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_9_SLICE_673 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_9/i1_2_lut_3_lut_4_lut_adj_13 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40096 \u_key_9/i5541_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_9/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_9_SLICE_674 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_9/i7392_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_9/i7393_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_9/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_9/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_9_SLICE_675 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_9/i7390_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_9/i7391_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_9/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_9/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_9_SLICE_676 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_9/i7386_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_9/i7387_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_9/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_9/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_9_SLICE_677 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_9/key_reg_I_0_2_lut_rep_612 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_9/i7385_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_9/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_state_SLICE_679 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40099 \u_key_state/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40096 \u_key_state/i5556_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \u_key_state/delay_cnt_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_key_state_SLICE_680 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_state/i7526_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_state/i7525_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_state/delay_cnt_i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_state/delay_cnt_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_state_SLICE_681 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_state/i7528_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_state/i7527_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_state/delay_cnt_i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_state/delay_cnt_i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_state_SLICE_682 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40097 \u_key_state/i7530_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_state/i7529_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_state/delay_cnt_i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0051 \u_key_state/delay_cnt_i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_key_state_SLICE_683 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40098 \u_key_state/key_reg_I_0_2_lut_rep_606 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \u_key_state/i7531_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0051 \u_key_state/delay_cnt_i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module u_speaker_SLICE_685 ( input B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40098 \u_speaker/i10524_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/PWM_DDS_accumulator_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_686 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_buzzer/i7750_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \u_buzzer/i7345_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/PWM_in__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_in__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0DD0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_687 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_buzzer/i7752_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_buzzer/i7751_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/PWM_in__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_in__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_688 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_buzzer/i7754_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_buzzer/i7753_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/PWM_in__i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_in__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_689 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_buzzer/i7756_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_buzzer/i7755_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/PWM_in__i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_in__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_690 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_buzzer/i7758_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_buzzer/i7757_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/PWM_in__i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_in__i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_691 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_buzzer/i7760_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_buzzer/i7759_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/PWM_in__i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/PWM_in__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_692 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut4 \u_buzzer/i7314_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_buzzer/i7761_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/PWM_in__i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_693 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7640_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \u_speaker/i7628_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C8C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h283C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_694 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7642_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7641_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_695 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7644_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7643_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_696 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7646_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7645_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_697 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7648_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7647_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_698 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7650_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7649_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_699 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7616_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \u_speaker/i7603_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_700 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7618_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7617_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_701 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7620_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7619_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_702 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7622_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7621_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_703 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7624_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7623_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_704 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7626_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7625_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_705 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7829_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7828_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i15 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_706 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7831_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7830_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_707 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7833_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7832_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_708 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7835_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7834_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_709 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7837_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7836_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_710 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut4 \u_speaker/i7838_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_711 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7591_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \u_speaker/i7578_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_712 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7593_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7592_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_713 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7595_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7594_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_714 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7597_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7596_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_715 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7599_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7598_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_716 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7601_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7600_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_717 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7925_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7924_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i15 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_718 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7927_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7926_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_719 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7929_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7928_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_720 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7931_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7930_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_721 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7933_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7932_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_722 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40104 \u_speaker/i7934_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_723 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7776_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \u_speaker/i7763_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_724 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7778_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7777_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_725 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7780_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7779_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_726 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7782_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7781_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_727 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7784_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7783_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_728 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7786_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7785_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_729 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7901_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7900_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i15 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_730 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7903_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7902_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_731 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7905_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7904_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_732 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7907_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7906_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_733 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7909_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7908_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_734 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut4 \u_speaker/i7910_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_735 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7877_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7876_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i15 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_736 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7879_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7878_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_737 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7881_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7880_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_738 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7883_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7882_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_739 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7885_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7884_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_740 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut4 \u_speaker/i7886_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_741 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7739_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \u_speaker/i7726_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_742 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7741_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7740_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_743 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7743_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7742_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_744 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7745_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7744_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_745 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7747_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7746_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_746 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7749_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7748_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_747 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7714_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \u_speaker/i7702_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_748 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7716_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7715_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_749 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7718_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7717_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_750 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7720_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7719_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_751 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7722_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7721_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_752 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7724_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7723_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_753 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7853_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7852_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i15 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_754 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7855_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7854_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_755 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7857_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7856_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_756 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7859_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7858_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_757 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7861_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7860_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_758 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40104 \u_speaker/i7862_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_759 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7690_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \u_speaker/i7677_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_760 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7692_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7691_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_761 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7694_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7693_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_762 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7696_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7695_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_763 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7698_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7697_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_764 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7700_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7699_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_765 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7665_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \u_speaker/i7652_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_766 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7667_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7666_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_767 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7669_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7668_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_768 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7671_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7670_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_769 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7673_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7672_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_770 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7675_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7674_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_771 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40105 \u_speaker/i11669_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 \u_speaker/n17910_bdd_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/en_0__413 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0535) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_772 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40107 \u_speaker/i1_2_lut_adj_52 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40108 i1_4_lut_adj_64( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/en_1__421 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_773 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40042 \u_speaker/u_DDS_2/mux_2173_i2_3_lut_rep_602 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/u_DDS_1/mux_1493_i1_3_lut_rep_603 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_SLICE_775 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40109 \u_speaker/u_DDS_1/i3589_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40110 \u_speaker/u_DDS_1/mux_1493_i4_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/fcw_r_ret4_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_776 ( input D0, C0, B0, A0, DI0, M1, CLK, output F0, Q0, 
    Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, DI0_dly, CLK_dly, M1_dly;

  lut40111 \u_speaker/u_DDS_1/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/fcw_r_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_777 ( input D0, C0, B0, A0, DI0, M1, CLK, output F0, Q0, 
    Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, DI0_dly, CLK_dly, M1_dly;

  lut40112 \u_speaker/u_DDS_1/i2_2_lut_4_lut_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/fcw_r_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4F40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_u_DDS_1_SLICE_778 ( input D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40113 \u_speaker/u_DDS_1/n7599_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_u_DDS_1_SLICE_781 ( input B1, A1, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \u_speaker/u_DDS_1/SLICE_781/u_speaker/u_DDS_1/SLICE_781_K1_H1 , 
         \u_speaker/u_DDS_1/SLICE_781/u_speaker/u_DDS_1/mux_1493_i2/GATE_H0 , 
         VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40114 \u_speaker/u_DDS_1/SLICE_781_K1 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), 
    .Z(\u_speaker/u_DDS_1/SLICE_781/u_speaker/u_DDS_1/SLICE_781_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40114 \u_speaker/u_DDS_1/mux_1493_i2/GATE ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), 
    .Z(\u_speaker/u_DDS_1/SLICE_781/u_speaker/u_DDS_1/mux_1493_i2/GATE_H0 ));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/u_DDS_1/SLICE_781_K0K1MUX ( 
    .D0(\u_speaker/u_DDS_1/SLICE_781/u_speaker/u_DDS_1/mux_1493_i2/GATE_H0 ), 
    .D1(\u_speaker/u_DDS_1/SLICE_781/u_speaker/u_DDS_1/SLICE_781_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_782 ( input D1, C1, B1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40115 \u_speaker/u_DDS_1/mux_1493_i3_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40045 \u_buzzer/i7373_2_lut_rep_575 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/fcw_r_ret8_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFE0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_u_DDS_1_SLICE_783 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    M0, CLK, output OFX0, Q0 );
  wire   \u_speaker/u_DDS_1/SLICE_783/u_speaker/u_DDS_1/SLICE_783_K1_H1 , 
         \u_speaker/u_DDS_1/SLICE_783/u_speaker/u_DDS_1/i12630/GATE_H0 , VCCI, 
         CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40116 \u_speaker/u_DDS_1/SLICE_783_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/u_DDS_1/SLICE_783/u_speaker/u_DDS_1/SLICE_783_K1_H1 ));
  lut40117 \u_speaker/u_DDS_1/i12630/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/u_DDS_1/SLICE_783/u_speaker/u_DDS_1/i12630/GATE_H0 ));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_speaker/u_DDS_1/SLICE_783_K0K1MUX ( 
    .D0(\u_speaker/u_DDS_1/SLICE_783/u_speaker/u_DDS_1/i12630/GATE_H0 ), 
    .D1(\u_speaker/u_DDS_1/SLICE_783/u_speaker/u_DDS_1/SLICE_783_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h038B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_u_DDS_1_SLICE_785 ( input D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40110 \u_speaker/u_DDS_1/i12_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_u_DDS_1_SLICE_787 ( input D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40110 \u_speaker/u_DDS_1/i10511_4_lut_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/fcw_r_i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_SLICE_788 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40101 \u_speaker/i7450_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40118 \u_speaker/i7456_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0BB0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_789 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40118 \u_speaker/i7441_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40101 \u_speaker/i7446_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_790 ( input C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40119 \u_speaker/u_DDS_4/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \u_speaker/i7427_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_791 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40055 \u_speaker/i7265_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \u_buzzer/i1_4_lut_adj_19 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0057 \u_speaker/rom1_4__I_6_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_792 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40120 \u_speaker/i4516_2_lut_rep_483_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40058 \u_speaker/i8095_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0057 \u_speaker/rom1_4__I_6_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFA2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_793 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_speaker/i2_3_lut_4_lut_adj_32 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40121 \u_speaker/i1_3_lut_4_lut_adj_31 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0057 \u_speaker/rom1_4__I_6_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_794 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40122 \u_speaker/i129_3_lut_rep_516_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40123 \u_speaker/i2_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0057 \u_speaker/rom1_4__I_6_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_795 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_speaker/i3_3_lut_rep_460_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40121 \u_speaker/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0057 \u_speaker/rom2_4__I_7_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_796 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7922_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7923_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_797 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7920_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7921_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_798 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7918_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7919_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_799 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7916_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7917_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_800 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7914_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7915_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_801 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7912_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7913_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_802 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_speaker/i1_2_lut_3_lut_4_lut_adj_47 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40104 \u_speaker/i7911_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_1/count_2226__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_803 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7630_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7629_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_804 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7632_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7631_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_805 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7634_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7633_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_806 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7636_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7635_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_807 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7638_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7637_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_808 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40102 \u_speaker/i7639_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_10/count__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_810 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40124 \u_buzzer/i1_2_lut_3_lut_4_lut_4_lut_4_lut_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40125 \u_buzzer/i4126_2_lut_3_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h20D2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2DF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_811 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40126 \u_buzzer/i3039_2_lut_4_lut_4_lut_4_lut_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40127 \u_speaker/u_DDS_10/n18784_bdd_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8188) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_812 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40128 \u_buzzer/i3188_2_lut_rep_464_3_lut_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40129 \u_buzzer/i3047_2_lut_3_lut_4_lut_4_lut_4_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_10/fcw_r_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD2F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_813 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40130 \u_buzzer/i6114_1_lut_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40131 \u_buzzer/i3784_2_lut_3_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0027 \u_speaker/u_DDS_10/fcw_r_i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_814 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7605_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7604_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_815 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7607_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7606_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_816 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7609_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7608_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_817 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7611_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7610_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_818 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7613_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7612_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_819 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7615_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7614_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/count__i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_820 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40132 \u_buzzer/i10322_2_lut_rep_535_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40133 \u_speaker/u_DDS_2/i3448_2_lut_rep_523_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2D22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h35CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_821 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40040 \u_speaker/u_DDS_2/i4027_3_lut_4_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40134 \u_buzzer/i4020_2_lut_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_825 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7826_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7827_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_826 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7824_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7825_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_827 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7822_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7823_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_828 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7820_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7821_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_829 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7818_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7819_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_830 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7816_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7817_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_831 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_buzzer/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \u_speaker/i7815_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_12/count_2230__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_832 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7580_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7579_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_833 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7582_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7581_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_834 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7584_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7583_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_835 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7586_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7585_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_836 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7588_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7587_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_837 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7590_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7589_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_13/count__i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_838 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7765_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7764_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_839 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7767_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7766_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_840 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7769_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7768_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_841 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7771_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7770_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_842 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7773_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7772_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_843 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7775_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7774_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_2/count__i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_847 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7898_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7899_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_848 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7896_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7897_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_849 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7894_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7895_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_850 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7892_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7893_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_851 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7890_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7891_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_852 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7888_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7889_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_853 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40042 \u_speaker/n18346_bdd_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7887_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_3/count_2227__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_854 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7874_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7875_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_855 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7872_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7873_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_856 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7870_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7871_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_857 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7868_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7869_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_858 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7865_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7866_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_859 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \u_speaker/i7863_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7864_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_860 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40135 \u_buzzer/i7812_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \u_speaker/i7867_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_4/count_2228__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9090) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_861 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7728_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7727_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_862 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7730_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7729_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_863 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7732_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7731_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_864 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7734_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7733_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_865 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7736_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7735_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_866 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7738_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7737_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/count__i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_867 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  lut40052 \u_key_14/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_4/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/fcw_r_ret6_i4 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_5/fcw_r_ret6_i3 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module SLICE_868 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40136 \u_buzzer/i4006_3_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40129 \u_buzzer/i3998_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/fcw_r_ret6_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_5/fcw_r_ret6_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2FF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_869 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  lut40052 \u_key_15/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_15/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/fcw_r_ret6_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module SLICE_870 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, CLK_NOTIN, M0_dly, CLK_dly;

  lut40052 \u_key_3/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_6/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_5/fcw_r_ret6_i9 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_SLICE_871 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7704_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7703_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_872 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7706_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7705_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_873 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7708_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7707_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_874 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7710_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7709_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_875 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7712_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7711_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_876 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \u_buzzer/i2_3_lut_4_lut_adj_25 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40102 \u_speaker/i7713_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_6/count__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_877 ( input D1, C1, B1, A1, C0, B0, A0, M0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, M0_dly, CLK_dly;

  lut40052 \u_key_7/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i11833_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_6/fcw_r_ret4_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module SLICE_878 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40137 \u_buzzer/i4128_2_lut_rep_508_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40138 \u_speaker/u_DDS_10/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/fcw_r_ret4_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6996) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_879 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40139 \u_speaker/u_DDS_6/i4148_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40140 \u_speaker/u_DDS_2/i4155_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/fcw_r_ret4_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_6/fcw_r_ret4_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h17E8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEA88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_880 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40141 \u_speaker/u_DDS_2/i10328_2_lut_rep_534_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40142 \u_speaker/u_DDS_10/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_6/fcw_r_ret4_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2DD2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_881 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  lut40052 \u_key_1/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_9/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/fcw_r_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/fcw_r_i1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module SLICE_882 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  lut40052 \u_key_13/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_2/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/fcw_r_i4 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/fcw_r_i3 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module SLICE_883 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  lut40052 \u_key_12/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_11/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/fcw_r_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/fcw_r_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_SLICE_884 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7850_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7851_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_885 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7848_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7849_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_886 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7846_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7847_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_887 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7844_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7845_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_888 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7842_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7843_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_889 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40104 \u_speaker/i7840_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \u_speaker/i7841_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_890 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40050 \u_buzzer/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40104 \u_speaker/i7839_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_7/count_2229__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_891 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7679_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7678_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_892 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7681_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7680_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_893 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7683_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7682_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_894 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7685_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7684_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_895 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7687_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7686_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_896 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7689_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7688_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/count__i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_897 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  lut40052 \u_key_10/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_8/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_8/fcw_r_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_8/fcw_r_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_SLICE_898 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7654_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7653_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_899 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7656_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7655_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_900 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7658_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7657_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_901 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7660_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7659_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_902 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7662_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7661_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_903 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40102 \u_speaker/i7664_2_lut_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 \u_speaker/i7663_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/count__i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_904 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  lut40052 \u_key_5/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i16_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_9/fcw_r_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_9/fcw_r_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module u_speaker_SLICE_905 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40042 \u_speaker/mux_1486_i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1486_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_count1_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_count1_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_SLICE_906 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40042 \u_speaker/mux_1486_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1486_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_count1_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_count1_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_SLICE_907 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40042 \u_speaker/mux_1486_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1486_i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_count1_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_count1_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_SLICE_908 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40042 \u_speaker/mux_1486_i8_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1486_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_count1_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_count1_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module u_speaker_SLICE_909 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly;

  lut40042 \u_speaker/mux_1486_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1486_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \u_speaker/u_count1_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_count1_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_910 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M1, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, M1_dly;

  lut40050 i11716_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \u_speaker/mux_1486_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \u_speaker/u_DDS_9/fcw_r_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_count1_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
  endspecify

endmodule

module u_speaker_SLICE_911 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_911/u_speaker/mux_1604_i1/GATE_H1 , 
         \u_speaker/SLICE_911/u_speaker/SLICE_911_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i1/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_911/u_speaker/mux_1604_i1/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_911_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_911/u_speaker/SLICE_911_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_911_K0K1MUX ( 
    .D0(\u_speaker/SLICE_911/u_speaker/SLICE_911_K0_H0 ), 
    .D1(\u_speaker/SLICE_911/u_speaker/mux_1604_i1/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_911_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_912 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_912/u_speaker/mux_1604_i2/GATE_H1 , 
         \u_speaker/SLICE_912/u_speaker/SLICE_912_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i2/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_912/u_speaker/mux_1604_i2/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_912_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_912/u_speaker/SLICE_912_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_912_K0K1MUX ( 
    .D0(\u_speaker/SLICE_912/u_speaker/SLICE_912_K0_H0 ), 
    .D1(\u_speaker/SLICE_912/u_speaker/mux_1604_i2/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_912_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_913 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_913/u_speaker/mux_1604_i3/GATE_H1 , 
         \u_speaker/SLICE_913/u_speaker/SLICE_913_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i3/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_913/u_speaker/mux_1604_i3/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_913_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_913/u_speaker/SLICE_913_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_913_K0K1MUX ( 
    .D0(\u_speaker/SLICE_913/u_speaker/SLICE_913_K0_H0 ), 
    .D1(\u_speaker/SLICE_913/u_speaker/mux_1604_i3/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_913_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_914 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_914/u_speaker/mux_1604_i4/GATE_H1 , 
         \u_speaker/SLICE_914/u_speaker/SLICE_914_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i4/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_914/u_speaker/mux_1604_i4/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_914_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_914/u_speaker/SLICE_914_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_914_K0K1MUX ( 
    .D0(\u_speaker/SLICE_914/u_speaker/SLICE_914_K0_H0 ), 
    .D1(\u_speaker/SLICE_914/u_speaker/mux_1604_i4/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_914_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_915 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_915/u_speaker/mux_1604_i5/GATE_H1 , 
         \u_speaker/SLICE_915/u_speaker/SLICE_915_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i5/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_915/u_speaker/mux_1604_i5/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_915_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_915/u_speaker/SLICE_915_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_915_K0K1MUX ( 
    .D0(\u_speaker/SLICE_915/u_speaker/SLICE_915_K0_H0 ), 
    .D1(\u_speaker/SLICE_915/u_speaker/mux_1604_i5/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_915_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_916 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_916/u_speaker/mux_1604_i6/GATE_H1 , 
         \u_speaker/SLICE_916/u_speaker/SLICE_916_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i6/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_916/u_speaker/mux_1604_i6/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_916_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_916/u_speaker/SLICE_916_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_916_K0K1MUX ( 
    .D0(\u_speaker/SLICE_916/u_speaker/SLICE_916_K0_H0 ), 
    .D1(\u_speaker/SLICE_916/u_speaker/mux_1604_i6/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_916_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_917 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_917/u_speaker/mux_1604_i7/GATE_H1 , 
         \u_speaker/SLICE_917/u_speaker/SLICE_917_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i7/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_917/u_speaker/mux_1604_i7/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_917_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_917/u_speaker/SLICE_917_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_917_K0K1MUX ( 
    .D0(\u_speaker/SLICE_917/u_speaker/SLICE_917_K0_H0 ), 
    .D1(\u_speaker/SLICE_917/u_speaker/mux_1604_i7/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_917_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_918 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_918/u_speaker/mux_1604_i8/GATE_H1 , 
         \u_speaker/SLICE_918/u_speaker/SLICE_918_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i8/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_918/u_speaker/mux_1604_i8/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_918_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_918/u_speaker/SLICE_918_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_918_K0K1MUX ( 
    .D0(\u_speaker/SLICE_918/u_speaker/SLICE_918_K0_H0 ), 
    .D1(\u_speaker/SLICE_918/u_speaker/mux_1604_i8/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_918_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_919 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_919/u_speaker/mux_1604_i9/GATE_H1 , 
         \u_speaker/SLICE_919/u_speaker/SLICE_919_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i9/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_919/u_speaker/mux_1604_i9/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_919_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_919/u_speaker/SLICE_919_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_919_K0K1MUX ( 
    .D0(\u_speaker/SLICE_919/u_speaker/SLICE_919_K0_H0 ), 
    .D1(\u_speaker/SLICE_919/u_speaker/mux_1604_i9/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_919_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_920 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_920/u_speaker/mux_1604_i10/GATE_H1 , 
         \u_speaker/SLICE_920/u_speaker/SLICE_920_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i10/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_920/u_speaker/mux_1604_i10/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_920_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_920/u_speaker/SLICE_920_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_920_K0K1MUX ( 
    .D0(\u_speaker/SLICE_920/u_speaker/SLICE_920_K0_H0 ), 
    .D1(\u_speaker/SLICE_920/u_speaker/mux_1604_i10/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_920_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module u_speaker_SLICE_921 ( input C1, B1, A1, C0, B0, A0, DI1, M1, M0, FXB, 
    FXA, LSR, CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \u_speaker/SLICE_921/u_speaker/mux_1604_i11/GATE_H1 , 
         \u_speaker/SLICE_921/u_speaker/SLICE_921_K0_H0 , VCCI, CLK_NOTIN, 
         DI1_dly, CLK_dly, LSR_dly;

  lut40143 \u_speaker/mux_1604_i11/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/SLICE_921/u_speaker/mux_1604_i11/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/SLICE_921_K0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/SLICE_921/u_speaker/SLICE_921_K0_H0 ));
  vmuxregsre0027 \u_speaker/u_count2_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 \u_speaker/SLICE_921_K0K1MUX ( 
    .D0(\u_speaker/SLICE_921/u_speaker/SLICE_921_K0_H0 ), 
    .D1(\u_speaker/SLICE_921/u_speaker/mux_1604_i11/GATE_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \u_speaker/SLICE_921_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_922 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \u_key_state/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_state/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0095 \u_speaker/yinjie_box_i0 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/yinjie_box_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module SLICE_923 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40144 i2_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40145 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0051 yinjie_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0032 yinjie_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD2E1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF10E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_924 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40146 i1_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40144 i2_4_lut_4_lut_adj_56( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0051 yinjie_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB23) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12624_SLICE_925 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_speaker/i12624/SLICE_925/u_speaker/i12624/SLICE_925_K1_H1 , 
         \u_speaker/i12624/SLICE_925/u_speaker/i12624/GATE_H0 ;

  lut40147 \u_speaker/i12624/SLICE_925_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/i12624/SLICE_925/u_speaker/i12624/SLICE_925_K1_H1 ));
  lut40148 \u_speaker/i12624/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12624/SLICE_925/u_speaker/i12624/GATE_H0 ));
  selmux2 \u_speaker/i12624/SLICE_925_K0K1MUX ( 
    .D0(\u_speaker/i12624/SLICE_925/u_speaker/i12624/GATE_H0 ), 
    .D1(\u_speaker/i12624/SLICE_925/u_speaker/i12624/SLICE_925_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h64C4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12600_SLICE_926 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_speaker/i12600/SLICE_926/u_speaker/i12600/SLICE_926_K1_H1 , 
         \u_speaker/i12600/SLICE_926/u_speaker/i12600/GATE_H0 ;

  lut40149 \u_speaker/i12600/SLICE_926_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/i12600/SLICE_926/u_speaker/i12600/SLICE_926_K1_H1 ));
  lut40150 \u_speaker/i12600/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12600/SLICE_926/u_speaker/i12600/GATE_H0 ));
  selmux2 \u_speaker/i12600/SLICE_926_K0K1MUX ( 
    .D0(\u_speaker/i12600/SLICE_926/u_speaker/i12600/GATE_H0 ), 
    .D1(\u_speaker/i12600/SLICE_926/u_speaker/i12600/SLICE_926_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7520) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12596_SLICE_927 ( input B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \u_speaker/i12596/SLICE_927/u_speaker/i12596/SLICE_927_K1_H1 , 
         \u_speaker/i12596/SLICE_927/u_speaker/i12596/GATE_H0 ;

  lut40151 \u_speaker/i12596/SLICE_927_K1 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/i12596/SLICE_927/u_speaker/i12596/SLICE_927_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40152 \u_speaker/i12596/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/i12596/SLICE_927/u_speaker/i12596/GATE_H0 ));
  selmux2 \u_speaker/i12596/SLICE_927_K0K1MUX ( 
    .D0(\u_speaker/i12596/SLICE_927/u_speaker/i12596/GATE_H0 ), 
    .D1(\u_speaker/i12596/SLICE_927/u_speaker/i12596/SLICE_927_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4747) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i11954_SLICE_928 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \u_speaker/i11954/SLICE_928/u_speaker/i11954/SLICE_928_K1_H1 , 
         \u_speaker/i11954/SLICE_928/u_speaker/i11954/GATE_H0 ;

  lut40153 \u_speaker/i11954/SLICE_928_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/i11954/SLICE_928/u_speaker/i11954/SLICE_928_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/i11954/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/i11954/SLICE_928/u_speaker/i11954/GATE_H0 ));
  selmux2 \u_speaker/i11954/SLICE_928_K0K1MUX ( 
    .D0(\u_speaker/i11954/SLICE_928/u_speaker/i11954/GATE_H0 ), 
    .D1(\u_speaker/i11954/SLICE_928/u_speaker/i11954/SLICE_928_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_mux_1492_i11_SLICE_929 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i11/SLICE_929/u_speaker/mux_1492_i11/SLICE_929_K1_H1 
         , \u_speaker/mux_1492_i11/SLICE_929/u_speaker/mux_1492_i11/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i11/SLICE_929_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i11/SLICE_929/u_speaker/mux_1492_i11/SLICE_929_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i11/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i11/SLICE_929/u_speaker/mux_1492_i11/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i11/SLICE_929_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i11/SLICE_929/u_speaker/mux_1492_i11/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i11/SLICE_929/u_speaker/mux_1492_i11/SLICE_929_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i10_SLICE_930 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i10/SLICE_930/u_speaker/mux_1492_i10/SLICE_930_K1_H1 
         , \u_speaker/mux_1492_i10/SLICE_930/u_speaker/mux_1492_i10/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i10/SLICE_930_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i10/SLICE_930/u_speaker/mux_1492_i10/SLICE_930_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i10/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i10/SLICE_930/u_speaker/mux_1492_i10/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i10/SLICE_930_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i10/SLICE_930/u_speaker/mux_1492_i10/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i10/SLICE_930/u_speaker/mux_1492_i10/SLICE_930_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i9_SLICE_931 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i9/SLICE_931/u_speaker/mux_1492_i9/SLICE_931_K1_H1 , 
         \u_speaker/mux_1492_i9/SLICE_931/u_speaker/mux_1492_i9/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i9/SLICE_931_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i9/SLICE_931/u_speaker/mux_1492_i9/SLICE_931_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i9/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i9/SLICE_931/u_speaker/mux_1492_i9/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i9/SLICE_931_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i9/SLICE_931/u_speaker/mux_1492_i9/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i9/SLICE_931/u_speaker/mux_1492_i9/SLICE_931_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i8_SLICE_932 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i8/SLICE_932/u_speaker/mux_1492_i8/SLICE_932_K1_H1 , 
         \u_speaker/mux_1492_i8/SLICE_932/u_speaker/mux_1492_i8/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i8/SLICE_932_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i8/SLICE_932/u_speaker/mux_1492_i8/SLICE_932_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i8/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i8/SLICE_932/u_speaker/mux_1492_i8/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i8/SLICE_932_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i8/SLICE_932/u_speaker/mux_1492_i8/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i8/SLICE_932/u_speaker/mux_1492_i8/SLICE_932_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i7_SLICE_933 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i7/SLICE_933/u_speaker/mux_1492_i7/SLICE_933_K1_H1 , 
         \u_speaker/mux_1492_i7/SLICE_933/u_speaker/mux_1492_i7/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i7/SLICE_933_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i7/SLICE_933/u_speaker/mux_1492_i7/SLICE_933_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i7/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i7/SLICE_933/u_speaker/mux_1492_i7/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i7/SLICE_933_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i7/SLICE_933/u_speaker/mux_1492_i7/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i7/SLICE_933/u_speaker/mux_1492_i7/SLICE_933_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i6_SLICE_934 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i6/SLICE_934/u_speaker/mux_1492_i6/SLICE_934_K1_H1 , 
         \u_speaker/mux_1492_i6/SLICE_934/u_speaker/mux_1492_i6/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i6/SLICE_934_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i6/SLICE_934/u_speaker/mux_1492_i6/SLICE_934_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i6/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i6/SLICE_934/u_speaker/mux_1492_i6/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i6/SLICE_934_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i6/SLICE_934/u_speaker/mux_1492_i6/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i6/SLICE_934/u_speaker/mux_1492_i6/SLICE_934_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i5_SLICE_935 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i5/SLICE_935/u_speaker/mux_1492_i5/SLICE_935_K1_H1 , 
         \u_speaker/mux_1492_i5/SLICE_935/u_speaker/mux_1492_i5/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i5/SLICE_935_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i5/SLICE_935/u_speaker/mux_1492_i5/SLICE_935_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i5/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i5/SLICE_935/u_speaker/mux_1492_i5/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i5/SLICE_935_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i5/SLICE_935/u_speaker/mux_1492_i5/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i5/SLICE_935/u_speaker/mux_1492_i5/SLICE_935_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i4_SLICE_936 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i4/SLICE_936/u_speaker/mux_1492_i4/SLICE_936_K1_H1 , 
         \u_speaker/mux_1492_i4/SLICE_936/u_speaker/mux_1492_i4/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i4/SLICE_936_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i4/SLICE_936/u_speaker/mux_1492_i4/SLICE_936_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i4/SLICE_936/u_speaker/mux_1492_i4/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i4/SLICE_936_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i4/SLICE_936/u_speaker/mux_1492_i4/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i4/SLICE_936/u_speaker/mux_1492_i4/SLICE_936_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i3_SLICE_937 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i3/SLICE_937/u_speaker/mux_1492_i3/SLICE_937_K1_H1 , 
         \u_speaker/mux_1492_i3/SLICE_937/u_speaker/mux_1492_i3/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i3/SLICE_937_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i3/SLICE_937/u_speaker/mux_1492_i3/SLICE_937_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i3/SLICE_937/u_speaker/mux_1492_i3/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i3/SLICE_937_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i3/SLICE_937/u_speaker/mux_1492_i3/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i3/SLICE_937/u_speaker/mux_1492_i3/SLICE_937_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i2_SLICE_938 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i2/SLICE_938/u_speaker/mux_1492_i2/SLICE_938_K1_H1 , 
         \u_speaker/mux_1492_i2/SLICE_938/u_speaker/mux_1492_i2/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i2/SLICE_938_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i2/SLICE_938/u_speaker/mux_1492_i2/SLICE_938_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i2/SLICE_938/u_speaker/mux_1492_i2/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i2/SLICE_938_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i2/SLICE_938/u_speaker/mux_1492_i2/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i2/SLICE_938/u_speaker/mux_1492_i2/SLICE_938_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i11_SLICE_939 ( input C1, B1, A1, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i11/SLICE_939/u_speaker/mux_1581_i11/SLICE_939_K1_H1 
         , \u_speaker/mux_1581_i11/SLICE_939/u_speaker/mux_1581_i11/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i11/SLICE_939_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i11/SLICE_939/u_speaker/mux_1581_i11/SLICE_939_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i11/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i11/SLICE_939/u_speaker/mux_1581_i11/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i11/SLICE_939_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i11/SLICE_939/u_speaker/mux_1581_i11/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i11/SLICE_939/u_speaker/mux_1581_i11/SLICE_939_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_mux_1581_i10_SLICE_940 ( input C1, B1, A1, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i10/SLICE_940/u_speaker/mux_1581_i10/SLICE_940_K1_H1 
         , \u_speaker/mux_1581_i10/SLICE_940/u_speaker/mux_1581_i10/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i10/SLICE_940_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i10/SLICE_940/u_speaker/mux_1581_i10/SLICE_940_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i10/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i10/SLICE_940/u_speaker/mux_1581_i10/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i10/SLICE_940_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i10/SLICE_940/u_speaker/mux_1581_i10/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i10/SLICE_940/u_speaker/mux_1581_i10/SLICE_940_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i9_SLICE_941 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i9/SLICE_941/u_speaker/mux_1581_i9/SLICE_941_K1_H1 , 
         \u_speaker/mux_1581_i9/SLICE_941/u_speaker/mux_1581_i9/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i9/SLICE_941_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i9/SLICE_941/u_speaker/mux_1581_i9/SLICE_941_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i9/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i9/SLICE_941/u_speaker/mux_1581_i9/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i9/SLICE_941_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i9/SLICE_941/u_speaker/mux_1581_i9/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i9/SLICE_941/u_speaker/mux_1581_i9/SLICE_941_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i8_SLICE_942 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i8/SLICE_942/u_speaker/mux_1581_i8/SLICE_942_K1_H1 , 
         \u_speaker/mux_1581_i8/SLICE_942/u_speaker/mux_1581_i8/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i8/SLICE_942_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i8/SLICE_942/u_speaker/mux_1581_i8/SLICE_942_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i8/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i8/SLICE_942/u_speaker/mux_1581_i8/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i8/SLICE_942_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i8/SLICE_942/u_speaker/mux_1581_i8/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i8/SLICE_942/u_speaker/mux_1581_i8/SLICE_942_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i7_SLICE_943 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i7/SLICE_943/u_speaker/mux_1581_i7/SLICE_943_K1_H1 , 
         \u_speaker/mux_1581_i7/SLICE_943/u_speaker/mux_1581_i7/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i7/SLICE_943_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i7/SLICE_943/u_speaker/mux_1581_i7/SLICE_943_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i7/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i7/SLICE_943/u_speaker/mux_1581_i7/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i7/SLICE_943_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i7/SLICE_943/u_speaker/mux_1581_i7/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i7/SLICE_943/u_speaker/mux_1581_i7/SLICE_943_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i6_SLICE_944 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i6/SLICE_944/u_speaker/mux_1581_i6/SLICE_944_K1_H1 , 
         \u_speaker/mux_1581_i6/SLICE_944/u_speaker/mux_1581_i6/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i6/SLICE_944_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i6/SLICE_944/u_speaker/mux_1581_i6/SLICE_944_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i6/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i6/SLICE_944/u_speaker/mux_1581_i6/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i6/SLICE_944_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i6/SLICE_944/u_speaker/mux_1581_i6/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i6/SLICE_944/u_speaker/mux_1581_i6/SLICE_944_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i5_SLICE_945 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i5/SLICE_945/u_speaker/mux_1581_i5/SLICE_945_K1_H1 , 
         \u_speaker/mux_1581_i5/SLICE_945/u_speaker/mux_1581_i5/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i5/SLICE_945_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i5/SLICE_945/u_speaker/mux_1581_i5/SLICE_945_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i5/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i5/SLICE_945/u_speaker/mux_1581_i5/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i5/SLICE_945_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i5/SLICE_945/u_speaker/mux_1581_i5/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i5/SLICE_945/u_speaker/mux_1581_i5/SLICE_945_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i4_SLICE_946 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i4/SLICE_946/u_speaker/mux_1581_i4/SLICE_946_K1_H1 , 
         \u_speaker/mux_1581_i4/SLICE_946/u_speaker/mux_1581_i4/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i4/SLICE_946_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i4/SLICE_946/u_speaker/mux_1581_i4/SLICE_946_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i4/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i4/SLICE_946/u_speaker/mux_1581_i4/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i4/SLICE_946_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i4/SLICE_946/u_speaker/mux_1581_i4/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i4/SLICE_946/u_speaker/mux_1581_i4/SLICE_946_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i3_SLICE_947 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i3/SLICE_947/u_speaker/mux_1581_i3/SLICE_947_K1_H1 , 
         \u_speaker/mux_1581_i3/SLICE_947/u_speaker/mux_1581_i3/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i3/SLICE_947_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i3/SLICE_947/u_speaker/mux_1581_i3/SLICE_947_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i3/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i3/SLICE_947/u_speaker/mux_1581_i3/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i3/SLICE_947_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i3/SLICE_947/u_speaker/mux_1581_i3/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i3/SLICE_947/u_speaker/mux_1581_i3/SLICE_947_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i2_SLICE_948 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i2/SLICE_948/u_speaker/mux_1581_i2/SLICE_948_K1_H1 , 
         \u_speaker/mux_1581_i2/SLICE_948/u_speaker/mux_1581_i2/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i2/SLICE_948_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i2/SLICE_948/u_speaker/mux_1581_i2/SLICE_948_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i2/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i2/SLICE_948/u_speaker/mux_1581_i2/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i2/SLICE_948_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i2/SLICE_948/u_speaker/mux_1581_i2/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i2/SLICE_948/u_speaker/mux_1581_i2/SLICE_948_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1492_i1_SLICE_949 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1492_i1/SLICE_949/u_speaker/mux_1492_i1/SLICE_949_K1_H1 , 
         \u_speaker/mux_1492_i1/SLICE_949/u_speaker/mux_1492_i1/GATE_H0 ;

  lut40143 \u_speaker/mux_1492_i1/SLICE_949_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1492_i1/SLICE_949/u_speaker/mux_1492_i1/SLICE_949_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1492_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1492_i1/SLICE_949/u_speaker/mux_1492_i1/GATE_H0 ));
  selmux2 \u_speaker/mux_1492_i1/SLICE_949_K0K1MUX ( 
    .D0(\u_speaker/mux_1492_i1/SLICE_949/u_speaker/mux_1492_i1/GATE_H0 ), 
    .D1(\u_speaker/mux_1492_i1/SLICE_949/u_speaker/mux_1492_i1/SLICE_949_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1581_i1_SLICE_950 ( input C1, B1, A1, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1581_i1/SLICE_950/u_speaker/mux_1581_i1/SLICE_950_K1_H1 , 
         \u_speaker/mux_1581_i1/SLICE_950/u_speaker/mux_1581_i1/GATE_H0 ;

  lut40143 \u_speaker/mux_1581_i1/SLICE_950_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1581_i1/SLICE_950/u_speaker/mux_1581_i1/SLICE_950_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \u_speaker/mux_1581_i1/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/mux_1581_i1/SLICE_950/u_speaker/mux_1581_i1/GATE_H0 ));
  selmux2 \u_speaker/mux_1581_i1/SLICE_950_K0K1MUX ( 
    .D0(\u_speaker/mux_1581_i1/SLICE_950/u_speaker/mux_1581_i1/GATE_H0 ), 
    .D1(\u_speaker/mux_1581_i1/SLICE_950/u_speaker/mux_1581_i1/SLICE_950_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i2_SLICE_951 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i2/SLICE_951/u_speaker/mux_1579_i2/SLICE_951_K1_H1 , 
         \u_speaker/mux_1579_i2/SLICE_951/u_speaker/mux_1579_i2/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i2/SLICE_951_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i2/SLICE_951/u_speaker/mux_1579_i2/SLICE_951_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i2/SLICE_951/u_speaker/mux_1579_i2/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i2/SLICE_951_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i2/SLICE_951/u_speaker/mux_1579_i2/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i2/SLICE_951/u_speaker/mux_1579_i2/SLICE_951_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i2/SLICE_951_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i3_SLICE_952 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i3/SLICE_952/u_speaker/mux_1579_i3/SLICE_952_K1_H1 , 
         \u_speaker/mux_1579_i3/SLICE_952/u_speaker/mux_1579_i3/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i3/SLICE_952_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i3/SLICE_952/u_speaker/mux_1579_i3/SLICE_952_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i3/SLICE_952/u_speaker/mux_1579_i3/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i3/SLICE_952_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i3/SLICE_952/u_speaker/mux_1579_i3/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i3/SLICE_952/u_speaker/mux_1579_i3/SLICE_952_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i3/SLICE_952_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i4_SLICE_953 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i4/SLICE_953/u_speaker/mux_1579_i4/SLICE_953_K1_H1 , 
         \u_speaker/mux_1579_i4/SLICE_953/u_speaker/mux_1579_i4/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i4/SLICE_953_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i4/SLICE_953/u_speaker/mux_1579_i4/SLICE_953_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i4/SLICE_953/u_speaker/mux_1579_i4/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i4/SLICE_953_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i4/SLICE_953/u_speaker/mux_1579_i4/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i4/SLICE_953/u_speaker/mux_1579_i4/SLICE_953_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i4/SLICE_953_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i5_SLICE_954 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i5/SLICE_954/u_speaker/mux_1579_i5/SLICE_954_K1_H1 , 
         \u_speaker/mux_1579_i5/SLICE_954/u_speaker/mux_1579_i5/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i5/SLICE_954_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i5/SLICE_954/u_speaker/mux_1579_i5/SLICE_954_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i5/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i5/SLICE_954/u_speaker/mux_1579_i5/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i5/SLICE_954_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i5/SLICE_954/u_speaker/mux_1579_i5/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i5/SLICE_954/u_speaker/mux_1579_i5/SLICE_954_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i5/SLICE_954_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_i12656_SLICE_955 ( input C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, \u_speaker/i12656/SLICE_955/u_speaker/i12656/SLICE_955_K1_H1 , 
         \u_speaker/i12656/SLICE_955/u_speaker/i12656/GATE_H0 ;

  lut40155 \u_speaker/i12656/SLICE_955_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/i12656/SLICE_955/u_speaker/i12656/SLICE_955_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40156 \u_speaker/i12656/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12656/SLICE_955/u_speaker/i12656/GATE_H0 ));
  selmux2 \u_speaker/i12656/SLICE_955_K0K1MUX ( 
    .D0(\u_speaker/i12656/SLICE_955/u_speaker/i12656/GATE_H0 ), 
    .D1(\u_speaker/i12656/SLICE_955/u_speaker/i12656/SLICE_955_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1B1B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5C5F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_mux_1579_i6_SLICE_956 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i6/SLICE_956/u_speaker/mux_1579_i6/SLICE_956_K1_H1 , 
         \u_speaker/mux_1579_i6/SLICE_956/u_speaker/mux_1579_i6/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i6/SLICE_956_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i6/SLICE_956/u_speaker/mux_1579_i6/SLICE_956_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i6/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i6/SLICE_956/u_speaker/mux_1579_i6/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i6/SLICE_956_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i6/SLICE_956/u_speaker/mux_1579_i6/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i6/SLICE_956/u_speaker/mux_1579_i6/SLICE_956_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i6/SLICE_956_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i7_SLICE_957 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i7/SLICE_957/u_speaker/mux_1579_i7/SLICE_957_K1_H1 , 
         \u_speaker/mux_1579_i7/SLICE_957/u_speaker/mux_1579_i7/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i7/SLICE_957_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i7/SLICE_957/u_speaker/mux_1579_i7/SLICE_957_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i7/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i7/SLICE_957/u_speaker/mux_1579_i7/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i7/SLICE_957_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i7/SLICE_957/u_speaker/mux_1579_i7/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i7/SLICE_957/u_speaker/mux_1579_i7/SLICE_957_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i7/SLICE_957_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i8_SLICE_958 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i8/SLICE_958/u_speaker/mux_1579_i8/SLICE_958_K1_H1 , 
         \u_speaker/mux_1579_i8/SLICE_958/u_speaker/mux_1579_i8/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i8/SLICE_958_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i8/SLICE_958/u_speaker/mux_1579_i8/SLICE_958_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i8/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i8/SLICE_958/u_speaker/mux_1579_i8/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i8/SLICE_958_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i8/SLICE_958/u_speaker/mux_1579_i8/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i8/SLICE_958/u_speaker/mux_1579_i8/SLICE_958_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i8/SLICE_958_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i9_SLICE_959 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i9/SLICE_959/u_speaker/mux_1579_i9/SLICE_959_K1_H1 , 
         \u_speaker/mux_1579_i9/SLICE_959/u_speaker/mux_1579_i9/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i9/SLICE_959_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i9/SLICE_959/u_speaker/mux_1579_i9/SLICE_959_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i9/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i9/SLICE_959/u_speaker/mux_1579_i9/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i9/SLICE_959_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i9/SLICE_959/u_speaker/mux_1579_i9/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i9/SLICE_959/u_speaker/mux_1579_i9/SLICE_959_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i9/SLICE_959_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i10_SLICE_960 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i10/SLICE_960/u_speaker/mux_1579_i10/SLICE_960_K1_H1 
         , \u_speaker/mux_1579_i10/SLICE_960/u_speaker/mux_1579_i10/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i10/SLICE_960_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i10/SLICE_960/u_speaker/mux_1579_i10/SLICE_960_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i10/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i10/SLICE_960/u_speaker/mux_1579_i10/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i10/SLICE_960_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i10/SLICE_960/u_speaker/mux_1579_i10/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i10/SLICE_960/u_speaker/mux_1579_i10/SLICE_960_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i10/SLICE_960_FXMUX ( .D0(FXA), .D1(FXB), 
    .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i11_SLICE_961 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i11/SLICE_961/u_speaker/mux_1579_i11/SLICE_961_K1_H1 
         , \u_speaker/mux_1579_i11/SLICE_961/u_speaker/mux_1579_i11/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i11/SLICE_961_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i11/SLICE_961/u_speaker/mux_1579_i11/SLICE_961_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i11/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i11/SLICE_961/u_speaker/mux_1579_i11/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i11/SLICE_961_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i11/SLICE_961/u_speaker/mux_1579_i11/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i11/SLICE_961/u_speaker/mux_1579_i11/SLICE_961_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i11/SLICE_961_FXMUX ( .D0(FXA), .D1(FXB), 
    .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1579_i1_SLICE_962 ( input C1, B1, A1, C0, B0, A0, M1, M0, 
    FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_speaker/mux_1579_i1/SLICE_962/u_speaker/mux_1579_i1/SLICE_962_K1_H1 , 
         \u_speaker/mux_1579_i1/SLICE_962/u_speaker/mux_1579_i1/GATE_H0 ;

  lut40143 \u_speaker/mux_1579_i1/SLICE_962_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1579_i1/SLICE_962/u_speaker/mux_1579_i1/SLICE_962_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1579_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1579_i1/SLICE_962/u_speaker/mux_1579_i1/GATE_H0 ));
  selmux2 \u_speaker/mux_1579_i1/SLICE_962_K0K1MUX ( 
    .D0(\u_speaker/mux_1579_i1/SLICE_962/u_speaker/mux_1579_i1/GATE_H0 ), 
    .D1(\u_speaker/mux_1579_i1/SLICE_962/u_speaker/mux_1579_i1/SLICE_962_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/mux_1579_i1/SLICE_962_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_i12612_SLICE_963 ( input C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, \u_speaker/i12612/SLICE_963/u_speaker/i12612/SLICE_963_K1_H1 , 
         \u_speaker/i12612/SLICE_963/u_speaker/i12612/GATE_H0 ;

  lut40157 \u_speaker/i12612/SLICE_963_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/i12612/SLICE_963/u_speaker/i12612/SLICE_963_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40158 \u_speaker/i12612/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12612/SLICE_963/u_speaker/i12612/GATE_H0 ));
  selmux2 \u_speaker/i12612/SLICE_963_K0K1MUX ( 
    .D0(\u_speaker/i12612/SLICE_963/u_speaker/i12612/GATE_H0 ), 
    .D1(\u_speaker/i12612/SLICE_963/u_speaker/i12612/SLICE_963_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12610_SLICE_964 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_speaker/i12610/SLICE_964/u_speaker/i12610/SLICE_964_K1_H1 , 
         \u_speaker/i12610/SLICE_964/u_speaker/i12610/GATE_H0 ;

  lut40159 \u_speaker/i12610/SLICE_964_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/i12610/SLICE_964/u_speaker/i12610/SLICE_964_K1_H1 ));
  lut40160 \u_speaker/i12610/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12610/SLICE_964/u_speaker/i12610/GATE_H0 ));
  selmux2 \u_speaker/i12610/SLICE_964_K0K1MUX ( 
    .D0(\u_speaker/i12610/SLICE_964/u_speaker/i12610/GATE_H0 ), 
    .D1(\u_speaker/i12610/SLICE_964/u_speaker/i12610/SLICE_964_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12608_SLICE_965 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_speaker/i12608/SLICE_965/u_speaker/i12608/SLICE_965_K1_H1 , 
         \u_speaker/i12608/SLICE_965/u_speaker/i12608/GATE_H0 ;

  lut40161 \u_speaker/i12608/SLICE_965_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/i12608/SLICE_965/u_speaker/i12608/SLICE_965_K1_H1 ));
  lut40162 \u_speaker/i12608/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12608/SLICE_965/u_speaker/i12608/GATE_H0 ));
  selmux2 \u_speaker/i12608/SLICE_965_K0K1MUX ( 
    .D0(\u_speaker/i12608/SLICE_965/u_speaker/i12608/GATE_H0 ), 
    .D1(\u_speaker/i12608/SLICE_965/u_speaker/i12608/SLICE_965_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0440) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0006) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12638_SLICE_966 ( input C1, B1, A1, B0, A0, M0, output OFX0 );
  wire   GNDI, \u_speaker/i12638/SLICE_966/u_speaker/i12638/SLICE_966_K1_H1 , 
         \u_speaker/i12638/SLICE_966/u_speaker/i12638/GATE_H0 ;

  lut40163 \u_speaker/i12638/SLICE_966_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/i12638/SLICE_966/u_speaker/i12638/SLICE_966_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40164 \u_speaker/i12638/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\u_speaker/i12638/SLICE_966/u_speaker/i12638/GATE_H0 ));
  selmux2 \u_speaker/i12638/SLICE_966_K0K1MUX ( 
    .D0(\u_speaker/i12638/SLICE_966/u_speaker/i12638/GATE_H0 ), 
    .D1(\u_speaker/i12638/SLICE_966/u_speaker/i12638/SLICE_966_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1B1B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12606_SLICE_967 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_speaker/i12606/SLICE_967/u_speaker/i12606/SLICE_967_K1_H1 , 
         \u_speaker/i12606/SLICE_967/u_speaker/i12606/GATE_H0 ;

  lut40165 \u_speaker/i12606/SLICE_967_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/i12606/SLICE_967/u_speaker/i12606/SLICE_967_K1_H1 ));
  lut40166 \u_speaker/i12606/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12606/SLICE_967/u_speaker/i12606/GATE_H0 ));
  selmux2 \u_speaker/i12606/SLICE_967_K0K1MUX ( 
    .D0(\u_speaker/i12606/SLICE_967/u_speaker/i12606/GATE_H0 ), 
    .D1(\u_speaker/i12606/SLICE_967/u_speaker/i12606/SLICE_967_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0807) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h006A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12636_SLICE_968 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \u_speaker/i12636/SLICE_968/u_speaker/i12636/SLICE_968_K1_H1 , 
         \u_speaker/i12636/SLICE_968/u_speaker/i12636/GATE_H0 ;

  lut40163 \u_speaker/i12636/SLICE_968_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/i12636/SLICE_968/u_speaker/i12636/SLICE_968_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40167 \u_speaker/i12636/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/i12636/SLICE_968/u_speaker/i12636/GATE_H0 ));
  selmux2 \u_speaker/i12636/SLICE_968_K0K1MUX ( 
    .D0(\u_speaker/i12636/SLICE_968/u_speaker/i12636/GATE_H0 ), 
    .D1(\u_speaker/i12636/SLICE_968/u_speaker/i12636/SLICE_968_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \u_speaker/i12636/SLICE_968_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1D1D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12604_SLICE_969 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_speaker/i12604/SLICE_969/u_speaker/i12604/SLICE_969_K1_H1 , 
         \u_speaker/i12604/SLICE_969/u_speaker/i12604/GATE_H0 ;

  lut40168 \u_speaker/i12604/SLICE_969_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/i12604/SLICE_969/u_speaker/i12604/SLICE_969_K1_H1 ));
  lut40169 \u_speaker/i12604/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12604/SLICE_969/u_speaker/i12604/GATE_H0 ));
  selmux2 \u_speaker/i12604/SLICE_969_K0K1MUX ( 
    .D0(\u_speaker/i12604/SLICE_969/u_speaker/i12604/GATE_H0 ), 
    .D1(\u_speaker/i12604/SLICE_969/u_speaker/i12604/SLICE_969_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i11844_SLICE_970 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \u_speaker/i11844/SLICE_970/u_speaker/i11844/SLICE_970_K1_H1 , 
         \u_speaker/i11844/SLICE_970/u_speaker/i11844/GATE_H0 ;

  lut40170 \u_speaker/i11844/SLICE_970_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/i11844/SLICE_970/u_speaker/i11844/SLICE_970_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/i11844/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/i11844/SLICE_970/u_speaker/i11844/GATE_H0 ));
  selmux2 \u_speaker/i11844/SLICE_970_K0K1MUX ( 
    .D0(\u_speaker/i11844/SLICE_970/u_speaker/i11844/GATE_H0 ), 
    .D1(\u_speaker/i11844/SLICE_970/u_speaker/i11844/SLICE_970_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4E4E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12602_SLICE_971 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_speaker/i12602/SLICE_971/u_speaker/i12602/SLICE_971_K1_H1 , 
         \u_speaker/i12602/SLICE_971/u_speaker/i12602/GATE_H0 ;

  lut40171 \u_speaker/i12602/SLICE_971_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/i12602/SLICE_971/u_speaker/i12602/SLICE_971_K1_H1 ));
  lut40172 \u_speaker/i12602/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i12602/SLICE_971/u_speaker/i12602/GATE_H0 ));
  selmux2 \u_speaker/i12602/SLICE_971_K0K1MUX ( 
    .D0(\u_speaker/i12602/SLICE_971/u_speaker/i12602/GATE_H0 ), 
    .D1(\u_speaker/i12602/SLICE_971/u_speaker/i12602/SLICE_971_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2082) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_i12626_SLICE_972 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \u_speaker/i12626/SLICE_972/u_speaker/i12626/SLICE_972_K1_H1 , 
         \u_speaker/i12626/SLICE_972/u_speaker/i12626/GATE_H0 ;

  lut40155 \u_speaker/i12626/SLICE_972_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/i12626/SLICE_972/u_speaker/i12626/SLICE_972_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40173 \u_speaker/i12626/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/i12626/SLICE_972/u_speaker/i12626/GATE_H0 ));
  selmux2 \u_speaker/i12626/SLICE_972_K0K1MUX ( 
    .D0(\u_speaker/i12626/SLICE_972/u_speaker/i12626/GATE_H0 ), 
    .D1(\u_speaker/i12626/SLICE_972/u_speaker/i12626/SLICE_972_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5353) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_mux_1600_i2_SLICE_973 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i2/SLICE_973/u_speaker/mux_1600_i2/SLICE_973_K1_H1 , 
         \u_speaker/mux_1600_i2/SLICE_973/u_speaker/mux_1600_i2/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i2/SLICE_973_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i2/SLICE_973/u_speaker/mux_1600_i2/SLICE_973_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i2/SLICE_973/u_speaker/mux_1600_i2/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i2/SLICE_973_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i2/SLICE_973/u_speaker/mux_1600_i2/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i2/SLICE_973/u_speaker/mux_1600_i2/SLICE_973_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i3_SLICE_974 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i3/SLICE_974/u_speaker/mux_1600_i3/SLICE_974_K1_H1 , 
         \u_speaker/mux_1600_i3/SLICE_974/u_speaker/mux_1600_i3/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i3/SLICE_974_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i3/SLICE_974/u_speaker/mux_1600_i3/SLICE_974_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i3/SLICE_974/u_speaker/mux_1600_i3/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i3/SLICE_974_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i3/SLICE_974/u_speaker/mux_1600_i3/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i3/SLICE_974/u_speaker/mux_1600_i3/SLICE_974_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_i11951_SLICE_975 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \u_speaker/i11951/SLICE_975/u_speaker/i11951/SLICE_975_K1_H1 , 
         \u_speaker/i11951/SLICE_975/u_speaker/i11951/GATE_H0 ;

  lut40153 \u_speaker/i11951/SLICE_975_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\u_speaker/i11951/SLICE_975/u_speaker/i11951/SLICE_975_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/i11951/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/i11951/SLICE_975/u_speaker/i11951/GATE_H0 ));
  selmux2 \u_speaker/i11951/SLICE_975_K0K1MUX ( 
    .D0(\u_speaker/i11951/SLICE_975/u_speaker/i11951/GATE_H0 ), 
    .D1(\u_speaker/i11951/SLICE_975/u_speaker/i11951/SLICE_975_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i4_SLICE_976 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i4/SLICE_976/u_speaker/mux_1600_i4/SLICE_976_K1_H1 , 
         \u_speaker/mux_1600_i4/SLICE_976/u_speaker/mux_1600_i4/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i4/SLICE_976_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i4/SLICE_976/u_speaker/mux_1600_i4/SLICE_976_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i4/SLICE_976/u_speaker/mux_1600_i4/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i4/SLICE_976_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i4/SLICE_976/u_speaker/mux_1600_i4/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i4/SLICE_976/u_speaker/mux_1600_i4/SLICE_976_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i5_SLICE_977 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i5/SLICE_977/u_speaker/mux_1600_i5/SLICE_977_K1_H1 , 
         \u_speaker/mux_1600_i5/SLICE_977/u_speaker/mux_1600_i5/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i5/SLICE_977_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i5/SLICE_977/u_speaker/mux_1600_i5/SLICE_977_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i5/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i5/SLICE_977/u_speaker/mux_1600_i5/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i5/SLICE_977_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i5/SLICE_977/u_speaker/mux_1600_i5/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i5/SLICE_977/u_speaker/mux_1600_i5/SLICE_977_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i6_SLICE_978 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i6/SLICE_978/u_speaker/mux_1600_i6/SLICE_978_K1_H1 , 
         \u_speaker/mux_1600_i6/SLICE_978/u_speaker/mux_1600_i6/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i6/SLICE_978_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i6/SLICE_978/u_speaker/mux_1600_i6/SLICE_978_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i6/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i6/SLICE_978/u_speaker/mux_1600_i6/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i6/SLICE_978_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i6/SLICE_978/u_speaker/mux_1600_i6/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i6/SLICE_978/u_speaker/mux_1600_i6/SLICE_978_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i7_SLICE_979 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i7/SLICE_979/u_speaker/mux_1600_i7/SLICE_979_K1_H1 , 
         \u_speaker/mux_1600_i7/SLICE_979/u_speaker/mux_1600_i7/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i7/SLICE_979_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i7/SLICE_979/u_speaker/mux_1600_i7/SLICE_979_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i7/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i7/SLICE_979/u_speaker/mux_1600_i7/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i7/SLICE_979_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i7/SLICE_979/u_speaker/mux_1600_i7/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i7/SLICE_979/u_speaker/mux_1600_i7/SLICE_979_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i8_SLICE_980 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i8/SLICE_980/u_speaker/mux_1600_i8/SLICE_980_K1_H1 , 
         \u_speaker/mux_1600_i8/SLICE_980/u_speaker/mux_1600_i8/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i8/SLICE_980_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i8/SLICE_980/u_speaker/mux_1600_i8/SLICE_980_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i8/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i8/SLICE_980/u_speaker/mux_1600_i8/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i8/SLICE_980_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i8/SLICE_980/u_speaker/mux_1600_i8/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i8/SLICE_980/u_speaker/mux_1600_i8/SLICE_980_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i9_SLICE_981 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i9/SLICE_981/u_speaker/mux_1600_i9/SLICE_981_K1_H1 , 
         \u_speaker/mux_1600_i9/SLICE_981/u_speaker/mux_1600_i9/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i9/SLICE_981_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i9/SLICE_981/u_speaker/mux_1600_i9/SLICE_981_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i9/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i9/SLICE_981/u_speaker/mux_1600_i9/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i9/SLICE_981_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i9/SLICE_981/u_speaker/mux_1600_i9/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i9/SLICE_981/u_speaker/mux_1600_i9/SLICE_981_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i10_SLICE_982 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i10/SLICE_982/u_speaker/mux_1600_i10/SLICE_982_K1_H1 
         , \u_speaker/mux_1600_i10/SLICE_982/u_speaker/mux_1600_i10/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i10/SLICE_982_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i10/SLICE_982/u_speaker/mux_1600_i10/SLICE_982_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i10/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i10/SLICE_982/u_speaker/mux_1600_i10/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i10/SLICE_982_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i10/SLICE_982/u_speaker/mux_1600_i10/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i10/SLICE_982/u_speaker/mux_1600_i10/SLICE_982_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_mux_1600_i11_SLICE_983 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i11/SLICE_983/u_speaker/mux_1600_i11/SLICE_983_K1_H1 
         , \u_speaker/mux_1600_i11/SLICE_983/u_speaker/mux_1600_i11/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i11/SLICE_983_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i11/SLICE_983/u_speaker/mux_1600_i11/SLICE_983_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i11/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i11/SLICE_983/u_speaker/mux_1600_i11/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i11/SLICE_983_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i11/SLICE_983/u_speaker/mux_1600_i11/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i11/SLICE_983/u_speaker/mux_1600_i11/SLICE_983_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_i11945_SLICE_984 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_speaker/i11945/SLICE_984/u_speaker/i11945/SLICE_984_K1_H1 , 
         \u_speaker/i11945/SLICE_984/u_speaker/i11945/GATE_H0 ;

  lut40174 \u_speaker/i11945/SLICE_984_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_speaker/i11945/SLICE_984/u_speaker/i11945/SLICE_984_K1_H1 ));
  lut40175 \u_speaker/i11945/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_speaker/i11945/SLICE_984/u_speaker/i11945/GATE_H0 ));
  selmux2 \u_speaker/i11945/SLICE_984_K0K1MUX ( 
    .D0(\u_speaker/i11945/SLICE_984/u_speaker/i11945/GATE_H0 ), 
    .D1(\u_speaker/i11945/SLICE_984/u_speaker/i11945/SLICE_984_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAE04) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4F40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_mux_1600_i1_SLICE_985 ( input C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \u_speaker/mux_1600_i1/SLICE_985/u_speaker/mux_1600_i1/SLICE_985_K1_H1 , 
         \u_speaker/mux_1600_i1/SLICE_985/u_speaker/mux_1600_i1/GATE_H0 ;

  lut40143 \u_speaker/mux_1600_i1/SLICE_985_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_speaker/mux_1600_i1/SLICE_985/u_speaker/mux_1600_i1/SLICE_985_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \u_speaker/mux_1600_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_speaker/mux_1600_i1/SLICE_985/u_speaker/mux_1600_i1/GATE_H0 ));
  selmux2 \u_speaker/mux_1600_i1/SLICE_985_K0K1MUX ( 
    .D0(\u_speaker/mux_1600_i1/SLICE_985/u_speaker/mux_1600_i1/GATE_H0 ), 
    .D1(\u_speaker/mux_1600_i1/SLICE_985/u_speaker/mux_1600_i1/SLICE_985_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i12620_SLICE_986 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i12620/SLICE_986/i12620/SLICE_986_K1_H1 , 
         \i12620/SLICE_986/i12620/GATE_H0 ;

  lut40176 \i12620/SLICE_986_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i12620/SLICE_986/i12620/SLICE_986_K1_H1 ));
  lut40177 \i12620/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i12620/SLICE_986/i12620/GATE_H0 ));
  selmux2 \i12620/SLICE_986_K0K1MUX ( .D0(\i12620/SLICE_986/i12620/GATE_H0 ), 
    .D1(\i12620/SLICE_986/i12620/SLICE_986_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4737) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2357) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i12542_SLICE_987 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i12542/SLICE_987/i12542/SLICE_987_K1_H1 , 
         \i12542/SLICE_987/i12542/GATE_H0 ;

  lut40178 \i12542/SLICE_987_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i12542/SLICE_987/i12542/SLICE_987_K1_H1 ));
  lut40179 \i12542/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i12542/SLICE_987/i12542/GATE_H0 ));
  selmux2 \i12542/SLICE_987_K0K1MUX ( .D0(\i12542/SLICE_987/i12542/GATE_H0 ), 
    .D1(\i12542/SLICE_987/i12542/SLICE_987_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i12542/SLICE_987_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h054F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0AD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i12545_SLICE_988 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i12545/SLICE_988/i12545/SLICE_988_K1_H1 , 
         \i12545/SLICE_988/i12545/GATE_H0 ;

  lut40180 \i12545/SLICE_988_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i12545/SLICE_988/i12545/SLICE_988_K1_H1 ));
  lut40181 \i12545/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i12545/SLICE_988/i12545/GATE_H0 ));
  selmux2 \i12545/SLICE_988_K0K1MUX ( .D0(\i12545/SLICE_988/i12545/GATE_H0 ), 
    .D1(\i12545/SLICE_988/i12545/SLICE_988_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE7F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F76) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i12536_SLICE_989 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i12536/SLICE_989/i12536/SLICE_989_K1_H1 , 
         \i12536/SLICE_989/i12536/GATE_H0 ;

  lut40182 \i12536/SLICE_989_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i12536/SLICE_989/i12536/SLICE_989_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40183 \i12536/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i12536/SLICE_989/i12536/GATE_H0 ));
  selmux2 \i12536/SLICE_989_K0K1MUX ( .D0(\i12536/SLICE_989/i12536/GATE_H0 ), 
    .D1(\i12536/SLICE_989/i12536/SLICE_989_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i12618_SLICE_990 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i12618/SLICE_990/i12618/SLICE_990_K1_H1 , 
         \i12618/SLICE_990/i12618/GATE_H0 ;

  lut40184 \i12618/SLICE_990_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i12618/SLICE_990/i12618/SLICE_990_K1_H1 ));
  lut40185 \i12618/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i12618/SLICE_990/i12618/GATE_H0 ));
  selmux2 \i12618/SLICE_990_K0K1MUX ( .D0(\i12618/SLICE_990/i12618/GATE_H0 ), 
    .D1(\i12618/SLICE_990/i12618/SLICE_990_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5771) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1457) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i12616_SLICE_991 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i12616/SLICE_991/i12616/SLICE_991_K1_H1 , 
         \i12616/SLICE_991/i12616/GATE_H0 ;

  lut40186 \i12616/SLICE_991_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i12616/SLICE_991/i12616/SLICE_991_K1_H1 ));
  lut40187 \i12616/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i12616/SLICE_991/i12616/GATE_H0 ));
  selmux2 \i12616/SLICE_991_K0K1MUX ( .D0(\i12616/SLICE_991/i12616/GATE_H0 ), 
    .D1(\i12616/SLICE_991/i12616/SLICE_991_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0416) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4324) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_i12622_SLICE_992 ( input D1, C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_buzzer/i12622/SLICE_992/u_buzzer/i12622/SLICE_992_K1_H1 , GNDI, 
         \u_buzzer/i12622/SLICE_992/u_buzzer/i12622/GATE_H0 ;

  lut40188 \u_buzzer/i12622/SLICE_992_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/i12622/SLICE_992/u_buzzer/i12622/SLICE_992_K1_H1 ));
  lut40189 \u_buzzer/i12622/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\u_buzzer/i12622/SLICE_992/u_buzzer/i12622/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/i12622/SLICE_992_K0K1MUX ( 
    .D0(\u_buzzer/i12622/SLICE_992/u_buzzer/i12622/GATE_H0 ), 
    .D1(\u_buzzer/i12622/SLICE_992/u_buzzer/i12622/SLICE_992_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7250) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_CNT_17__I_0_91_i32_SLICE_993 ( input C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \u_buzzer/CNT_17__I_0_91_i32/SLICE_993/u_buzzer/CNT_17__I_0_91_i32/SLICE_993_K1_H1 
         , 
         \u_buzzer/CNT_17__I_0_91_i32/SLICE_993/u_buzzer/CNT_17__I_0_91_i32/GATE_H0 
         ;

  lut40190 \u_buzzer/CNT_17__I_0_91_i32/SLICE_993_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\u_buzzer/CNT_17__I_0_91_i32/SLICE_993/u_buzzer/CNT_17__I_0_91_i32/SLICE_993_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40191 \u_buzzer/CNT_17__I_0_91_i32/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/CNT_17__I_0_91_i32/SLICE_993/u_buzzer/CNT_17__I_0_91_i32/GATE_H0 )
    );
  selmux2 \u_buzzer/CNT_17__I_0_91_i32/SLICE_993_K0K1MUX ( 
    .D0(\u_buzzer/CNT_17__I_0_91_i32/SLICE_993/u_buzzer/CNT_17__I_0_91_i32/GATE_H0 )
    , 
    .D1(\u_buzzer/CNT_17__I_0_91_i32/SLICE_993/u_buzzer/CNT_17__I_0_91_i32/SLICE_993_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \u_buzzer/CNT_17__I_0_91_i32/SLICE_993_FXMUX ( .D0(FXA), .D1(FXB), 
    .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD4D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_i9369_SLICE_994 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \u_buzzer/i9369/SLICE_994/u_buzzer/i9369/SLICE_994_K1_H1 , 
         \u_buzzer/i9369/SLICE_994/u_buzzer/i9369/GATE_H0 ;

  lut40192 \u_buzzer/i9369/SLICE_994_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\u_buzzer/i9369/SLICE_994/u_buzzer/i9369/SLICE_994_K1_H1 ));
  lut40193 \u_buzzer/i9369/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\u_buzzer/i9369/SLICE_994/u_buzzer/i9369/GATE_H0 ));
  selmux2 \u_buzzer/i9369/SLICE_994_K0K1MUX ( 
    .D0(\u_buzzer/i9369/SLICE_994/u_buzzer/i9369/GATE_H0 ), 
    .D1(\u_buzzer/i9369/SLICE_994/u_buzzer/i9369/SLICE_994_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC2C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_CNT_17__I_0_91_i24_SLICE_995 ( input D1, C1, B1, A1, C0, B0, 
    A0, M0, output OFX0 );
  wire   
         \u_buzzer/CNT_17__I_0_91_i24/SLICE_995/u_buzzer/CNT_17__I_0_91_i24/SLICE_995_K1_H1 
         , GNDI, 
         \u_buzzer/CNT_17__I_0_91_i24/SLICE_995/u_buzzer/CNT_17__I_0_91_i24/GATE_H0 
         ;

  lut40191 \u_buzzer/CNT_17__I_0_91_i24/SLICE_995_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), 
    .Z(\u_buzzer/CNT_17__I_0_91_i24/SLICE_995/u_buzzer/CNT_17__I_0_91_i24/SLICE_995_K1_H1 )
    );
  lut40190 \u_buzzer/CNT_17__I_0_91_i24/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), 
    .Z(\u_buzzer/CNT_17__I_0_91_i24/SLICE_995/u_buzzer/CNT_17__I_0_91_i24/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \u_buzzer/CNT_17__I_0_91_i24/SLICE_995_K0K1MUX ( 
    .D0(\u_buzzer/CNT_17__I_0_91_i24/SLICE_995/u_buzzer/CNT_17__I_0_91_i24/GATE_H0 )
    , 
    .D1(\u_buzzer/CNT_17__I_0_91_i24/SLICE_995/u_buzzer/CNT_17__I_0_91_i24/SLICE_995_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i12614_SLICE_996 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i12614/SLICE_996/i12614/SLICE_996_K1_H1 , 
         \i12614/SLICE_996/i12614/GATE_H0 ;

  lut40194 \i12614/SLICE_996_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i12614/SLICE_996/i12614/SLICE_996_K1_H1 ));
  lut40195 \i12614/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i12614/SLICE_996/i12614/GATE_H0 ));
  selmux2 \i12614/SLICE_996_K0K1MUX ( .D0(\i12614/SLICE_996/i12614/GATE_H0 ), 
    .D1(\i12614/SLICE_996/i12614/SLICE_996_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1231) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5085) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mux_617_Mux_0_i109_SLICE_997 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \mux_617_Mux_0_i109/SLICE_997/mux_617_Mux_0_i109/SLICE_997_K1_H1 , 
         \mux_617_Mux_0_i109/SLICE_997/mux_617_Mux_0_i109/GATE_H0 ;

  lut40196 \mux_617_Mux_0_i109/SLICE_997_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\mux_617_Mux_0_i109/SLICE_997/mux_617_Mux_0_i109/SLICE_997_K1_H1 ));
  lut40197 \mux_617_Mux_0_i109/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\mux_617_Mux_0_i109/SLICE_997/mux_617_Mux_0_i109/GATE_H0 ));
  selmux2 \mux_617_Mux_0_i109/SLICE_997_K0K1MUX ( 
    .D0(\mux_617_Mux_0_i109/SLICE_997/mux_617_Mux_0_i109/GATE_H0 ), 
    .D1(\mux_617_Mux_0_i109/SLICE_997/mux_617_Mux_0_i109/SLICE_997_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0013) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA31F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i21_SLICE_998 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i21/SLICE_998/i21/SLICE_998_K1_H1 , 
         \i21/SLICE_998/i21/GATE_H0 ;

  lut40157 \i21/SLICE_998_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i21/SLICE_998/i21/SLICE_998_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40169 \i21/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i21/SLICE_998/i21/GATE_H0 ));
  selmux2 \i21/SLICE_998_K0K1MUX ( .D0(\i21/SLICE_998/i21/GATE_H0 ), 
    .D1(\i21/SLICE_998/i21/SLICE_998_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i11897_SLICE_999 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11897/SLICE_999/i11897/SLICE_999_K1_H1 , 
         \i11897/SLICE_999/i11897/GATE_H0 ;

  lut40198 \i11897/SLICE_999_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11897/SLICE_999/i11897/SLICE_999_K1_H1 ));
  lut40199 \i11897/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11897/SLICE_999/i11897/GATE_H0 ));
  selmux2 \i11897/SLICE_999_K0K1MUX ( .D0(\i11897/SLICE_999/i11897/GATE_H0 ), 
    .D1(\i11897/SLICE_999/i11897/SLICE_999_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF9FB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11894_SLICE_1000 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11894/SLICE_1000/i11894/SLICE_1000_K1_H1 , 
         \i11894/SLICE_1000/i11894/GATE_H0 ;

  lut40200 \i11894/SLICE_1000_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11894/SLICE_1000/i11894/SLICE_1000_K1_H1 ));
  lut40201 \i11894/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11894/SLICE_1000/i11894/GATE_H0 ));
  selmux2 \i11894/SLICE_1000_K0K1MUX ( .D0(\i11894/SLICE_1000/i11894/GATE_H0 ), 
    .D1(\i11894/SLICE_1000/i11894/SLICE_1000_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1A3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD7E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11891_SLICE_1001 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11891/SLICE_1001/i11891/SLICE_1001_K1_H1 , 
         \i11891/SLICE_1001/i11891/GATE_H0 ;

  lut40202 \i11891/SLICE_1001_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11891/SLICE_1001/i11891/SLICE_1001_K1_H1 ));
  lut40203 \i11891/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11891/SLICE_1001/i11891/GATE_H0 ));
  selmux2 \i11891/SLICE_1001_K0K1MUX ( .D0(\i11891/SLICE_1001/i11891/GATE_H0 ), 
    .D1(\i11891/SLICE_1001/i11891/SLICE_1001_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11891/SLICE_1001_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7E79) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCF7D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11871_SLICE_1002 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i11871/SLICE_1002/i11871/SLICE_1002_K1_H1 , GNDI, 
         \i11871/SLICE_1002/i11871/GATE_H0 ;

  lut40204 \i11871/SLICE_1002_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11871/SLICE_1002/i11871/SLICE_1002_K1_H1 ));
  lut40205 \i11871/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i11871/SLICE_1002/i11871/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i11871/SLICE_1002_K0K1MUX ( .D0(\i11871/SLICE_1002/i11871/GATE_H0 ), 
    .D1(\i11871/SLICE_1002/i11871/SLICE_1002_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9C35) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD0D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11845_SLICE_1003 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11845/SLICE_1003/i11845/SLICE_1003_K1_H1 , 
         \i11845/SLICE_1003/i11845/GATE_H0 ;

  lut40206 \i11845/SLICE_1003_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11845/SLICE_1003/i11845/SLICE_1003_K1_H1 ));
  lut40207 \i11845/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11845/SLICE_1003/i11845/GATE_H0 ));
  selmux2 \i11845/SLICE_1003_K0K1MUX ( .D0(\i11845/SLICE_1003/i11845/GATE_H0 ), 
    .D1(\i11845/SLICE_1003/i11845/SLICE_1003_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC705) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAE02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11835_SLICE_1004 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11835/SLICE_1004/i11835/SLICE_1004_K1_H1 , 
         \i11835/SLICE_1004/i11835/GATE_H0 ;

  lut40208 \i11835/SLICE_1004_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11835/SLICE_1004/i11835/SLICE_1004_K1_H1 ));
  lut40209 \i11835/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11835/SLICE_1004/i11835/GATE_H0 ));
  selmux2 \i11835/SLICE_1004_K0K1MUX ( .D0(\i11835/SLICE_1004/i11835/GATE_H0 ), 
    .D1(\i11835/SLICE_1004/i11835/SLICE_1004_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0778) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3DE0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11836_SLICE_1005 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11836/SLICE_1005/i11836/SLICE_1005_K1_H1 , 
         \i11836/SLICE_1005/i11836/GATE_H0 ;

  lut40210 \i11836/SLICE_1005_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11836/SLICE_1005/i11836/SLICE_1005_K1_H1 ));
  lut40211 \i11836/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11836/SLICE_1005/i11836/GATE_H0 ));
  selmux2 \i11836/SLICE_1005_K0K1MUX ( .D0(\i11836/SLICE_1005/i11836/GATE_H0 ), 
    .D1(\i11836/SLICE_1005/i11836/SLICE_1005_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11836/SLICE_1005_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h33DF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h83FB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11837_SLICE_1006 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11837/SLICE_1006/i11837/SLICE_1006_K1_H1 , 
         \i11837/SLICE_1006/i11837/GATE_H0 ;

  lut40212 \i11837/SLICE_1006_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11837/SLICE_1006/i11837/SLICE_1006_K1_H1 ));
  lut40213 \i11837/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11837/SLICE_1006/i11837/GATE_H0 ));
  selmux2 \i11837/SLICE_1006_K0K1MUX ( .D0(\i11837/SLICE_1006/i11837/GATE_H0 ), 
    .D1(\i11837/SLICE_1006/i11837/SLICE_1006_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11837/SLICE_1006_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8110) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11846_SLICE_1007 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11846/SLICE_1007/i11846/SLICE_1007_K1_H1 , 
         \i11846/SLICE_1007/i11846/GATE_H0 ;

  lut40214 \i11846/SLICE_1007_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11846/SLICE_1007/i11846/SLICE_1007_K1_H1 ));
  lut40215 \i11846/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11846/SLICE_1007/i11846/GATE_H0 ));
  selmux2 \i11846/SLICE_1007_K0K1MUX ( .D0(\i11846/SLICE_1007/i11846/GATE_H0 ), 
    .D1(\i11846/SLICE_1007/i11846/SLICE_1007_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11846/SLICE_1007_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h56F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11852_SLICE_1008 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11852/SLICE_1008/i11852/SLICE_1008_K1_H1 , 
         \i11852/SLICE_1008/i11852/GATE_H0 ;

  lut40216 \i11852/SLICE_1008_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11852/SLICE_1008/i11852/SLICE_1008_K1_H1 ));
  lut40217 \i11852/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11852/SLICE_1008/i11852/GATE_H0 ));
  selmux2 \i11852/SLICE_1008_K0K1MUX ( .D0(\i11852/SLICE_1008/i11852/GATE_H0 ), 
    .D1(\i11852/SLICE_1008/i11852/SLICE_1008_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11852/SLICE_1008_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9F4B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE94D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11853_SLICE_1009 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11853/SLICE_1009/i11853/SLICE_1009_K1_H1 , 
         \i11853/SLICE_1009/i11853/GATE_H0 ;

  lut40218 \i11853/SLICE_1009_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11853/SLICE_1009/i11853/SLICE_1009_K1_H1 ));
  lut40219 \i11853/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11853/SLICE_1009/i11853/GATE_H0 ));
  selmux2 \i11853/SLICE_1009_K0K1MUX ( .D0(\i11853/SLICE_1009/i11853/GATE_H0 ), 
    .D1(\i11853/SLICE_1009/i11853/SLICE_1009_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11853/SLICE_1009_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3E99) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40219 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h27B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11855_SLICE_1010 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11855/SLICE_1010/i11855/SLICE_1010_K1_H1 , 
         \i11855/SLICE_1010/i11855/GATE_H0 ;

  lut40220 \i11855/SLICE_1010_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11855/SLICE_1010/i11855/SLICE_1010_K1_H1 ));
  lut40221 \i11855/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11855/SLICE_1010/i11855/GATE_H0 ));
  selmux2 \i11855/SLICE_1010_K0K1MUX ( .D0(\i11855/SLICE_1010/i11855/GATE_H0 ), 
    .D1(\i11855/SLICE_1010/i11855/SLICE_1010_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40220 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40221 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9D1F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11856_SLICE_1011 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11856/SLICE_1011/i11856/SLICE_1011_K1_H1 , 
         \i11856/SLICE_1011/i11856/GATE_H0 ;

  lut40222 \i11856/SLICE_1011_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11856/SLICE_1011/i11856/SLICE_1011_K1_H1 ));
  lut40223 \i11856/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11856/SLICE_1011/i11856/GATE_H0 ));
  selmux2 \i11856/SLICE_1011_K0K1MUX ( .D0(\i11856/SLICE_1011/i11856/GATE_H0 ), 
    .D1(\i11856/SLICE_1011/i11856/SLICE_1011_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11856/SLICE_1011_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40222 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF39) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40223 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h33A1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11862_SLICE_1012 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11862/SLICE_1012/i11862/SLICE_1012_K1_H1 , 
         \i11862/SLICE_1012/i11862/GATE_H0 ;

  lut40224 \i11862/SLICE_1012_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11862/SLICE_1012/i11862/SLICE_1012_K1_H1 ));
  lut40225 \i11862/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11862/SLICE_1012/i11862/GATE_H0 ));
  selmux2 \i11862/SLICE_1012_K0K1MUX ( .D0(\i11862/SLICE_1012/i11862/GATE_H0 ), 
    .D1(\i11862/SLICE_1012/i11862/SLICE_1012_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40224 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7A59) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40225 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4974) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11863_SLICE_1013 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11863/SLICE_1013/i11863/SLICE_1013_K1_H1 , 
         \i11863/SLICE_1013/i11863/GATE_H0 ;

  lut40226 \i11863/SLICE_1013_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11863/SLICE_1013/i11863/SLICE_1013_K1_H1 ));
  lut40227 \i11863/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11863/SLICE_1013/i11863/GATE_H0 ));
  selmux2 \i11863/SLICE_1013_K0K1MUX ( .D0(\i11863/SLICE_1013/i11863/GATE_H0 ), 
    .D1(\i11863/SLICE_1013/i11863/SLICE_1013_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11863/SLICE_1013_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40226 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4FE4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40227 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB489) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11865_SLICE_1014 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11865/SLICE_1014/i11865/SLICE_1014_K1_H1 , 
         \i11865/SLICE_1014/i11865/GATE_H0 ;

  lut40228 \i11865/SLICE_1014_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11865/SLICE_1014/i11865/SLICE_1014_K1_H1 ));
  lut40229 \i11865/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11865/SLICE_1014/i11865/GATE_H0 ));
  selmux2 \i11865/SLICE_1014_K0K1MUX ( .D0(\i11865/SLICE_1014/i11865/GATE_H0 ), 
    .D1(\i11865/SLICE_1014/i11865/SLICE_1014_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11865/SLICE_1014_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40228 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0401) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40229 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11866_SLICE_1015 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11866/SLICE_1015/i11866/SLICE_1015_K1_H1 , 
         \i11866/SLICE_1015/i11866/GATE_H0 ;

  lut40230 \i11866/SLICE_1015_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11866/SLICE_1015/i11866/SLICE_1015_K1_H1 ));
  lut40231 \i11866/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11866/SLICE_1015/i11866/GATE_H0 ));
  selmux2 \i11866/SLICE_1015_K0K1MUX ( .D0(\i11866/SLICE_1015/i11866/GATE_H0 ), 
    .D1(\i11866/SLICE_1015/i11866/SLICE_1015_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11866/SLICE_1015_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40230 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7340) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40231 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0442) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11872_SLICE_1016 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11872/SLICE_1016/i11872/SLICE_1016_K1_H1 , 
         \i11872/SLICE_1016/i11872/GATE_H0 ;

  lut40232 \i11872/SLICE_1016_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11872/SLICE_1016/i11872/SLICE_1016_K1_H1 ));
  lut40233 \i11872/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11872/SLICE_1016/i11872/GATE_H0 ));
  selmux2 \i11872/SLICE_1016_K0K1MUX ( .D0(\i11872/SLICE_1016/i11872/GATE_H0 ), 
    .D1(\i11872/SLICE_1016/i11872/SLICE_1016_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11872/SLICE_1016_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40232 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF83) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40233 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC07) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11878_SLICE_1017 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11878/SLICE_1017/i11878/SLICE_1017_K1_H1 , 
         \i11878/SLICE_1017/i11878/GATE_H0 ;

  lut40234 \i11878/SLICE_1017_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11878/SLICE_1017/i11878/SLICE_1017_K1_H1 ));
  lut40235 \i11878/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11878/SLICE_1017/i11878/GATE_H0 ));
  selmux2 \i11878/SLICE_1017_K0K1MUX ( .D0(\i11878/SLICE_1017/i11878/GATE_H0 ), 
    .D1(\i11878/SLICE_1017/i11878/SLICE_1017_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11878/SLICE_1017_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE69) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40235 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF17B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11879_SLICE_1018 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11879/SLICE_1018/i11879/SLICE_1018_K1_H1 , 
         \i11879/SLICE_1018/i11879/GATE_H0 ;

  lut40236 \i11879/SLICE_1018_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11879/SLICE_1018/i11879/SLICE_1018_K1_H1 ));
  lut40237 \i11879/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11879/SLICE_1018/i11879/GATE_H0 ));
  selmux2 \i11879/SLICE_1018_K0K1MUX ( .D0(\i11879/SLICE_1018/i11879/GATE_H0 ), 
    .D1(\i11879/SLICE_1018/i11879/SLICE_1018_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11879/SLICE_1018_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h69CD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40237 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7DA8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11888_SLICE_1019 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11888/SLICE_1019/i11888/SLICE_1019_K1_H1 , 
         \i11888/SLICE_1019/i11888/GATE_H0 ;

  lut40238 \i11888/SLICE_1019_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11888/SLICE_1019/i11888/SLICE_1019_K1_H1 ));
  lut40239 \i11888/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11888/SLICE_1019/i11888/GATE_H0 ));
  selmux2 \i11888/SLICE_1019_K0K1MUX ( .D0(\i11888/SLICE_1019/i11888/GATE_H0 ), 
    .D1(\i11888/SLICE_1019/i11888/SLICE_1019_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE1C3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40239 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8386) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11889_SLICE_1020 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11889/SLICE_1020/i11889/SLICE_1020_K1_H1 , 
         \i11889/SLICE_1020/i11889/GATE_H0 ;

  lut40240 \i11889/SLICE_1020_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11889/SLICE_1020/i11889/SLICE_1020_K1_H1 ));
  lut40241 \i11889/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11889/SLICE_1020/i11889/GATE_H0 ));
  selmux2 \i11889/SLICE_1020_K0K1MUX ( .D0(\i11889/SLICE_1020/i11889/GATE_H0 ), 
    .D1(\i11889/SLICE_1020/i11889/SLICE_1020_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11889/SLICE_1020_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40241 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h70C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11892_SLICE_1021 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11892/SLICE_1021/i11892/SLICE_1021_K1_H1 , 
         \i11892/SLICE_1021/i11892/GATE_H0 ;

  lut40242 \i11892/SLICE_1021_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11892/SLICE_1021/i11892/SLICE_1021_K1_H1 ));
  lut40243 \i11892/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11892/SLICE_1021/i11892/GATE_H0 ));
  selmux2 \i11892/SLICE_1021_K0K1MUX ( .D0(\i11892/SLICE_1021/i11892/GATE_H0 ), 
    .D1(\i11892/SLICE_1021/i11892/SLICE_1021_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11892/SLICE_1021_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40242 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h79CF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40243 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7DE2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11895_SLICE_1022 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11895/SLICE_1022/i11895/SLICE_1022_K1_H1 , 
         \i11895/SLICE_1022/i11895/GATE_H0 ;

  lut40244 \i11895/SLICE_1022_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11895/SLICE_1022/i11895/SLICE_1022_K1_H1 ));
  lut40245 \i11895/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11895/SLICE_1022/i11895/GATE_H0 ));
  selmux2 \i11895/SLICE_1022_K0K1MUX ( .D0(\i11895/SLICE_1022/i11895/GATE_H0 ), 
    .D1(\i11895/SLICE_1022/i11895/SLICE_1022_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11895/SLICE_1022_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0B7B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40245 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11898_SLICE_1023 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11898/SLICE_1023/i11898/SLICE_1023_K1_H1 , 
         \i11898/SLICE_1023/i11898/GATE_H0 ;

  lut40246 \i11898/SLICE_1023_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11898/SLICE_1023/i11898/SLICE_1023_K1_H1 ));
  lut40247 \i11898/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11898/SLICE_1023/i11898/GATE_H0 ));
  selmux2 \i11898/SLICE_1023_K0K1MUX ( .D0(\i11898/SLICE_1023/i11898/GATE_H0 ), 
    .D1(\i11898/SLICE_1023/i11898/SLICE_1023_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11898/SLICE_1023_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40246 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF9DF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40247 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11904_SLICE_1024 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11904/SLICE_1024/i11904/SLICE_1024_K1_H1 , 
         \i11904/SLICE_1024/i11904/GATE_H0 ;

  lut40248 \i11904/SLICE_1024_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11904/SLICE_1024/i11904/SLICE_1024_K1_H1 ));
  lut40249 \i11904/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11904/SLICE_1024/i11904/GATE_H0 ));
  selmux2 \i11904/SLICE_1024_K0K1MUX ( .D0(\i11904/SLICE_1024/i11904/GATE_H0 ), 
    .D1(\i11904/SLICE_1024/i11904/SLICE_1024_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11904/SLICE_1024_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAE7B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40249 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCF79) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11905_SLICE_1025 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11905/SLICE_1025/i11905/SLICE_1025_K1_H1 , 
         \i11905/SLICE_1025/i11905/GATE_H0 ;

  lut40250 \i11905/SLICE_1025_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11905/SLICE_1025/i11905/SLICE_1025_K1_H1 ));
  lut40251 \i11905/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11905/SLICE_1025/i11905/GATE_H0 ));
  selmux2 \i11905/SLICE_1025_K0K1MUX ( .D0(\i11905/SLICE_1025/i11905/GATE_H0 ), 
    .D1(\i11905/SLICE_1025/i11905/SLICE_1025_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11905/SLICE_1025_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40250 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BCF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40251 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h79E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11911_SLICE_1026 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11911/SLICE_1026/i11911/SLICE_1026_K1_H1 , 
         \i11911/SLICE_1026/i11911/GATE_H0 ;

  lut40252 \i11911/SLICE_1026_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11911/SLICE_1026/i11911/SLICE_1026_K1_H1 ));
  lut40253 \i11911/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11911/SLICE_1026/i11911/GATE_H0 ));
  selmux2 \i11911/SLICE_1026_K0K1MUX ( .D0(\i11911/SLICE_1026/i11911/GATE_H0 ), 
    .D1(\i11911/SLICE_1026/i11911/SLICE_1026_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40252 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1BC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40253 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h67AE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11912_SLICE_1027 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   GNDI, \i11912/SLICE_1027/i11912/SLICE_1027_K1_H1 , 
         \i11912/SLICE_1027/i11912/GATE_H0 ;

  lut40153 \i11912/SLICE_1027_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i11912/SLICE_1027/i11912/SLICE_1027_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40254 \i11912/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11912/SLICE_1027/i11912/GATE_H0 ));
  selmux2 \i11912/SLICE_1027_K0K1MUX ( .D0(\i11912/SLICE_1027/i11912/GATE_H0 ), 
    .D1(\i11912/SLICE_1027/i11912/SLICE_1027_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11912/SLICE_1027_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40254 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA7F6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11914_SLICE_1028 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11914/SLICE_1028/i11914/SLICE_1028_K1_H1 , 
         \i11914/SLICE_1028/i11914/GATE_H0 ;

  lut40255 \i11914/SLICE_1028_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11914/SLICE_1028/i11914/SLICE_1028_K1_H1 ));
  lut40256 \i11914/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11914/SLICE_1028/i11914/GATE_H0 ));
  selmux2 \i11914/SLICE_1028_K0K1MUX ( .D0(\i11914/SLICE_1028/i11914/GATE_H0 ), 
    .D1(\i11914/SLICE_1028/i11914/SLICE_1028_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40255 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40256 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0540) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11915_SLICE_1029 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11915/SLICE_1029/i11915/SLICE_1029_K1_H1 , 
         \i11915/SLICE_1029/i11915/GATE_H0 ;

  lut40257 \i11915/SLICE_1029_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11915/SLICE_1029/i11915/SLICE_1029_K1_H1 ));
  lut40168 \i11915/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11915/SLICE_1029/i11915/GATE_H0 ));
  selmux2 \i11915/SLICE_1029_K0K1MUX ( .D0(\i11915/SLICE_1029/i11915/GATE_H0 ), 
    .D1(\i11915/SLICE_1029/i11915/SLICE_1029_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11915/SLICE_1029_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40257 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0420) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11924_SLICE_1030 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11924/SLICE_1030/i11924/SLICE_1030_K1_H1 , 
         \i11924/SLICE_1030/i11924/GATE_H0 ;

  lut40258 \i11924/SLICE_1030_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11924/SLICE_1030/i11924/SLICE_1030_K1_H1 ));
  lut40259 \i11924/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11924/SLICE_1030/i11924/GATE_H0 ));
  selmux2 \i11924/SLICE_1030_K0K1MUX ( .D0(\i11924/SLICE_1030/i11924/GATE_H0 ), 
    .D1(\i11924/SLICE_1030/i11924/SLICE_1030_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11924/SLICE_1030_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40258 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1186) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40259 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30C6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11925_SLICE_1031 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11925/SLICE_1031/i11925/SLICE_1031_K1_H1 , 
         \i11925/SLICE_1031/i11925/GATE_H0 ;

  lut40260 \i11925/SLICE_1031_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11925/SLICE_1031/i11925/SLICE_1031_K1_H1 ));
  lut40261 \i11925/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11925/SLICE_1031/i11925/GATE_H0 ));
  selmux2 \i11925/SLICE_1031_K0K1MUX ( .D0(\i11925/SLICE_1031/i11925/GATE_H0 ), 
    .D1(\i11925/SLICE_1031/i11925/SLICE_1031_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11925/SLICE_1031_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40260 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8630) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40261 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC61B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11934_SLICE_1032 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11934/SLICE_1032/i11934/SLICE_1032_K1_H1 , 
         \i11934/SLICE_1032/i11934/GATE_H0 ;

  lut40262 \i11934/SLICE_1032_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11934/SLICE_1032/i11934/SLICE_1032_K1_H1 ));
  lut40263 \i11934/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11934/SLICE_1032/i11934/GATE_H0 ));
  selmux2 \i11934/SLICE_1032_K0K1MUX ( .D0(\i11934/SLICE_1032/i11934/GATE_H0 ), 
    .D1(\i11934/SLICE_1032/i11934/SLICE_1032_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40262 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8E63) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40263 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9851) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11935_SLICE_1033 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11935/SLICE_1033/i11935/SLICE_1033_K1_H1 , 
         \i11935/SLICE_1033/i11935/GATE_H0 ;

  lut40264 \i11935/SLICE_1033_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11935/SLICE_1033/i11935/SLICE_1033_K1_H1 ));
  lut40265 \i11935/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11935/SLICE_1033/i11935/GATE_H0 ));
  selmux2 \i11935/SLICE_1033_K0K1MUX ( .D0(\i11935/SLICE_1033/i11935/GATE_H0 ), 
    .D1(\i11935/SLICE_1033/i11935/SLICE_1033_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11935/SLICE_1033_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40264 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE639) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40265 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6631) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module LessThan_51_i10_SLICE_1034 ( input C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, \LessThan_51_i10/SLICE_1034/LessThan_51_i10/SLICE_1034_K1_H1 , 
         \LessThan_51_i10/SLICE_1034/LessThan_51_i10/GATE_H0 ;

  lut40190 \LessThan_51_i10/SLICE_1034_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\LessThan_51_i10/SLICE_1034/LessThan_51_i10/SLICE_1034_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40266 \LessThan_51_i10/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\LessThan_51_i10/SLICE_1034/LessThan_51_i10/GATE_H0 ));
  selmux2 \LessThan_51_i10/SLICE_1034_K0K1MUX ( 
    .D0(\LessThan_51_i10/SLICE_1034/LessThan_51_i10/GATE_H0 ), 
    .D1(\LessThan_51_i10/SLICE_1034/LessThan_51_i10/SLICE_1034_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40266 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C8E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11939_SLICE_1035 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i11939/SLICE_1035/i11939/SLICE_1035_K1_H1 , 
         \i11939/SLICE_1035/i11939/GATE_H0 ;

  lut40267 \i11939/SLICE_1035_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11939/SLICE_1035/i11939/SLICE_1035_K1_H1 ));
  lut40268 \i11939/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11939/SLICE_1035/i11939/GATE_H0 ));
  selmux2 \i11939/SLICE_1035_K0K1MUX ( .D0(\i11939/SLICE_1035/i11939/GATE_H0 ), 
    .D1(\i11939/SLICE_1035/i11939/SLICE_1035_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40267 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0E1C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40268 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1A81) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i11838_SLICE_1036 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i11838/SLICE_1036/i11838/SLICE_1036_K1_H1 , 
         \i11838/SLICE_1036/i11838/GATE_H0 ;

  lut40269 \i11838/SLICE_1036_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i11838/SLICE_1036/i11838/SLICE_1036_K1_H1 ));
  lut40270 \i11838/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i11838/SLICE_1036/i11838/GATE_H0 ));
  selmux2 \i11838/SLICE_1036_K0K1MUX ( .D0(\i11838/SLICE_1036/i11838/GATE_H0 ), 
    .D1(\i11838/SLICE_1036/i11838/SLICE_1036_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i11838/SLICE_1036_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40269 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0220) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40270 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1037 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40271 \u_speaker/i119_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40272 \u_speaker/n17008_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40271 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0530) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40272 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1038 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly;

  lut40273 \u_speaker/u_DDS_10/i4139_4_lut_3_lut_rep_452_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40273 \u_speaker/u_DDS_11/i4146_4_lut_3_lut_rep_426_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0003 \u_speaker/u_DDS_11/fcw_r_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module lut40273 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF660) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1039 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40274 \u_key_6/i293_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40120 \u_speaker/i1_2_lut_rep_480_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40274 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2220) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1040 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40275 \u_key_7/i109_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40276 \u_speaker/i1_2_lut_rep_482_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40275 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40276 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFA8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1041 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40277 \u_speaker/i7515_2_lut_rep_478_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40278 \u_speaker/i321_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40277 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF8A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40278 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1042 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40120 \u_speaker/i7502_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40279 \u_speaker/i121_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40279 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1043 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/i127_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40280 \u_speaker/n17004_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40280 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4744) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1044 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40281 \u_speaker/i277_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40120 \u_speaker/i1_2_lut_rep_481_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40281 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4440) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1045 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40274 \u_key_10/i309_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40120 \u_speaker/i7514_2_lut_rep_479_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1046 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40282 i11928_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 n18443_bdd_3_lut_12700( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40282 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3A0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1047 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40281 \u_key_1/i273_3_lut_rep_531_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40130 \u_speaker/equal_1577_i5_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1048 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40281 \u_key_9/i305_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40283 \u_speaker/equal_1575_i6_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40283 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1049 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40274 \u_key_4/i285_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_speaker/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1050 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40050 \u_buzzer/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_speaker/i2_2_lut_rep_439_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1051 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40281 \u_key_1/i1_3_lut_rep_497_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \u_speaker/i2_2_lut_rep_440_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1052 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/n17008_bdd_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40284 \u_speaker/n18347_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40284 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF35) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1053 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40278 \u_speaker/i317_3_lut_rep_536_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40107 \u_speaker/i7435_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1054 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40274 \u_key_4/i97_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40130 \u_speaker/equal_1555_i6_2_lut_rep_565 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1055 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \u_key_6/i1_2_lut_rep_572 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40279 \u_speaker/i105_3_lut_rep_507_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1056 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/n17245_bdd_3_lut_12869 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 \u_speaker/n18971_bdd_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1057 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40275 \u_key_7/i297_3_lut_rep_495_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40130 \u_speaker/equal_1570_i6_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1058 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40285 \u_key_7/i1_2_lut_rep_538 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40286 \u_speaker/i55_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40285 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40286 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1110) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1059 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40275 \u_speaker/i281_3_lut_rep_530_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40100 \u_speaker/equal_1566_i6_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1060 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40287 \u_speaker/rom2_3__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40100 \u_speaker/n17920_bdd_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40287 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1061 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40288 \u_key_8/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40100 \u_speaker/i1_2_lut_rep_576 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40288 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1062 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 \u_buzzer/i7545_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40285 \u_speaker/i127_2_lut_rep_579 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1063 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40285 \u_key_11/i1_2_lut_rep_589 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40289 \u_speaker/i5_2_lut_rep_471_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40289 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1064 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \u_key_10/i1_2_lut_rep_586 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40289 \u_speaker/i1_2_lut_rep_438_2_lut_3_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1065 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40130 \u_speaker/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40290 \u_speaker/i133_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40290 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1066 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_buzzer/i3_4_lut_adj_27 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40285 \u_speaker/i131_2_lut_rep_581 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1067 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_speaker/i1_2_lut_3_lut_3_lut_4_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40291 \u_speaker/i3_2_lut_rep_493_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40291 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1068 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \u_speaker/i89_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40130 \u_speaker/i1_2_lut_rep_582 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1069 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40061 \u_key_8/i1_2_lut_rep_503_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40052 \u_speaker/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1070 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \u_key_4/i1_2_lut_rep_554 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40292 \u_speaker/i8075_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40292 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1071 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \u_key_5/i1_2_lut_rep_553 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40286 \u_speaker/i1_2_lut_3_lut_4_lut_adj_33 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1072 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40061 \u_key_8/i1_2_lut_rep_526_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40052 \u_speaker/i3_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1073 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40293 \u_speaker/i16_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40294 \u_speaker/i1_2_lut_3_lut_4_lut_adj_34 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40293 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD850) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40294 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1074 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40295 \u_speaker/i18_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40296 \u_speaker/i1_2_lut_3_lut_4_lut_adj_35 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40295 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40296 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1075 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40107 \u_speaker/i1_2_lut_rep_585 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40297 \u_speaker/i2_3_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40297 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1076 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40298 \u_speaker/i36_4_lut_4_lut_adj_50 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40299 \u_speaker/i1_2_lut_3_lut_4_lut_adj_36 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40298 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7250) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40299 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0060) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1077 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40281 \u_key_9/i117_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40283 \u_speaker/equal_1562_i6_2_lut_rep_588 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1078 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40107 \u_speaker/i7304_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40300 \u_speaker/i125_3_lut_rep_517_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40300 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1079 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40301 \u_speaker/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40302 \u_speaker/equal_1559_i7_2_lut_rep_511_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40301 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40302 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1080 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 \u_buzzer/i3_4_lut_adj_29 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_speaker/i1_2_lut_3_lut_4_lut_adj_39 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1081 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40303 \u_key_4/i1_2_lut_rep_525_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40052 \u_speaker/i1_2_lut_3_lut_4_lut_adj_40 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40303 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1082 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40285 \u_speaker/i87_2_lut_rep_543 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40286 \u_speaker/i6076_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1083 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 \u_buzzer/i2985_2_lut_rep_587 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40293 \u_speaker/i36_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1084 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_speaker/i3_4_lut_adj_54 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_speaker/i1_2_lut_rep_429_3_lut_3_lut_4_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1085 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40285 \u_key_9/i1_2_lut_rep_573 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_speaker/i1_2_lut_rep_430_3_lut_3_lut_4_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1086 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40285 \u_key_8/i1_2_lut_rep_633 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_speaker/i11675_2_lut_2_lut_3_lut_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1087 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 \u_buzzer/i1_2_lut_4_lut_adj_24 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \u_speaker/i1_2_lut_rep_441_2_lut_3_lut_4_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1088 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \u_buzzer/i1_2_lut_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40304 \u_speaker/i11658_2_lut_4_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40304 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6D6D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1089 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40295 \u_speaker/i16_4_lut_4_lut_adj_51 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40305 \u_speaker/i4_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40305 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1090 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40275 \u_key_11/i313_3_lut_rep_537_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40107 \u_speaker/i1_2_lut_rep_631 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1091 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40306 \u_key_11/i12314_2_lut_rep_485_2_lut_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40307 \u_speaker/i1_2_lut_rep_424_3_lut_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40306 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0BB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40307 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1092 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40285 \u_key_1/i1_2_lut_rep_539 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40276 \u_speaker/i1_2_lut_rep_461_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1093 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40289 \u_key_7/i1_2_lut_rep_486_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40307 \u_speaker/i2_3_lut_rep_428_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1094 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40308 \u_key_8/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \u_speaker/i7260_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40308 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1095 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40289 \u_key_1/i2_2_lut_rep_467_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40285 \u_speaker/i91_2_lut_rep_540 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1096 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_speaker/equal_1580_i6_2_lut_rep_542 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40275 \u_speaker/i93_3_lut_rep_494_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1097 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 \u_buzzer/i2_3_lut_4_lut_adj_26 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40061 \u_speaker/i4709_2_lut_rep_502_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1098 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 \u_buzzer/i2_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40061 \u_speaker/i1_2_lut_rep_500_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1099 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40309 \u_buzzer/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40310 \u_speaker/i1_4_lut_adj_48 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40309 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00EF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40310 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1100 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40311 \u_key_6/i1_2_lut_rep_524_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40312 \u_speaker/i1_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40311 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40312 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF57) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1101 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40313 \u_key_5/i1_2_lut_3_lut_4_lut_adj_16 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40307 \u_speaker/i2_3_lut_rep_434_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40313 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1102 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40055 \u_speaker/i7283_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \u_speaker/i7287_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1103 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40314 \u_buzzer/i1_3_lut_4_lut_adj_20 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40315 \u_speaker/i1_4_lut_adj_53 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40314 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40315 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4544) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1104 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40289 \u_key_9/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \u_speaker/i3_4_lut_adj_55 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_6_SLICE_1105 ( input D1, C1, B1, A1, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40139 \u_speaker/u_DDS_6/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40107 \u_speaker/u_DDS_6/i3231_2_lut_rep_577 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_1106 ( input B1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40107 \u_speaker/u_DDS_5/i3387_2_lut_rep_541 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40139 \u_speaker/u_DDS_5/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_1107 ( input B1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40107 \u_speaker/u_DDS_4/i3521_2_lut_rep_595 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40139 \u_speaker/u_DDS_4/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_4_SLICE_1108 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40316 \u_speaker/u_DDS_4/i3539_4_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40317 \u_speaker/u_DDS_4/i3532_4_lut_3_lut_rep_520_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40316 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE8E8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40317 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_u_DDS_3_SLICE_1109 ( input B1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40107 \u_speaker/u_DDS_3/i3662_2_lut_rep_596 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40139 \u_speaker/u_DDS_3/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_1110 ( input B1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40107 \u_speaker/u_DDS_12/i3846_2_lut_rep_594 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40139 \u_speaker/u_DDS_12/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_state_SLICE_1111 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_state/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_state/i5555_2_lut_rep_442 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_state_SLICE_1112 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40052 \u_key_state/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_state/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_state_SLICE_1113 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_state/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_state/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_state_SLICE_1114 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_state/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_state/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1115 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40113 mux_617_Mux_4_i94_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40318 mux_617_Mux_4_i92_3_lut_4_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40318 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC898) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1116 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40043 i2_4_lut_adj_59( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40319 i2331_3_lut_rep_487( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40319 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hABAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1117 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40320 i7_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40302 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40320 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1118 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 i2_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i22_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1119 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 i6_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i20_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1120 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40321 i5892_3_lut_rep_630( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40322 i12325_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40321 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40322 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h373F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1121 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40323 i12356_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 i1_2_lut_adj_57( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40323 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1122 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40107 i7407_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40324 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40324 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1123 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40325 i1_2_lut_rep_489_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40326 i12338_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40325 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40326 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1124 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40111 i11827_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40283 i1_2_lut_rep_592( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1125 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_buzzer/i12351_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \u_buzzer/CNT_17__I_0_91_i29_2_lut_rep_558 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1126 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40327 \u_buzzer/i11790_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \u_buzzer/CNT_17__I_0_91_i27_2_lut_rep_557 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40327 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5554) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1127 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40328 \u_buzzer/CNT_17__I_0_91_i26_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40328 \u_buzzer/CNT_17__I_0_91_i14_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40328 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD4D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1128 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40329 \u_buzzer/i12348_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40098 \u_buzzer/CNT_17__I_0_91_i31_2_lut_rep_559 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40329 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF04) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1129 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40330 \u_buzzer/i12353_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \u_buzzer/CNT_17__I_0_91_i21_2_lut_rep_560 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40330 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1130 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40331 \u_buzzer/i11778_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \u_buzzer/CNT_17__I_0_91_i23_2_lut_rep_561 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40331 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1131 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40328 \u_buzzer/CNT_17__I_0_91_i20_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40328 \u_buzzer/CNT_17__I_0_91_i18_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1132 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40292 \u_buzzer/i11746_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \u_buzzer/CNT_17__I_0_91_i9_2_lut_rep_563 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1133 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40328 \u_buzzer/CNT_17__I_0_91_i12_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40328 \u_buzzer/CNT_17__I_0_91_i10_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1134 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40292 \u_buzzer/i11759_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \u_buzzer/CNT_17__I_0_91_i15_2_lut_rep_567 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1135 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_buzzer/i3_4_lut_adj_28 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_buzzer/i1_2_lut_rep_458_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1136 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_buzzer/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_buzzer/i1_2_lut_3_lut_4_lut_adj_17 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1137 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_buzzer/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_buzzer/i1_2_lut_rep_468_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1138 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_buzzer/i3_4_lut_adj_30 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_buzzer/i1_2_lut_rep_437_2_lut_3_lut_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1139 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40107 \u_buzzer/i3_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \u_buzzer/i11_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1140 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_buzzer/i12_4_lut_adj_23 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40332 \u_buzzer/i12286_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40332 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1141 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_buzzer/i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40333 \u_buzzer/i12285_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40333 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1142 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40303 \u_key_10/i4_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \u_buzzer/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_5_SLICE_1143 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_5/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_5/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_5_SLICE_1144 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_5/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_5/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_5_SLICE_1145 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_5/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_5/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1146 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40289 \u_key_7/i1_2_lut_rep_472_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40055 \u_key_5/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1147 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40294 i2_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 i7991_2_lut_rep_622( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_8_SLICE_1148 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_8/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_8/i5538_2_lut_rep_449 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_8_SLICE_1149 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_8/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_8/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_8_SLICE_1150 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_8/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_8/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_8_SLICE_1151 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_8/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_8/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_10_SLICE_1152 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_10/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_10/i5542_2_lut_rep_447 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_10_SLICE_1153 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_10/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_10/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_10_SLICE_1154 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_10/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_10/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_10_SLICE_1155 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_10/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_10/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_11_SLICE_1156 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_11/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_11/i5544_2_lut_rep_446 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_11_SLICE_1157 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_11/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_11/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_11_SLICE_1158 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_11/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_11/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_11_SLICE_1159 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_11/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_11/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_12_SLICE_1160 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_12/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_12/i5546_2_lut_rep_445 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_12_SLICE_1161 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_12/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_12/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_12_SLICE_1162 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_12/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_12/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_12_SLICE_1163 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_12/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_12/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_2_SLICE_1164 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_2/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_2/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_2_SLICE_1165 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_2/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_2/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_2_SLICE_1166 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_2/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_2/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_13_SLICE_1167 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_13/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_13/i5548_2_lut_rep_444 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_13_SLICE_1168 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_13/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_13/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_13_SLICE_1169 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_13/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_13/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_13_SLICE_1170 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_13/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_13/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_9_SLICE_1171 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_9/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_9/i5540_2_lut_rep_448 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_9_SLICE_1172 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_9/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_9/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_9_SLICE_1173 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_9/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_9/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_9_SLICE_1174 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_9/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_9/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_1_SLICE_1175 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_1/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_1/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_1_SLICE_1176 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_1/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_1/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_1_SLICE_1177 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_1/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_1/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_7_SLICE_1178 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_7/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_7/i5536_2_lut_rep_450 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_7_SLICE_1179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_7/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_7/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_7_SLICE_1180 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_7/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_7/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_7_SLICE_1181 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_7/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_7/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_6_SLICE_1182 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_6/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_6/i5534_2_lut_rep_451 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_6_SLICE_1183 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_6/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_6/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_6_SLICE_1184 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_6/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_6/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_6_SLICE_1185 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_6/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_6/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1186 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40334 i12365_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 LessThan_51_i7_2_lut_rep_544( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40334 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1187 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40335 n16859_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40335 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_3_SLICE_1188 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_3/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_3/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_3_SLICE_1189 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_3/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_3/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_3_SLICE_1190 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_3/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_3/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_15_SLICE_1191 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_15/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \u_key_15/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_15_SLICE_1192 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_15/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_15/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_15_SLICE_1193 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_15/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_15/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_15_SLICE_1194 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_15/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_15/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_4_SLICE_1195 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_4/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_4/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_4_SLICE_1196 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_4/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_4/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_4_SLICE_1197 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_4/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_4/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_14_SLICE_1198 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \u_key_14/i30_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \u_key_14/i5550_2_lut_rep_443 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_14_SLICE_1199 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_14/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_14/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_14_SLICE_1200 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_14/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_14/i29_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_14_SLICE_1201 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_14/i13_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_14/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1202 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40336 \u_speaker/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40337 \u_speaker/rom2_3__bdd_4_lut_12390 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40336 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40337 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6E06) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1203 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40338 \u_speaker/i8129_2_lut_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40339 \u_speaker/i7810_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40338 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40339 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h006D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1204 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40340 \u_speaker/i4952_2_lut_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40339 \u_speaker/i7481_2_lut_rep_515_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40340 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF92) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1205 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40341 \u_speaker/i7802_2_lut_rep_474_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40342 \u_speaker/i7805_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40341 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40342 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3320) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1206 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40343 \u_speaker/i7808_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40344 \u_speaker/mux_63_Mux_9_i3_3_lut_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40343 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40344 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1207 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40345 i10417_2_lut_rep_425_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40346 i7459_2_lut_rep_433( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40345 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40346 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1208 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40347 \u_speaker/i1_2_lut_rep_477_4_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40348 \u_speaker/i14_4_lut_rep_625 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40347 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2424) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40348 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1818) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_u_DDS_6_SLICE_1209 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40119 \u_speaker/u_DDS_6/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40317 \u_speaker/u_DDS_6/i3242_4_lut_3_lut_rep_512_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_5_SLICE_1210 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40119 \u_speaker/u_DDS_5/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40317 \u_speaker/u_DDS_5/i3398_4_lut_3_lut_rep_492_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_3_SLICE_1211 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40119 \u_speaker/u_DDS_3/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40317 \u_speaker/u_DDS_3/i3673_4_lut_3_lut_rep_521_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_u_DDS_12_SLICE_1212 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40119 \u_speaker/u_DDS_12/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40317 \u_speaker/u_DDS_12/i3857_4_lut_3_lut_rep_519_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1213 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40349 i1_2_lut_3_lut_adj_62( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40350 i29_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40349 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40350 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h04C7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1214 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40346 i7954_2_lut_rep_431( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40349 i2098_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1215 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40351 mux_674_Mux_1_i91_3_lut_3_lut_4_lut_3_lut( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40352 mux_617_Mux_1_i37_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40351 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1B1B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40352 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC2C2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1216 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40328 \u_buzzer/CNT_17__I_0_91_i8_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40353 \u_buzzer/i11761_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40353 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9009) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1217 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40328 \u_buzzer/CNT_17__I_0_91_i6_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40353 \u_buzzer/i11737_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_1_SLICE_1218 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40289 \u_key_1/i1_2_lut_rep_470_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40291 \u_key_1/i1_2_lut_rep_498_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1219 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40346 i7952_2_lut_rep_432( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40354 i12347_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40354 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1220 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1264_i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/i6021_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1221 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_speaker/equal_1572_i5_2_lut_rep_632 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40283 \u_speaker/equal_1574_i5_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1222 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40355 \u_speaker/i2_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40356 \u_speaker/n17245_bdd_4_lut_12868 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40355 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0220) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40356 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1223 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40046 \u_speaker/i12272_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40332 \u_speaker/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1224 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40357 \u_speaker/i1_3_lut_rep_555 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40358 \u_speaker/i12344_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40357 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40358 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h18FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1225 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 \u_buzzer/i1_2_lut_rep_466_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40289 \u_speaker/i1_2_lut_rep_484_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1226 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40283 \u_buzzer/i7474_2_lut_rep_552 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \u_speaker/i2_2_lut_rep_550 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1227 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 \u_buzzer/i1_2_lut_rep_469_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40359 \u_speaker/i1_4_lut_adj_49 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40359 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_u_DDS_1_SLICE_1228 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 \u_speaker/u_DDS_1/i4669_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40357 \u_speaker/u_DDS_1/i5221_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1229 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40130 \u_buzzer/i12283_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40360 \u_speaker/u_DDS_13/i12279_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40360 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1230 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40346 i7953_2_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 i683_2_lut_rep_578( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1231 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40361 i8172_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i1_2_lut_rep_591( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40361 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1232 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40097 \u_buzzer/i12354_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \u_buzzer/CNT_17__I_0_91_i25_2_lut_rep_562 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1233 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40056 \u_buzzer/i7535_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40330 \u_buzzer/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1234 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40097 \u_buzzer/i12352_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \u_buzzer/CNT_17__I_0_91_i33_2_lut_rep_556 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1235 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40046 \u_buzzer/i12335_2_lut_rep_621 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40362 \u_buzzer/i12260_2_lut_rep_590 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40362 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1236 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40289 \u_key_7/i1_2_lut_rep_473_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40363 \u_buzzer/i6074_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40363 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_5_SLICE_1237 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_5/i5532_2_lut_rep_453 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \u_key_5/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1238 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40311 \u_key_4/i1_2_lut_rep_514_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40274 \u_key_5/i289_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_11_SLICE_1239 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40364 \u_key_11/i8052_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40364 \u_key_11/i8055_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40364 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF54) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_key_2_SLICE_1240 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_2/i5526_2_lut_rep_456 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \u_key_2/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_1_SLICE_1241 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_1/i5524_2_lut_rep_457 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \u_key_1/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1242 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40296 i1_2_lut_3_lut_4_lut_adj_63( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i1_2_lut_rep_548( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_3_SLICE_1243 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_3/i5528_2_lut_rep_455 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \u_key_3/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_4_SLICE_1244 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_4/i5530_2_lut_rep_454 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \u_key_4/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1245 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1605_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1605_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1246 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1603_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1603_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1247 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1605_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1605_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1248 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1603_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1603_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1249 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1609_i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1609_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1250 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40061 \u_key_11/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40365 \u_speaker/n17246_bdd_3_lut_then_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40365 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3535) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1251 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40365 \u_speaker/i158_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40365 \u_speaker/n17246_bdd_3_lut_else_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1252 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1603_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 \u_speaker/i7453_2_lut_rep_580 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1253 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1603_i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1603_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1254 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1603_i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1608_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1255 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1608_i11_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1608_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1256 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1610_i11_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1609_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1257 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1610_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1610_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1258 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1583_i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1583_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1259 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1584_i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1584_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1260 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1608_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1608_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1261 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1610_i9_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1610_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1262 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1609_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1609_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1263 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1609_i8_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1609_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1264 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1583_i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1583_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1265 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1609_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1609_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1266 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1584_i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1584_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1267 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1583_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1583_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1268 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1584_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1584_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1269 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1583_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1583_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1270 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1608_i9_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1584_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1271 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1610_i8_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1583_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1272 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1584_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1584_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1273 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1610_i7_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1583_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1274 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1608_i7_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1584_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1275 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1610_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1583_i6_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1276 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1608_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1584_i6_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1277 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1605_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1605_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1278 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1603_i9_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1608_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1279 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1603_i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1603_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1280 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1610_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1609_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1281 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1610_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1610_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1282 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1608_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1608_i4_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_speaker_SLICE_1283 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1605_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1605_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1284 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40366 \u_key_1/i1_2_lut_rep_462_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \u_speaker/i1_2_lut_3_lut_4_lut_adj_46 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40366 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1285 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1605_i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1605_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1286 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i11830_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i11918_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1287 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40362 i12258_2_lut_rep_599( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40130 i1_2_lut_rep_597( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1288 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_buzzer/i11_4_lut_adj_22 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40353 \u_buzzer/i11797_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1289 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40367 \u_buzzer/i7541_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_buzzer/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40367 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1290 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40283 \u_key_8/i1_2_lut_rep_574 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40368 \u_buzzer/i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40368 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1291 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_buzzer/i1_2_lut_rep_435_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40052 \u_buzzer/i2_3_lut_4_lut_adj_21 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_14_SLICE_1292 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_14/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_14/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_14_SLICE_1293 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_14/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_14/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_4_SLICE_1294 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_4/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_4/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_4_SLICE_1295 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_4/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_4/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_15_SLICE_1296 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_15/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_15/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_3_SLICE_1297 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_3/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_3/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_3_SLICE_1298 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_3/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_3/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_6_SLICE_1299 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_6/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_6/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_6_SLICE_1300 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_6/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_6/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_7_SLICE_1301 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_7/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_7/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_7_SLICE_1302 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_7/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_7/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_1_SLICE_1303 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_1/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_1/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_1_SLICE_1304 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_1/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_1/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_9_SLICE_1305 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_9/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_9/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_9_SLICE_1306 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_9/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_9/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_13_SLICE_1307 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_13/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_13/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_13_SLICE_1308 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_13/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_13/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_2_SLICE_1309 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_2/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_2/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_2_SLICE_1310 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_2/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_2/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_12_SLICE_1311 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_12/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_12/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_12_SLICE_1312 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_12/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_12/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_11_SLICE_1313 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_11/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_11/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_11_SLICE_1314 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_11/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_11/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_10_SLICE_1315 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_10/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_10/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_10_SLICE_1316 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_10/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_10/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_8_SLICE_1317 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_8/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_8/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_8_SLICE_1318 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_8/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_8/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_5_SLICE_1319 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_5/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_5/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_5_SLICE_1320 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \u_key_5/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \u_key_5/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1321 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 i1_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i14_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1322 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 i17_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i18_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_key_state_SLICE_1323 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \u_key_state/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \u_key_state/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1324 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40274 \u_key_5/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40369 \u_speaker/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40369 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_buzzer_SLICE_1325 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 \u_buzzer/CNT_17__I_0_91_i17_2_lut_rep_569 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \u_buzzer/CNT_17__I_0_91_i19_2_lut_rep_570 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1326 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40328 LessThan_51_i6_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 LessThan_51_i9_2_lut_rep_545( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1327 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 \u_buzzer/CNT_17__I_0_91_i13_2_lut_rep_566 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \u_buzzer/CNT_17__I_0_91_i11_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_buzzer_SLICE_1328 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40370 \u_buzzer/CNT_17__I_0_91_i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40353 \u_buzzer/i11775_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40370 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C8E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_speaker_SLICE_1329 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 \u_speaker/mux_1609_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \u_speaker/mux_1605_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module key_10_ ( output PADDI, input key10 );

  xo2iobuf key_pad_10( .Z(PADDI), .PAD(key10));

  specify
    (key10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key10, 0:0:0);
    $width (negedge key10, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module key_9_ ( output PADDI, input key9 );

  xo2iobuf key_pad_9( .Z(PADDI), .PAD(key9));

  specify
    (key9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key9, 0:0:0);
    $width (negedge key9, 0:0:0);
  endspecify

endmodule

module key_11_ ( output PADDI, input key11 );

  xo2iobuf key_pad_11( .Z(PADDI), .PAD(key11));

  specify
    (key11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key11, 0:0:0);
    $width (negedge key11, 0:0:0);
  endspecify

endmodule

module key_12_ ( output PADDI, input key12 );

  xo2iobuf key_pad_12( .Z(PADDI), .PAD(key12));

  specify
    (key12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key12, 0:0:0);
    $width (negedge key12, 0:0:0);
  endspecify

endmodule

module key_13_ ( output PADDI, input key13 );

  xo2iobuf key_pad_13( .Z(PADDI), .PAD(key13));

  specify
    (key13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key13, 0:0:0);
    $width (negedge key13, 0:0:0);
  endspecify

endmodule

module key_14_ ( output PADDI, input key14 );

  xo2iobuf key_pad_14( .Z(PADDI), .PAD(key14));

  specify
    (key14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key14, 0:0:0);
    $width (negedge key14, 0:0:0);
  endspecify

endmodule

module rst_n ( output PADDI, input rst_n );

  xo2iobuf rst_n_pad( .Z(PADDI), .PAD(rst_n));

  specify
    (rst_n => PADDI) = (0:0:0,0:0:0);
    $width (posedge rst_n, 0:0:0);
    $width (negedge rst_n, 0:0:0);
  endspecify

endmodule

module sys_clk ( output PADDI, input sys_clk );

  xo2iobuf sys_clk_pad( .Z(PADDI), .PAD(sys_clk));

  specify
    (sys_clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge sys_clk, 0:0:0);
    $width (negedge sys_clk, 0:0:0);
  endspecify

endmodule

module pwm_out2 ( input PADDO, output pwm_out2 );
  wire   GNDI;

  xo2iobuf0371 pwm_out2_pad( .I(PADDO), .T(GNDI), .PAD(pwm_out2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => pwm_out2) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0371 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module pwm_out1 ( input PADDO, output pwm_out1 );
  wire   GNDI;

  xo2iobuf0371 pwm_out1_pad( .I(PADDO), .T(GNDI), .PAD(pwm_out1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => pwm_out1) = (0:0:0,0:0:0);
  endspecify

endmodule

module key_8_ ( output PADDI, input key8 );

  xo2iobuf key_pad_8( .Z(PADDI), .PAD(key8));

  specify
    (key8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key8, 0:0:0);
    $width (negedge key8, 0:0:0);
  endspecify

endmodule

module key_7_ ( output PADDI, input key7 );

  xo2iobuf key_pad_7( .Z(PADDI), .PAD(key7));

  specify
    (key7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key7, 0:0:0);
    $width (negedge key7, 0:0:0);
  endspecify

endmodule

module key_6_ ( output PADDI, input key6 );

  xo2iobuf key_pad_6( .Z(PADDI), .PAD(key6));

  specify
    (key6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key6, 0:0:0);
    $width (negedge key6, 0:0:0);
  endspecify

endmodule

module key_5_ ( output PADDI, input key5 );

  xo2iobuf key_pad_5( .Z(PADDI), .PAD(key5));

  specify
    (key5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key5, 0:0:0);
    $width (negedge key5, 0:0:0);
  endspecify

endmodule

module key_4_ ( output PADDI, input key4 );

  xo2iobuf key_pad_4( .Z(PADDI), .PAD(key4));

  specify
    (key4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key4, 0:0:0);
    $width (negedge key4, 0:0:0);
  endspecify

endmodule

module key_3_ ( output PADDI, input key3 );

  xo2iobuf key_pad_3( .Z(PADDI), .PAD(key3));

  specify
    (key3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key3, 0:0:0);
    $width (negedge key3, 0:0:0);
  endspecify

endmodule

module key_2_ ( output PADDI, input key2 );

  xo2iobuf key_pad_2( .Z(PADDI), .PAD(key2));

  specify
    (key2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key2, 0:0:0);
    $width (negedge key2, 0:0:0);
  endspecify

endmodule

module key_1_ ( output PADDI, input key1 );

  xo2iobuf key_pad_1( .Z(PADDI), .PAD(key1));

  specify
    (key1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key1, 0:0:0);
    $width (negedge key1, 0:0:0);
  endspecify

endmodule

module key_0_ ( output PADDI, input key0 );

  xo2iobuf key_pad_0( .Z(PADDI), .PAD(key0));

  specify
    (key0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key0, 0:0:0);
    $width (negedge key0, 0:0:0);
  endspecify

endmodule

module key_pa ( output PADDI, input key_pa );

  xo2iobuf key_pa_pad( .Z(PADDI), .PAD(key_pa));

  specify
    (key_pa => PADDI) = (0:0:0,0:0:0);
    $width (posedge key_pa, 0:0:0);
    $width (negedge key_pa, 0:0:0);
  endspecify

endmodule

module key_state ( output PADDI, input key_state );

  xo2iobuf key_state_pad( .Z(PADDI), .PAD(key_state));

  specify
    (key_state => PADDI) = (0:0:0,0:0:0);
    $width (posedge key_state, 0:0:0);
    $width (negedge key_state, 0:0:0);
  endspecify

endmodule

module u_speaker_sin2_sin_rom_0_2_0 ( input ADA12, ADA11, ADA10, ADA9, ADA8, 
    ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, output DOA3, DOA2, DOA1, DOA0, input 
    CEA, OCEA, CLKA );
  wire   GNDI, VCCI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, ADA9_dly, 
         ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, ADA2_dly, 
         CEA_dly, OCEA_dly;

  DP8KC_B \u_speaker/sin2/sin_rom_0_2_0_DP8KC ( .CEA(CEA_dly), .OCEA(OCEA_dly), 
    .CLKA(CLKA_dly), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), .CSA2(GNDI), 
    .RSTA(GNDI), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), 
    .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(GNDI), .DIA1(GNDI), 
    .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), .DIA5(GNDI), .DIA6(GNDI), 
    .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), .ADA1(GNDI), .ADA2(ADA2_dly), 
    .ADA3(ADA3_dly), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(), .DOA5(), 
    .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), .DOB3(), .DOB4(), 
    .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC_B ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, OCEB, 
    CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, DIA5, 
    DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, ADA8, 
    ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, DIB7, 
    DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, ADB10, 
    ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, DOA8, 
    DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 4;
  defparam INST10.DATA_WIDTH_B = 4;
  defparam INST10.GSR = "ENABLED";

    defparam INST10.INITVAL_00 = "0x176BB176BB176BA154AA154AA154AA154AA152991329913299132991328811088110881108811088";

    defparam INST10.INITVAL_01 = "0x1DCEE1DCEE1DADD1BADD1BADD1BADD1BADD1BADD1BACC198CC198CC198CC198CC198CB176BB176BB";

    defparam INST10.INITVAL_02 = "0x1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEEE1DCEE1DCEE1DCEE1DCEE1DCEE";

    defparam INST10.INITVAL_03 = "0x1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF";

    defparam INST10.INITVAL_04 = "0x1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF";

    defparam INST10.INITVAL_05 = "0x1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEF1FEFF";

    defparam INST10.INITVAL_06 = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_07 = "0x198CC198CC198CC198CC198CC198CC198CC198CC19ADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_08 = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADC198CC198CC198CC198CC198CC198CC198CC198CC198CC";

    defparam INST10.INITVAL_09 = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_0A = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_0B = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_0C = "0x198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC19ADD1BADD";

    defparam INST10.INITVAL_0D = "0x154BB176BB176BB176BB176BB176BB176BB176BB176BB176BB176BB176BB176BB178CC198CC198CC";

    defparam INST10.INITVAL_0E = "0x1329913299132991329913299134AA154AA154AA154AA154AA154AA154AA154AA154AA154AA154AA";

    defparam INST10.INITVAL_0F = "0x11088110881108811088110881108811088110881108811088110991329913299132991329913299";

    defparam INST10.INITVAL_10 = "0x0CC660CC660CC660CC660CC660CE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE78";

    defparam INST10.INITVAL_11 = "0x0AA550AA550AA550AA550AA550AA550AA550AA550AA550AA550AA660CC660CC660CC660CC660CC66";

    defparam INST10.INITVAL_12 = "0x06633066330664408844088440884408844088440884408844088440884408844088440884408A55";

    defparam INST10.INITVAL_13 = "0x04422044330663306633066330663306633066330663306633066330663306633066330663306633";

    defparam INST10.INITVAL_14 = "0x04422044220442204422044220442204422044220442204422044220442204422044220442204422";

    defparam INST10.INITVAL_15 = "0x04422044220442204422044220442204422044220442204422044220442204422044220442204422";

    defparam INST10.INITVAL_16 = "0x04422044220442204422044220442204422044220442204422044220442204422044220442204422";

    defparam INST10.INITVAL_17 = "0x06633066330663306633066330663306633066330663306422044220442204422044220442204422";

    defparam INST10.INITVAL_18 = "0x04422044220442204422044220442204422044330663306633066330663306633066330663306633";

    defparam INST10.INITVAL_19 = "0x04422044220442204422044220442204422044220442204422044220442204422044220442204422";

    defparam INST10.INITVAL_1A = "0x00000022110221102211022110221102211022110221102211022110221102211022110221102212";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x02211022110221102211022110200000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x08844088440663306633066330663306633064220442204422044220442204422044110221102211";

    defparam INST10.INITVAL_1F = "0x0EE770EE770EE770EE770EC660CC660CC660CC660CC550AA550AA550AA550AA55088440884408844";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "OUTREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module u_speaker_sin2_sin_rom_0_0_2 ( input ADA12, ADA11, ADA10, ADA9, ADA8, 
    ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, output DOA3, DOA2, DOA1, DOA0, input 
    CEA, OCEA, CLKA );
  wire   GNDI, VCCI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, ADA9_dly, 
         ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, ADA2_dly, 
         CEA_dly, OCEA_dly;

  DP8KC0372 \u_speaker/sin2/sin_rom_0_0_2_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(GNDI), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), .WEB(GNDI), 
    .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(GNDI), 
    .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), .DIA5(GNDI), 
    .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), .ADA1(GNDI), 
    .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), .ADA5(ADA5_dly), 
    .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), 
    .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), 
    .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), 
    .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), 
    .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), 
    .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), 
    .ADB12(GNDI), .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(), 
    .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), .DOB3(), 
    .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC0372 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 4;
  defparam INST10.DATA_WIDTH_B = 4;
  defparam INST10.GSR = "ENABLED";

    defparam INST10.INITVAL_00 = "0x138E106C9B1A0240D2BD1E2350F2AC1C0130AC89178EF004350CE8A178DE0022308A67134BC1BCF0";

    defparam INST10.INITVAL_01 = "0x030F61A8B213E6C072F51627D070E413C491C68D04CB0092D10D4E20D4E20B2D008EAE0287A1A036";

    defparam INST10.INITVAL_02 = "0x0C60D14C3F190401904016E2E128FA0A0B50145F126E70365E102A41ACF80122A0763B0763B07429";

    defparam INST10.INITVAL_03 = "0x08C89178EF024340AC78132AB178CC1BADD1BACC196BA152870CA43040FD194860840E1927405EC9";

    defparam INST10.INITVAL_04 = "0x0F6F4118041180411804118F30F6E20D2D008EBE02A8B1C24817C030D2CE0286917C0208E9B1BE13";

    defparam INST10.INITVAL_05 = "0x04CAE04EBF06EB0090D10B2E20D6F41181515C27160491A26A1E68C00A9E04CBF090C10B2E20D4F3";

    defparam INST10.INITVAL_06 = "0x08C8A1BE240D2BE0266917C140F4DF04C9C1E45819E26138030F4E10B2C008EBF06CAE04CAE04CAE";

    defparam INST10.INITVAL_07 = "0x1DEFF1FEFF0000102222066450AC77112AB198DE1E22308A68134CD1E0230AE8A19CF106A7917AF2";

    defparam INST10.INITVAL_08 = "0x174980EA430420F1D8BA130760A8330420F1DADC1749910E760CA4406622042100000F1FEFF1FEEE";

    defparam INST10.INITVAL_09 = "0x10E650862101EEC174980EC530420F1B8BA12E65084101FACB13076086211FCDB152860A83101EEC";

    defparam INST10.INITVAL_0A = "0x1129A154BB198CD1BADD1BCEE1DCEE1DADD1BADC198BB174A9130870EC65088320420F1FCDC17498";

    defparam INST10.INITVAL_0B = "0x08C9B1C0350F4CE00657136DF02657114CE002340D09B19AF0046450D09A178DE1E012046450AC77";

    defparam INST10.INITVAL_0C = "0x092D10B4E20D4E20D4E20D4E20D4E10B2C008EBF04C9C0067A1A24715A040F4D006C8B1C247138F1";

    defparam INST10.INITVAL_0D = "0x11C381C69E072E311C381A68D04ED20F8161605A1E89E070D10D60513C381826A1E68C02AAE06EC0";

    defparam INST10.INITVAL_0E = "0x13E5B02EC211C4A00CC20FA391EAB00D8281A69F0B4061627D050E313E4A00AB00D8171847D050D3";

    defparam INST10.INITVAL_0F = "0x0D8281CAB10FA391EAB10FC4A00CC211C4A00CC213E5B02ED313E5B02ED313E5B02ED313E5B02ED3";

    defparam INST10.INITVAL_10 = "0x072F51627D072F51627D072F51627D072F51627E094061848E094061849F0B6171A69F0B6281C8A0";

    defparam INST10.INITVAL_11 = "0x070E313C491E8A00B6061827D050E313E5A00CB10FA381C8A00B6171A69E094061848E092F51627D";

    defparam INST10.INITVAL_12 = "0x092D20D6F411A1615E481A47B00AAF070D20F8161605A1E89E072E311A381A48D04ED20FA281A48D";

    defparam INST10.INITVAL_13 = "0x0287919E25114D006C9C0066919E3613A040F4E10B2C008EBF04CAE04CAE04CAE04CAE04CBF06EC0";

    defparam INST10.INITVAL_14 = "0x134BB19AEE1E012068560F0AB19AE0026450F0AC1BE0208C8917AF106A7917A0208C9B1A0250F4CF";

    defparam INST10.INITVAL_15 = "0x0EC540641101EEE1B8CB15499110770CC550A8440663306622044220443306633088450AC660EE89";

    defparam INST10.INITVAL_16 = "0x0420F1B8BA10E650641F1DACA13075086101FCCB152760A83101EED174980EC540420F1DACB15288";

    defparam INST10.INITVAL_17 = "0x0421102211000001FEEE1DADC196AA132870EC540662101EED1B8BA130760A82101EED196980EC54";

    defparam INST10.INITVAL_18 = "0x02657136DF02446112BD1C01308C78156CD1DE12068450CE89134BB19ADE1DEFF000010221102222";

    defparam INST10.INITVAL_19 = "0x0D4E20D4E20D4D10B2C008EBF04C9D0087A1C24817C140F4E106C9C1E45715AF20AEAC1C236114CE";

    defparam INST10.INITVAL_1A = "0x02CAE04EBF090C10B4E20F60411A1615E37180591C46B1E88C02AAE04EBF070C00B2D10B2E20D4E2";

    defparam INST10.INITVAL_1B = "0x1E2350F2CE00457158F208EAD0045819E25116F20B2C006EAE04A9D0288C0088C0088C0088C02A9D";

    defparam INST10.INITVAL_1C = "0x082EC12E4201CCA10C43020ED196A910E660AA440863306634088550CE78134BC1BCF104857114CD";

    defparam INST10.INITVAL_1D = "0x1CCD51AAD51AAD61CE080343C0DE8216AF905A7116C0B0A0B6038721D25019040190411B46301AA7";

    defparam INST10.INITVAL_1E = "0x1A036138F20D2C006EBE04CAE04CAF06EC00B4E311A271847C050D313E5B02ED41427E0B83A030F7";

    defparam INST10.INITVAL_1F = "0x024340AC79156CD1DE0206856112AB1BC0104857114BD1E0240CE9B1BE130AEAC1C0350F4DF0487A";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "OUTREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module u_speaker_sin2_sin_rom_0_1_1 ( input ADA12, ADA11, ADA10, ADA9, ADA8, 
    ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, output DOA3, DOA2, DOA1, DOA0, input 
    CEA, OCEA, CLKA );
  wire   GNDI, VCCI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, ADA9_dly, 
         ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, ADA2_dly, 
         CEA_dly, OCEA_dly;

  DP8KC0373 \u_speaker/sin2/sin_rom_0_1_1_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(GNDI), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), .WEB(GNDI), 
    .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(GNDI), 
    .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), .DIA5(GNDI), 
    .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), .ADA1(GNDI), 
    .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), .ADA5(ADA5_dly), 
    .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), 
    .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), 
    .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), 
    .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), 
    .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), 
    .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), 
    .ADB12(GNDI), .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(), 
    .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), .DOB3(), 
    .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC0373 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 4;
  defparam INST10.DATA_WIDTH_B = 4;
  defparam INST10.GSR = "ENABLED";

    defparam INST10.INITVAL_00 = "0x10E660A8320220F1DACB154980EC540662101EED196A9130760A832020FE1DACB152870CA4304200";

    defparam INST10.INITVAL_01 = "0x0A8330441101EFE1DACC176A9130770CA5406621020FF1DACC1749910E660A8330420F1FCDC176A9";

    defparam INST10.INITVAL_02 = "0x198CB176BA154AA13299110870EE660CC550A8430662204210000FF1DCDD1B8CB174A9130870EC65";

    defparam INST10.INITVAL_03 = "0x1DCEE1DCEE1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEEE1DCEE1DCED1BADD1B8CC";

    defparam INST10.INITVAL_04 = "0x022120443306644088550AA560CC670EE781108813299134AA154BB176BB198CC198DD1BADD1BAEE";

    defparam INST10.INITVAL_05 = "0x00000022110442306634088450AA560CC770EE8811299134AA156BB198CC1BADD1DCEF1FEF000001";

    defparam INST10.INITVAL_06 = "0x0663306644088440AA550AA660CC660EE770F08811099132AA154AB176BC198CC1BADD1DCEE1FEFF";

    defparam INST10.INITVAL_07 = "0x1DCEE1DCEE1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1E00000000000000021102211022120442204423";

    defparam INST10.INITVAL_08 = "0x0221102211022100000000000000000000F1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFE1DCEE1DCEE";

    defparam INST10.INITVAL_09 = "0x0CC660CC660CA550AA550AA550AA5408844088440884406633066330663304422044220442204211";

    defparam INST10.INITVAL_0A = "0x0EE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE760CC660CC66";

    defparam INST10.INITVAL_0B = "0x022110242204422066330663308844088440AA550AA550AA560CC660CC660CC660CE770EE770EE77";

    defparam INST10.INITVAL_0C = "0x06634088450AA560CC670EE78110891329A154AA176BB198CC19ADD1BAEE1DCEF1FEFF1E00000001";

    defparam INST10.INITVAL_0D = "0x1FE0000211044230664408A550CC670EE8811299134AA176BC198DD1BAEE1DEFF1E0000221104423";

    defparam INST10.INITVAL_0E = "0x11099154AB176CC1BADE1DCFF1E0010222204633088550AC660EE7811099154AB176CC19ADD1DCEF";

    defparam INST10.INITVAL_0F = "0x00011024230664408A560CC7711089132AA176BC198DD1DCEF1FE000221204433088450AA660EE78";

    defparam INST10.INITVAL_10 = "0x11089134AA176BC19ADD1DCEF1E0000221204633088550AC660EE8811299154BB178CC1BAEE1DEF0";

    defparam INST10.INITVAL_11 = "0x0221204433068450AA660CE7711089132AA176BC198DD1BCEF1FE000021104433068440AA560CE77";

    defparam INST10.INITVAL_12 = "0x1BADE1DCEF1FE00000110242206633088450AA660CE770F0881329A154BB178CC1BADE1DCFF1E000";

    defparam INST10.INITVAL_13 = "0x1FEFF1FE000000102211044220443306644088450AA560CC660EE771108813299154AA176BB198CD";

    defparam INST10.INITVAL_14 = "0x11088110881129913299132991329A154AA154AA154BB176BB176BC198CC198DD1BADD1BCEE1DCEE";

    defparam INST10.INITVAL_15 = "0x13299132991308811088110881108811088110881108811088110881108811088110881108811088";

    defparam INST10.INITVAL_16 = "0x1DCED1BADD1BADD1BADC198CC198CC198CC176BB176BB176BB174AA154AA154AA154A91329913299";

    defparam INST10.INITVAL_17 = "0x02211022110221100000000000000000000000000000001EFF1FEFF1FEFF1FEFF1FCEE1DCEE1DCEE";

    defparam INST10.INITVAL_18 = "0x1BADD1BADD1DCEE1DCEE1DEFF1FEFF1FEFF1FE000000000000000000000000000022110221102211";

    defparam INST10.INITVAL_19 = "0x00001022120442306634088440AA550CC660CE770EE881108913299134AA154AB176BB178CC198CC";

    defparam INST10.INITVAL_1A = "0x1FEFF00000022120442306644088550AA660CE770F08811299154AA176BB198CD1BADE1DCEF1FEF0";

    defparam INST10.INITVAL_1B = "0x02422044220663306634088440AA550AA660CC670EE781108813299154AA176BB198CC1BADD1DCEE";

    defparam INST10.INITVAL_1C = "0x06622044220421102211022000000000000000000000000000000000000000000000010221102211";

    defparam INST10.INITVAL_1D = "0x132880EE660AA44066320421001EFF1DCDD1B8CC176BA15499130880EE770CC660AA550884408633";

    defparam INST10.INITVAL_1E = "0x0AA43042001FCDD196A9130760CA430641101EEE1B8CB1549810E660A84306411000FE1DADC196AA";

    defparam INST10.INITVAL_1F = "0x1FCDC174980EC540642101EED196A910E760A832020FE1BACB152870CA54064101FEED196A913076";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "OUTREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module u_speaker_sin1_sin_rom_0_2_0 ( input ADA12, ADA11, ADA10, ADA9, ADA8, 
    ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, output DOA3, DOA2, DOA1, DOA0, input 
    CEA, OCEA, CLKA );
  wire   GNDI, VCCI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, ADA9_dly, 
         ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, ADA2_dly, 
         CEA_dly, OCEA_dly;

  DP8KC0374 \u_speaker/sin1/sin_rom_0_2_0_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(GNDI), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), .WEB(GNDI), 
    .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(GNDI), 
    .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), .DIA5(GNDI), 
    .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), .ADA1(GNDI), 
    .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), .ADA5(ADA5_dly), 
    .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), 
    .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), 
    .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), 
    .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), 
    .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), 
    .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), 
    .ADB12(GNDI), .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(), 
    .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), .DOB3(), 
    .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC0374 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 4;
  defparam INST10.DATA_WIDTH_B = 4;
  defparam INST10.GSR = "ENABLED";

    defparam INST10.INITVAL_00 = "0x176BB176BB176BA154AA154AA154AA154AA152991329913299132991328811088110881108811088";

    defparam INST10.INITVAL_01 = "0x1DCEE1DCEE1DADD1BADD1BADD1BADD1BADD1BADD1BACC198CC198CC198CC198CC198CB176BB176BB";

    defparam INST10.INITVAL_02 = "0x1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEEE1DCEE1DCEE1DCEE1DCEE1DCEE";

    defparam INST10.INITVAL_03 = "0x1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF";

    defparam INST10.INITVAL_04 = "0x1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF";

    defparam INST10.INITVAL_05 = "0x1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEE1DCEF1FEFF";

    defparam INST10.INITVAL_06 = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_07 = "0x198CC198CC198CC198CC198CC198CC198CC198CC19ADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_08 = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADC198CC198CC198CC198CC198CC198CC198CC198CC198CC";

    defparam INST10.INITVAL_09 = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_0A = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_0B = "0x1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD1BADD";

    defparam INST10.INITVAL_0C = "0x198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC198CC19ADD1BADD";

    defparam INST10.INITVAL_0D = "0x154BB176BB176BB176BB176BB176BB176BB176BB176BB176BB176BB176BB176BB178CC198CC198CC";

    defparam INST10.INITVAL_0E = "0x1329913299132991329913299134AA154AA154AA154AA154AA154AA154AA154AA154AA154AA154AA";

    defparam INST10.INITVAL_0F = "0x11088110881108811088110881108811088110881108811088110991329913299132991329913299";

    defparam INST10.INITVAL_10 = "0x0CC660CC660CC660CC660CC660CE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE78";

    defparam INST10.INITVAL_11 = "0x0AA550AA550AA550AA550AA550AA550AA550AA550AA550AA550AA660CC660CC660CC660CC660CC66";

    defparam INST10.INITVAL_12 = "0x06633066330664408844088440884408844088440884408844088440884408844088440884408A55";

    defparam INST10.INITVAL_13 = "0x04422044330663306633066330663306633066330663306633066330663306633066330663306633";

    defparam INST10.INITVAL_14 = "0x04422044220442204422044220442204422044220442204422044220442204422044220442204422";

    defparam INST10.INITVAL_15 = "0x04422044220442204422044220442204422044220442204422044220442204422044220442204422";

    defparam INST10.INITVAL_16 = "0x04422044220442204422044220442204422044220442204422044220442204422044220442204422";

    defparam INST10.INITVAL_17 = "0x06633066330663306633066330663306633066330663306422044220442204422044220442204422";

    defparam INST10.INITVAL_18 = "0x04422044220442204422044220442204422044330663306633066330663306633066330663306633";

    defparam INST10.INITVAL_19 = "0x04422044220442204422044220442204422044220442204422044220442204422044220442204422";

    defparam INST10.INITVAL_1A = "0x00000022110221102211022110221102211022110221102211022110221102211022110221102212";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x02211022110221102211022110200000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x08844088440663306633066330663306633064220442204422044220442204422044110221102211";

    defparam INST10.INITVAL_1F = "0x0EE770EE770EE770EE770EC660CC660CC660CC660CC550AA550AA550AA550AA55088440884408844";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "OUTREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module u_speaker_sin1_sin_rom_0_1_1 ( input ADA12, ADA11, ADA10, ADA9, ADA8, 
    ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, output DOA3, DOA2, DOA1, DOA0, input 
    CEA, OCEA, CLKA );
  wire   GNDI, VCCI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, ADA9_dly, 
         ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, ADA2_dly, 
         CEA_dly, OCEA_dly;

  DP8KC0375 \u_speaker/sin1/sin_rom_0_1_1_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(GNDI), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), .WEB(GNDI), 
    .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(GNDI), 
    .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), .DIA5(GNDI), 
    .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), .ADA1(GNDI), 
    .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), .ADA5(ADA5_dly), 
    .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), 
    .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), 
    .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), 
    .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), 
    .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), 
    .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), 
    .ADB12(GNDI), .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(), 
    .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), .DOB3(), 
    .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC0375 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 4;
  defparam INST10.DATA_WIDTH_B = 4;
  defparam INST10.GSR = "ENABLED";

    defparam INST10.INITVAL_00 = "0x10E660A8320220F1DACB154980EC540662101EED196A9130760A832020FE1DACB152870CA4304200";

    defparam INST10.INITVAL_01 = "0x0A8330441101EFE1DACC176A9130770CA5406621020FF1DACC1749910E660A8330420F1FCDC176A9";

    defparam INST10.INITVAL_02 = "0x198CB176BA154AA13299110870EE660CC550A8430662204210000FF1DCDD1B8CB174A9130870EC65";

    defparam INST10.INITVAL_03 = "0x1DCEE1DCEE1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEEE1DCEE1DCED1BADD1B8CC";

    defparam INST10.INITVAL_04 = "0x022120443306644088550AA560CC670EE781108813299134AA154BB176BB198CC198DD1BADD1BAEE";

    defparam INST10.INITVAL_05 = "0x00000022110442306634088450AA560CC770EE8811299134AA156BB198CC1BADD1DCEF1FEF000001";

    defparam INST10.INITVAL_06 = "0x0663306644088440AA550AA660CC660EE770F08811099132AA154AB176BC198CC1BADD1DCEE1FEFF";

    defparam INST10.INITVAL_07 = "0x1DCEE1DCEE1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1E00000000000000021102211022120442204423";

    defparam INST10.INITVAL_08 = "0x0221102211022100000000000000000000F1FEFF1FEFF1FEFF1FEFF1FEFF1FEFF1FEFE1DCEE1DCEE";

    defparam INST10.INITVAL_09 = "0x0CC660CC660CA550AA550AA550AA5408844088440884406633066330663304422044220442204211";

    defparam INST10.INITVAL_0A = "0x0EE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE770EE760CC660CC66";

    defparam INST10.INITVAL_0B = "0x022110242204422066330663308844088440AA550AA550AA560CC660CC660CC660CE770EE770EE77";

    defparam INST10.INITVAL_0C = "0x06634088450AA560CC670EE78110891329A154AA176BB198CC19ADD1BAEE1DCEF1FEFF1E00000001";

    defparam INST10.INITVAL_0D = "0x1FE0000211044230664408A550CC670EE8811299134AA176BC198DD1BAEE1DEFF1E0000221104423";

    defparam INST10.INITVAL_0E = "0x11099154AB176CC1BADE1DCFF1E0010222204633088550AC660EE7811099154AB176CC19ADD1DCEF";

    defparam INST10.INITVAL_0F = "0x00011024230664408A560CC7711089132AA176BC198DD1DCEF1FE000221204433088450AA660EE78";

    defparam INST10.INITVAL_10 = "0x11089134AA176BC19ADD1DCEF1E0000221204633088550AC660EE8811299154BB178CC1BAEE1DEF0";

    defparam INST10.INITVAL_11 = "0x0221204433068450AA660CE7711089132AA176BC198DD1BCEF1FE000021104433068440AA560CE77";

    defparam INST10.INITVAL_12 = "0x1BADE1DCEF1FE00000110242206633088450AA660CE770F0881329A154BB178CC1BADE1DCFF1E000";

    defparam INST10.INITVAL_13 = "0x1FEFF1FE000000102211044220443306644088450AA560CC660EE771108813299154AA176BB198CD";

    defparam INST10.INITVAL_14 = "0x11088110881129913299132991329A154AA154AA154BB176BB176BC198CC198DD1BADD1BCEE1DCEE";

    defparam INST10.INITVAL_15 = "0x13299132991308811088110881108811088110881108811088110881108811088110881108811088";

    defparam INST10.INITVAL_16 = "0x1DCED1BADD1BADD1BADC198CC198CC198CC176BB176BB176BB174AA154AA154AA154A91329913299";

    defparam INST10.INITVAL_17 = "0x02211022110221100000000000000000000000000000001EFF1FEFF1FEFF1FEFF1FCEE1DCEE1DCEE";

    defparam INST10.INITVAL_18 = "0x1BADD1BADD1DCEE1DCEE1DEFF1FEFF1FEFF1FE000000000000000000000000000022110221102211";

    defparam INST10.INITVAL_19 = "0x00001022120442306634088440AA550CC660CE770EE881108913299134AA154AB176BB178CC198CC";

    defparam INST10.INITVAL_1A = "0x1FEFF00000022120442306644088550AA660CE770F08811299154AA176BB198CD1BADE1DCEF1FEF0";

    defparam INST10.INITVAL_1B = "0x02422044220663306634088440AA550AA660CC670EE781108813299154AA176BB198CC1BADD1DCEE";

    defparam INST10.INITVAL_1C = "0x06622044220421102211022000000000000000000000000000000000000000000000010221102211";

    defparam INST10.INITVAL_1D = "0x132880EE660AA44066320421001EFF1DCDD1B8CC176BA15499130880EE770CC660AA550884408633";

    defparam INST10.INITVAL_1E = "0x0AA43042001FCDD196A9130760CA430641101EEE1B8CB1549810E660A84306411000FE1DADC196AA";

    defparam INST10.INITVAL_1F = "0x1FCDC174980EC540642101EED196A910E760A832020FE1BACB152870CA54064101FEED196A913076";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "OUTREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module u_speaker_sin1_sin_rom_0_0_2 ( input ADA12, ADA11, ADA10, ADA9, ADA8, 
    ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, output DOA3, DOA2, DOA1, DOA0, input 
    CEA, OCEA, CLKA );
  wire   GNDI, VCCI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, ADA9_dly, 
         ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, ADA2_dly, 
         CEA_dly, OCEA_dly;

  DP8KC0376 \u_speaker/sin1/sin_rom_0_0_2_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(GNDI), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), .WEB(GNDI), 
    .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(GNDI), 
    .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), .DIA5(GNDI), 
    .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), .ADA1(GNDI), 
    .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), .ADA5(ADA5_dly), 
    .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), 
    .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), 
    .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), 
    .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), 
    .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), 
    .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), 
    .ADB12(GNDI), .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(), 
    .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), .DOB3(), 
    .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC0376 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 4;
  defparam INST10.DATA_WIDTH_B = 4;
  defparam INST10.GSR = "ENABLED";

    defparam INST10.INITVAL_00 = "0x138E106C9B1A0240D2BD1E2350F2AC1C0130AC89178EF004350CE8A178DE0022308A67134BC1BCF0";

    defparam INST10.INITVAL_01 = "0x030F61A8B213E6C072F51627D070E413C491C68D04CB0092D10D4E20D4E20B2D008EAE0287A1A036";

    defparam INST10.INITVAL_02 = "0x0C60D14C3F190401904016E2E128FA0A0B50145F126E70365E102A41ACF80122A0763B0763B07429";

    defparam INST10.INITVAL_03 = "0x08C89178EF024340AC78132AB178CC1BADD1BACC196BA152870CA43040FD194860840E1927405EC9";

    defparam INST10.INITVAL_04 = "0x0F6F4118041180411804118F30F6E20D2D008EBE02A8B1C24817C030D2CE0286917C0208E9B1BE13";

    defparam INST10.INITVAL_05 = "0x04CAE04EBF06EB0090D10B2E20D6F41181515C27160491A26A1E68C00A9E04CBF090C10B2E20D4F3";

    defparam INST10.INITVAL_06 = "0x08C8A1BE240D2BE0266917C140F4DF04C9C1E45819E26138030F4E10B2C008EBF06CAE04CAE04CAE";

    defparam INST10.INITVAL_07 = "0x1DEFF1FEFF0000102222066450AC77112AB198DE1E22308A68134CD1E0230AE8A19CF106A7917AF2";

    defparam INST10.INITVAL_08 = "0x174980EA430420F1D8BA130760A8330420F1DADC1749910E760CA4406622042100000F1FEFF1FEEE";

    defparam INST10.INITVAL_09 = "0x10E650862101EEC174980EC530420F1B8BA12E65084101FACB13076086211FCDB152860A83101EEC";

    defparam INST10.INITVAL_0A = "0x1129A154BB198CD1BADD1BCEE1DCEE1DADD1BADC198BB174A9130870EC65088320420F1FCDC17498";

    defparam INST10.INITVAL_0B = "0x08C9B1C0350F4CE00657136DF02657114CE002340D09B19AF0046450D09A178DE1E012046450AC77";

    defparam INST10.INITVAL_0C = "0x092D10B4E20D4E20D4E20D4E20D4E10B2C008EBF04C9C0067A1A24715A040F4D006C8B1C247138F1";

    defparam INST10.INITVAL_0D = "0x11C381C69E072E311C381A68D04ED20F8161605A1E89E070D10D60513C381826A1E68C02AAE06EC0";

    defparam INST10.INITVAL_0E = "0x13E5B02EC211C4A00CC20FA391EAB00D8281A69F0B4061627D050E313E4A00AB00D8171847D050D3";

    defparam INST10.INITVAL_0F = "0x0D8281CAB10FA391EAB10FC4A00CC211C4A00CC213E5B02ED313E5B02ED313E5B02ED313E5B02ED3";

    defparam INST10.INITVAL_10 = "0x072F51627D072F51627D072F51627D072F51627E094061848E094061849F0B6171A69F0B6281C8A0";

    defparam INST10.INITVAL_11 = "0x070E313C491E8A00B6061827D050E313E5A00CB10FA381C8A00B6171A69E094061848E092F51627D";

    defparam INST10.INITVAL_12 = "0x092D20D6F411A1615E481A47B00AAF070D20F8161605A1E89E072E311A381A48D04ED20FA281A48D";

    defparam INST10.INITVAL_13 = "0x0287919E25114D006C9C0066919E3613A040F4E10B2C008EBF04CAE04CAE04CAE04CAE04CBF06EC0";

    defparam INST10.INITVAL_14 = "0x134BB19AEE1E012068560F0AB19AE0026450F0AC1BE0208C8917AF106A7917A0208C9B1A0250F4CF";

    defparam INST10.INITVAL_15 = "0x0EC540641101EEE1B8CB15499110770CC550A8440663306622044220443306633088450AC660EE89";

    defparam INST10.INITVAL_16 = "0x0420F1B8BA10E650641F1DACA13075086101FCCB152760A83101EED174980EC540420F1DACB15288";

    defparam INST10.INITVAL_17 = "0x0421102211000001FEEE1DADC196AA132870EC540662101EED1B8BA130760A82101EED196980EC54";

    defparam INST10.INITVAL_18 = "0x02657136DF02446112BD1C01308C78156CD1DE12068450CE89134BB19ADE1DEFF000010221102222";

    defparam INST10.INITVAL_19 = "0x0D4E20D4E20D4D10B2C008EBF04C9D0087A1C24817C140F4E106C9C1E45715AF20AEAC1C236114CE";

    defparam INST10.INITVAL_1A = "0x02CAE04EBF090C10B4E20F60411A1615E37180591C46B1E88C02AAE04EBF070C00B2D10B2E20D4E2";

    defparam INST10.INITVAL_1B = "0x1E2350F2CE00457158F208EAD0045819E25116F20B2C006EAE04A9D0288C0088C0088C0088C02A9D";

    defparam INST10.INITVAL_1C = "0x082EC12E4201CCA10C43020ED196A910E660AA440863306634088550CE78134BC1BCF104857114CD";

    defparam INST10.INITVAL_1D = "0x1CCD51AAD51AAD61CE080343C0DE8216AF905A7116C0B0A0B6038721D25019040190411B46301AA7";

    defparam INST10.INITVAL_1E = "0x1A036138F20D2C006EBE04CAE04CAF06EC00B4E311A271847C050D313E5B02ED41427E0B83A030F7";

    defparam INST10.INITVAL_1F = "0x024340AC79156CD1DE0206856112AB1BC0104857114BD1E0240CE9B1BE130AEAC1C0350F4DF0487A";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "OUTREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule

module u_clk_pll_PLLInst_0 ( input CLKI, CLKFB, output CLKOP );
  wire   GNDI;

  EHXPLLJ_B \u_clk_pll/PLLInst_0_EHXPLLJ ( .CLKI(CLKI), .CLKFB(CLKFB), 
    .PHASESEL1(GNDI), .PHASESEL0(GNDI), .PHASEDIR(GNDI), .PHASESTEP(GNDI), 
    .LOADREG(GNDI), .STDBY(GNDI), .PLLWAKESYNC(GNDI), .RST(GNDI), 
    .RESETM(GNDI), .RESETC(GNDI), .RESETD(GNDI), .ENCLKOP(GNDI), 
    .ENCLKOS(GNDI), .ENCLKOS2(GNDI), .ENCLKOS3(GNDI), .PLLCLK(GNDI), 
    .PLLRST(GNDI), .PLLSTB(GNDI), .PLLWE(GNDI), .PLLDATI7(GNDI), 
    .PLLDATI6(GNDI), .PLLDATI5(GNDI), .PLLDATI4(GNDI), .PLLDATI3(GNDI), 
    .PLLDATI2(GNDI), .PLLDATI1(GNDI), .PLLDATI0(GNDI), .PLLADDR4(GNDI), 
    .PLLADDR3(GNDI), .PLLADDR2(GNDI), .PLLADDR1(GNDI), .PLLADDR0(GNDI), 
    .CLKOP(CLKOP), .CLKOS(), .CLKOS2(), .CLKOS3(), .LOCK(), .INTLOCK(), 
    .REFCLK(), .CLKINTFB(), .DPHSRC(), .PLLDATO7(), .PLLDATO6(), .PLLDATO5(), 
    .PLLDATO4(), .PLLDATO3(), .PLLDATO2(), .PLLDATO1(), .PLLDATO0(), .PLLACK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKI => CLKOP) = (0:0:0,0:0:0);
    (CLKFB => CLKOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module EHXPLLJ_B ( input CLKI, CLKFB, PHASESEL1, PHASESEL0, PHASEDIR, 
    PHASESTEP, LOADREG, STDBY, PLLWAKESYNC, RST, RESETM, RESETC, RESETD, 
    ENCLKOP, ENCLKOS, ENCLKOS2, ENCLKOS3, PLLCLK, PLLRST, PLLSTB, PLLWE, 
    PLLDATI7, PLLDATI6, PLLDATI5, PLLDATI4, PLLDATI3, PLLDATI2, PLLDATI1, 
    PLLDATI0, PLLADDR4, PLLADDR3, PLLADDR2, PLLADDR1, PLLADDR0, output CLKOP, 
    CLKOS, CLKOS2, CLKOS3, LOCK, INTLOCK, REFCLK, CLKINTFB, DPHSRC, PLLDATO7, 
    PLLDATO6, PLLDATO5, PLLDATO4, PLLDATO3, PLLDATO2, PLLDATO1, PLLDATO0, 
    PLLACK );

  EHXPLLJ INST10( .CLKI(CLKI), .CLKFB(CLKFB), .PHASESEL1(PHASESEL1), 
    .PHASESEL0(PHASESEL0), .PHASEDIR(PHASEDIR), .PHASESTEP(PHASESTEP), 
    .LOADREG(LOADREG), .STDBY(STDBY), .PLLWAKESYNC(PLLWAKESYNC), .RST(RST), 
    .RESETM(RESETM), .RESETC(RESETC), .RESETD(RESETD), .ENCLKOP(ENCLKOP), 
    .ENCLKOS(ENCLKOS), .ENCLKOS2(ENCLKOS2), .ENCLKOS3(ENCLKOS3), 
    .PLLCLK(PLLCLK), .PLLRST(PLLRST), .PLLSTB(PLLSTB), .PLLWE(PLLWE), 
    .PLLADDR4(PLLADDR4), .PLLADDR3(PLLADDR3), .PLLADDR2(PLLADDR2), 
    .PLLADDR1(PLLADDR1), .PLLADDR0(PLLADDR0), .PLLDATI7(PLLDATI7), 
    .PLLDATI6(PLLDATI6), .PLLDATI5(PLLDATI5), .PLLDATI4(PLLDATI4), 
    .PLLDATI3(PLLDATI3), .PLLDATI2(PLLDATI2), .PLLDATI1(PLLDATI1), 
    .PLLDATI0(PLLDATI0), .CLKOP(CLKOP), .CLKOS(CLKOS), .CLKOS2(CLKOS2), 
    .CLKOS3(CLKOS3), .LOCK(LOCK), .REFCLK(REFCLK), .INTLOCK(INTLOCK), 
    .PLLDATO7(PLLDATO7), .PLLDATO6(PLLDATO6), .PLLDATO5(PLLDATO5), 
    .PLLDATO4(PLLDATO4), .PLLDATO3(PLLDATO3), .PLLDATO2(PLLDATO2), 
    .PLLDATO1(PLLDATO1), .PLLDATO0(PLLDATO0), .PLLACK(PLLACK), .DPHSRC(DPHSRC), 
    .CLKINTFB(CLKINTFB));
  defparam INST10.CLKFB_DIV = 4;
  defparam INST10.CLKI_DIV = 1;
  defparam INST10.CLKOP_CPHASE = 10;
  defparam INST10.CLKOP_DIV = 11;
  defparam INST10.CLKOP_ENABLE = "ENABLED";
  defparam INST10.CLKOP_FPHASE = 0;
  defparam INST10.CLKOP_TRIM_DELAY = 0;
  defparam INST10.CLKOP_TRIM_POL = "RISING";
  defparam INST10.CLKOS2_CPHASE = 0;
  defparam INST10.CLKOS2_DIV = 1;
  defparam INST10.CLKOS2_ENABLE = "DISABLED";
  defparam INST10.CLKOS2_FPHASE = 0;
  defparam INST10.CLKOS3_CPHASE = 0;
  defparam INST10.CLKOS3_DIV = 1;
  defparam INST10.CLKOS3_ENABLE = "DISABLED";
  defparam INST10.CLKOS3_FPHASE = 0;
  defparam INST10.CLKOS_CPHASE = 0;
  defparam INST10.CLKOS_DIV = 1;
  defparam INST10.CLKOS_ENABLE = "DISABLED";
  defparam INST10.CLKOS_FPHASE = 0;
  defparam INST10.CLKOS_TRIM_DELAY = 0;
  defparam INST10.CLKOS_TRIM_POL = "FALLING";
  defparam INST10.DCRST_ENA = "DISABLED";
  defparam INST10.DDRST_ENA = "DISABLED";
  defparam INST10.DPHASE_SOURCE = "DISABLED";
  defparam INST10.FEEDBK_PATH = "CLKOP";
  defparam INST10.FRACN_DIV = 0;
  defparam INST10.FRACN_ENABLE = "DISABLED";
  defparam INST10.INTFB_WAKE = "DISABLED";
  defparam INST10.MRST_ENA = "DISABLED";
  defparam INST10.OUTDIVIDER_MUXA2 = "DIVA";
  defparam INST10.OUTDIVIDER_MUXB2 = "DIVB";
  defparam INST10.OUTDIVIDER_MUXC2 = "DIVC";
  defparam INST10.OUTDIVIDER_MUXD2 = "DIVD";
  defparam INST10.PLLRST_ENA = "DISABLED";
  defparam INST10.PLL_LOCK_MODE = 0;
  defparam INST10.PLL_USE_WB = "DISABLED";
  defparam INST10.PREDIVIDER_MUXA1 = 0;
  defparam INST10.PREDIVIDER_MUXB1 = 0;
  defparam INST10.PREDIVIDER_MUXC1 = 0;
  defparam INST10.PREDIVIDER_MUXD1 = 0;
  defparam INST10.STDBY_ENABLE = "DISABLED";
  defparam INST10.VCO_BYPASS_A0 = "DISABLED";
  defparam INST10.VCO_BYPASS_B0 = "DISABLED";
  defparam INST10.VCO_BYPASS_C0 = "DISABLED";
  defparam INST10.VCO_BYPASS_D0 = "DISABLED";
endmodule
